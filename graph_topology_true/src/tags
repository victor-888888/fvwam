!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
//	string_mod.F90	/^  interface operator(\/\/)/;"	i	module:string_mod
30	wam_source_module.F90	/^   30 X2 = 2.0E0*X$/;"	l	subroutine:KZEONE	file:
50	wam_source_module.F90	/^   50 RTERM = 1.0E0$/;"	l	subroutine:KZEONE	file:
=	string_mod.F90	/^  interface assignment(=)/;"	i	module:string_mod
A	initial_mod.F90	/^REAL/;"	L	subroutine:FETCH_LAW	file:
ABMAX	wam_source_module.F90	/^      REAL(real_kind),    PARAMETER :: ABMAX=/;"	L	subroutine:TABU_SWELLFT	file:
ABMAX	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: ABMAX /;"	L	subroutine:SINPUT_ARD_OPENACC	file:
ABMIN	wam_source_module.F90	/^      REAL(real_kind),    PARAMETER :: ABMIN=/;"	L	subroutine:TABU_SWELLFT	file:
ABMIN	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: ABMIN /;"	L	subroutine:SINPUT_ARD_OPENACC	file:
ABR	wam_source_module.F90	/^      REAL(real_kind) :: ABR,/;"	L	subroutine:TABU_SWELLFT	file:
ABRLOG	wam_source_module.F90	/^      REAL(real_kind) :: ABR,ABRLOG,/;"	L	subroutine:TABU_SWELLFT	file:
ABS_TAUWSHELTER	wam_source_module.F90	/^REAL(real_kind) :: AVG_GST, ABS_TAUWSHELTER /;"	L	subroutine:SINPUT_ARD_OPENACC	file:
ACD	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: ACD=/;"	L	subroutine:AIRSEA	file:
ACD	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: ACD=/;"	L	subroutine:AIRSEA_OPENACC	file:
ACL1	wam_source_module.F90	/^REAL(real_kind)    :: ACL1 /;"	v	module:WAM_SOURCE_MODULE
ACL2	wam_source_module.F90	/^REAL(real_kind)    :: ACL2 /;"	v	module:WAM_SOURCE_MODULE
AD	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,1)) :: AD$/;"	L	subroutine:SNONLIN	file:
AD	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,1)) :: AD$/;"	L	subroutine:SNONLIN_OPENACC	file:
AF11	wam_source_module.F90	/^REAL(real_kind),   ALLOCATABLE, DIMENSION(:)   :: AF11 /;"	v	module:WAM_SOURCE_MODULE
AIRSEA	wam_source_module.F90	/^SUBROUTINE AIRSEA /;"	s	module:WAM_SOURCE_MODULE
AIRSEA_OPENACC	wam_source_module.F90	/^SUBROUTINE AIRSEA_OPENACC /;"	s	module:WAM_SOURCE_MODULE
AKM1	wam_source_module.F90	/^REAL :: AKM1,/;"	L	subroutine:IMPHFTAIL_OPENACC	file:
AKMEAN	wam_source_module.F90	/^REAL(real_kind)    :: AKMEAN(/;"	L	subroutine:IMPLSCH	file:
AKMEAN	wam_source_module.F90	/^REAL(real_kind), INTENT(IN)    :: AKMEAN /;"	L	subroutine:SNONLIN	file:
AKMEAN	wam_source_module.F90	/^REAL(real_kind), INTENT(IN)    :: AKMEAN /;"	L	subroutine:SNONLIN_OPENACC	file:
AKP	wave_propag_mod.F90	/^  REAL :: AKP,/;"	L	function:wave_numb	file:
AL11	wam_source_module.F90	/^REAL(real_kind)    :: DELTHA, CL1, CL2, AL11,/;"	L	subroutine:NLWEIGT	file:
AL12	wam_source_module.F90	/^REAL(real_kind)    :: DELTHA, CL1, CL2, AL11, AL12,/;"	L	subroutine:NLWEIGT	file:
ALAMD	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: ALAMD /;"	L	subroutine:NLWEIGT	file:
ALPH	wam_source_module.F90	/^REAL :: ALPH,/;"	L	subroutine:INIT_SNONLIN	file:
ALPHA	wam_source_module.F90	/^REAL(real_kind)            :: ALPHA /;"	v	module:WAM_SOURCE_MODULE
ALPHA	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: ALPHA /;"	L	subroutine:SFBRK	file:
ALPHA	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: ALPHA /;"	L	subroutine:SFBRK_OPENACC	file:
ALPHAJ	initial_mod.F90	/^REAL(real_kind), INTENT(IN)  :: ALPHAJ(/;"	L	subroutine:JONSWAP	file:
ALPHAOG	wam_source_module.F90	/^REAL(real_kind) :: XLOGXL, ALPHAOG,/;"	L	subroutine:AIRSEA	file:
ALPHAOG	wam_source_module.F90	/^REAL(real_kind) :: XLOGXL, ALPHAOG,/;"	L	subroutine:AIRSEA_OPENACC	file:
ALPHJ	initial_mod.F90	/^  real(real_kind) :: FP(nCells), ALPHJ(/;"	L	subroutine:cold_start_wam	file:
ALPHJ	initial_mod.F90	/^REAL(real_kind),    INTENT(OUT) :: ALPHJ(/;"	L	subroutine:FETCH_LAW	file:
ALPHJO	wam_source_module.F90	/^REAL(real_kind), ALLOCATABLE :: U10(:), FPK(:), ALPHJO(/;"	L	subroutine:WAM_SOURCE_init	file:
AORB	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,1)) :: SIG_N, UORBT, AORB,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
ARG	initial_mod.F90	/^REAL(real_kind)    :: ARG,/;"	L	subroutine:JONSWAP	file:
AVG_GST	wam_source_module.F90	/^REAL(real_kind) :: AVG_GST,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
B	forcing_mod.F90	/^      real(real_kind) :: B /;"	L	subroutine:calc_TC_pres_field	file:
B	forcing_mod.F90	/^      real(real_kind) :: B /;"	L	subroutine:calc_TC_wind_field	file:
B	forcing_mod.F90	/^      real(real_kind) :: B /;"	L	subroutine:calc_TC_wind_field_openacc	file:
B	initial_mod.F90	/^REAL(real_kind), PARAMETER :: B /;"	L	subroutine:FETCH_LAW	file:
BB	wam_source_module.F90	/^REAL(real_kind)    , INTENT(IN)  :: BB /;"	L	subroutine:CMPQB_OPENACC	file:
BB	wam_source_module.F90	/^REAL(real_kind)    , INTENT(IN)  :: BB(/;"	L	subroutine:CMPQB	file:
BB	wam_source_module.F90	/^REAL(real_kind) :: QB(SIZE(F,1)), BB(/;"	L	subroutine:SFBRK	file:
BB	wam_source_module.F90	/^REAL(real_kind) :: QB, BB$/;"	L	subroutine:SFBRK_OPENACC	file:
BCD	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: BCD=/;"	L	subroutine:AIRSEA	file:
BCD	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: BCD=/;"	L	subroutine:AIRSEA_OPENACC	file:
BETA	wave_propag_mod.F90	/^  REAL, INTENT(IN) :: BETA /;"	L	function:wave_numb	file:
BETAMAX	wam_source_module.F90	/^REAL(real_kind)            :: BETAMAX /;"	v	module:WAM_SOURCE_MODULE
BG_GUST	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: BG_GUST /;"	L	subroutine:WSIGSTAR	file:
BG_GUST	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: BG_GUST /;"	L	subroutine:WSIGSTAR_OPENACC	file:
BO	wave_propag_mod.F90	/^  REAL :: AKP, BO,/;"	L	function:wave_numb	file:
BRKPBCOEF	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: BRKPBCOEF=/;"	v	module:WAM_SOURCE_MODULE
BRLAMBDA	wam_source_module.F90	/^ REAL(real_kind) :: BRLAMBDA$/;"	L	subroutine:INIT_SDISSP_ARD	file:
BTH	wam_source_module.F90	/^REAL(real_kind) :: BTH(/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
BTH0	wam_source_module.F90	/^REAL(real_kind) :: BTH0(/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
C1	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: C1 /;"	L	subroutine:WSIGSTAR	file:
C1	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: C1 /;"	L	subroutine:WSIGSTAR_OPENACC	file:
C2	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: C2 /;"	L	subroutine:WSIGSTAR	file:
C2	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: C2 /;"	L	subroutine:WSIGSTAR_OPENACC	file:
C2U10P1	wam_source_module.F90	/^REAL(real_kind) :: U10M1, C2U10P1,/;"	L	subroutine:WSIGSTAR	file:
C2U10P1	wam_source_module.F90	/^REAL(real_kind) :: U10M1, C2U10P1,/;"	L	subroutine:WSIGSTAR_OPENACC	file:
CGM1	wam_source_module.F90	/^ REAL(real_kind), DIMENSION(ML) :: SIG, C_, C_C, CGM1,/;"	L	subroutine:INIT_SDISSP_ARD	file:
CH	wam_source_module.F90	/^REAL(real_kind)    :: DELTHA, CL1, CL2, AL11, AL12, CH,/;"	L	subroutine:NLWEIGT	file:
CI	history_mod.F90	/^     real(real_kind) :: temps1, temps2, SI, CI /;"	L	subroutine:calc_output	file:
CL	wam_source_module.F90	/^    REAL(real_kind),    INTENT(IN) :: CL /;"	L	function:JAFU	file:
CL1	wam_source_module.F90	/^REAL(real_kind)    :: DELTHA, CL1,/;"	L	subroutine:NLWEIGT	file:
CL11	wam_source_module.F90	/^REAL(real_kind)    :: CL11 /;"	v	module:WAM_SOURCE_MODULE
CL1H	wam_source_module.F90	/^REAL(real_kind)    :: DELTHA, CL1, CL2, AL11, AL12, CH, CL1H,/;"	L	subroutine:NLWEIGT	file:
CL2	wam_source_module.F90	/^REAL(real_kind)    :: DELTHA, CL1, CL2,/;"	L	subroutine:NLWEIGT	file:
CL21	wam_source_module.F90	/^REAL(real_kind)    :: CL21 /;"	v	module:WAM_SOURCE_MODULE
CL2H	wam_source_module.F90	/^REAL(real_kind)    :: DELTHA, CL1, CL2, AL11, AL12, CH, CL1H, CL2H$/;"	L	subroutine:NLWEIGT	file:
CM	wam_source_module.F90	/^REAL(real_kind) :: CM,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
CM	wam_source_module.F90	/^REAL(real_kind) :: CM,/;"	L	subroutine:STRESSO_OPENACC	file:
CM1	wam_source_module.F90	/^REAL(real_kind) :: Y, CM1,/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
CM1	wam_source_module.F90	/^REAL(real_kind) :: YC, Y, CM1,/;"	L	subroutine:TAU_PHI_HF	file:
CMPQB	wam_source_module.F90	/^SUBROUTINE CMPQB /;"	s	module:WAM_SOURCE_MODULE
CMPQB_OPENACC	wam_source_module.F90	/^SUBROUTINE CMPQB_OPENACC /;"	s	module:WAM_SOURCE_MODULE
CMRHOWGDFTH	wam_source_module.F90	/^REAL(real_kind) :: CM, RHOWGDFTH,CMRHOWGDFTH$/;"	L	subroutine:STRESSO_OPENACC	file:
CNSN	wam_source_module.F90	/^REAL(real_kind) :: CNSN$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
CO	wam_source_module.F90	/^real(real_kind) :: CO /;"	v	module:WAM_SOURCE_MODULE
CO1	fre_dir_mod.F90	/^      real(real_kind) :: CO1$/;"	L	subroutine:generate_frequency	file:
CODE_CLEAR	face_mod.F90	/^character(4), parameter :: CODE_CLEAR=/;"	v	module:face
CODE_END	face_mod.F90	/^character(1), parameter :: CODE_END=/;"	v	module:face
CODE_START	face_mod.F90	/^character(2), parameter :: CODE_START=/;"	v	module:face
COEF	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,3)) :: CONST, SIG, SIGM1, SIG2, COEF,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
COEF5	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,3)) :: CONST, SIG, SIGM1, SIG2, COEF, COEF5,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
COEF_geog	wave_propag_mod.F90	/^  real(real_kind), allocatable :: COEF_geog(/;"	v	module:wave_propag_mod
COEF_theta	wave_propag_mod.F90	/^  real(real_kind), allocatable :: COEF_theta(/;"	v	module:wave_propag_mod
COLORS_BG	face_mod.F90	/^character(15), parameter :: COLORS_BG(/;"	v	module:face
COLORS_FG	face_mod.F90	/^character(15), parameter :: COLORS_FG(/;"	v	module:face
CON	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: CON /;"	L	subroutine:NLWEIGT	file:
CONST	wam_source_module.F90	/^REAL(real_kind) :: GM1, COSW, CONST,/;"	L	subroutine:STRESSO_OPENACC	file:
CONST	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,3)) :: CONST,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
CONST	wam_source_module.F90	/^REAL(real_kind), PARAMETER  :: CONST /;"	L	subroutine:SBOTTOM	file:
CONST	wam_source_module.F90	/^REAL(real_kind), PARAMETER  :: CONST /;"	L	subroutine:SBOTTOM_OPENACC	file:
CONST1	wam_source_module.F90	/^REAL(real_kind)    :: CONST1$/;"	L	subroutine:SOURCE_PHILLIPS	file:
CONST1	wam_source_module.F90	/^REAL(real_kind) :: CONST1$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
CONST1	wam_source_module.F90	/^REAL(real_kind) :: CONST1,/;"	L	subroutine:INIT_X0TAUHF	file:
CONSTF	wam_source_module.F90	/^REAL(real_kind) :: CONSTF$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
COSDTH	wam_source_module.F90	/^ REAL(real_kind), DIMENSION(0:KL\/2) :: COSDTH$/;"	L	subroutine:INIT_SDISSP_ARD	file:
COSLP	wam_source_module.F90	/^REAL(real_kind) :: DSTAB1, TEMP1, COSLP$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
COSTH3	wam_source_module.F90	/^REAL(real_kind)    :: F1P1, FRG, FLP, FLM, FKP, FKM, XF, COSTH3,/;"	L	subroutine:NLWEIGT	file:
COSTH4	wam_source_module.F90	/^REAL(real_kind)    :: F1P1, FRG, FLP, FLM, FKP, FKM, XF, COSTH3, COSTH4$/;"	L	subroutine:NLWEIGT	file:
COSW	wam_source_module.F90	/^REAL(real_kind) :: GM1, COSW,/;"	L	subroutine:STRESSO_OPENACC	file:
CUMULW	wam_source_module.F90	/^REAL(real_kind), ALLOCATABLE :: CUMULW(/;"	v	module:WAM_SOURCE_MODULE
CYI	wam_source_module.F90	/^      REAL(real_kind) :: ZR, ZI, CYR, CYI,/;"	L	subroutine:KERKEI	file:
CYI1	wam_source_module.F90	/^      REAL(real_kind) :: ZR, ZI, CYR, CYI, CYR1, CYI1$/;"	L	subroutine:KERKEI	file:
CYR	wam_source_module.F90	/^      REAL(real_kind) :: ZR, ZI, CYR,/;"	L	subroutine:KERKEI	file:
CYR1	wam_source_module.F90	/^      REAL(real_kind) :: ZR, ZI, CYR, CYI, CYR1,/;"	L	subroutine:KERKEI	file:
C_	wam_source_module.F90	/^ REAL(real_kind), DIMENSION(ML) :: SIG, C_,/;"	L	subroutine:INIT_SDISSP_ARD	file:
C_0	wam_source_module.F90	/^    REAL(real_kind) ::  EPS, X, T_0, OM, C_0,/;"	L	function:TRANSF	file:
C_C	wam_source_module.F90	/^ REAL(real_kind), DIMENSION(ML) :: SIG, C_, C_C,/;"	L	subroutine:INIT_SDISSP_ARD	file:
C_D	wam_source_module.F90	/^REAL(real_kind) :: U10, C_D,/;"	L	subroutine:WSIGSTAR	file:
C_D	wam_source_module.F90	/^REAL(real_kind) :: U10, C_D,/;"	L	subroutine:WSIGSTAR_OPENACC	file:
Cd	forcing_mod.F90	/^    real(real_kind) Cd /;"	L	subroutine:update_atm_forcing	file:
Cd	forcing_mod.F90	/^    real(real_kind):: Cd /;"	L	subroutine:update_atm_forcing_openacc	file:
Cg	wave_propag_mod.F90	/^  real(real_kind), allocatable :: Cg(/;"	v	module:wave_propag_mod
D	initial_mod.F90	/^REAL(real_kind), PARAMETER :: A = 2.84,  D /;"	L	subroutine:FETCH_LAW	file:
D	wam_source_module.F90	/^    REAL(real_kind),    INTENT(IN)    :: D /;"	L	function:TRANSF	file:
D	wam_source_module.F90	/^REAL(real_kind)    :: D,/;"	L	subroutine:MAKE_SHALLOW_SNL	file:
D	wam_source_module.F90	/^REAL(real_kind), DI/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
DAL1	wam_source_module.F90	/^REAL(real_kind)    :: DAL1 /;"	v	module:WAM_SOURCE_MODULE
DAL2	wam_source_module.F90	/^REAL(real_kind)    :: DAL2 /;"	v	module:WAM_SOURCE_MODULE
DC_DDU	wam_source_module.F90	/^REAL(real_kind) :: U10, C_D, DC_DDU,/;"	L	subroutine:WSIGSTAR	file:
DC_DDU	wam_source_module.F90	/^REAL(real_kind) :: U10, C_D, DC_DDU,/;"	L	subroutine:WSIGSTAR_OPENACC	file:
DEL2	wam_source_module.F90	/^REAL(real_kind)    :: DEL2$/;"	L	subroutine:WM1_WM2_WAVENUMBER_B_OPENACC	file:
DELAB	wam_source_module.F90	/^      REAL(real_kind) :: DELAB$/;"	L	subroutine:TABU_SWELLFT	file:
DELABM1	wam_source_module.F90	/^REAL(real_kind) :: DELABM1$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
DELAD	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,1)) :: DELAD$/;"	L	subroutine:SNONLIN	file:
DELAD	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,1)) :: DELAD$/;"	L	subroutine:SNONLIN_OPENACC	file:
DELAM	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,1)) :: DELAM$/;"	L	subroutine:SNONLIN	file:
DELAM	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,1)) :: DELAM$/;"	L	subroutine:SNONLIN_OPENACC	file:
DELAP	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,1)) :: DELAP$/;"	L	subroutine:SNONLIN	file:
DELAP	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,1)) :: DELAP$/;"	L	subroutine:SNONLIN_OPENACC	file:
DELF	wam_source_module.F90	/^REAL(real_kind) :: USTOLD, TAUOLD, TAUNEW, X, F, DELF$/;"	L	subroutine:AIRSEA	file:
DELF	wam_source_module.F90	/^REAL(real_kind) :: USTOLD, TAUOLD, TAUNEW, X, F, DELF$/;"	L	subroutine:AIRSEA_OPENACC	file:
DELFL	wam_source_module.F90	/^REAL(real_kind)    :: DELFL$/;"	L	subroutine:IMPLSCH	file:
DELI1	wam_source_module.F90	/^REAL(real_kind) :: XI,X,DELI1$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
DELPHI1	wam_source_module.F90	/^REAL(real_kind)    :: DELPHI1$/;"	L	subroutine:NLWEIGT	file:
DELPHI2	wam_source_module.F90	/^REAL(real_kind)    :: DELPHI2$/;"	L	subroutine:NLWEIGT	file:
DELT	wam_source_module.F90	/^REAL(real_kind)    :: DELT$/;"	L	subroutine:IMPLSCH	file:
DELTHA	wam_source_module.F90	/^REAL(real_kind)    :: DELTHA,/;"	L	subroutine:NLWEIGT	file:
DELTH_LOC	wam_source_module.F90	/^ REAL(real_kind) :: DELTH_TRUNC, DELTH_LOC$/;"	L	subroutine:INIT_SDISSP_ARD	file:
DELTH_TRUNC	wam_source_module.F90	/^ REAL(real_kind) :: DELTH_TRUNC,/;"	L	subroutine:INIT_SDISSP_ARD	file:
DELU	wam_source_module.F90	/^REAL(real_kind)               :: DELU /;"	v	module:WAM_SOURCE_MODULE
DELZ	wam_source_module.F90	/^REAL(real_kind) :: DELZ,/;"	L	subroutine:TAU_PHI_HF	file:
DELZ	wam_source_module.F90	/^REAL(real_kind) :: DELZ,/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
DEPTH	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: DEPTH /;"	L	subroutine:IMPLSCH	file:
DEPTH	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: DEPTH /;"	L	subroutine:MAKE_SHALLOW_SNL	file:
DEPTH	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: DEPTH /;"	L	subroutine:SDEPTHLIM	file:
DEPTH	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: DEPTH /;"	L	subroutine:SDEPTHLIM_OPENACC	file:
DEPTH	wam_source_module.F90	/^REAL(real_kind),   INTENT(IN)           :: DEPTH(/;"	L	subroutine:SOURCE_PHILLIPS	file:
DEPTH	wam_source_module.F90	/^REAL(real_kind), INTENT(IN)     :: DEPTH(/;"	L	subroutine:SBOTTOM	file:
DEPTH	wam_source_module.F90	/^REAL(real_kind), INTENT(IN)     :: DEPTH(/;"	L	subroutine:SBOTTOM_OPENACC	file:
DEPTH	wam_source_module.F90	/^REAL(real_kind), INTENT(IN)     :: DEPTH(/;"	L	subroutine:SFBRK	file:
DEPTH	wam_source_module.F90	/^REAL(real_kind), INTENT(IN)     :: DEPTH(/;"	L	subroutine:SFBRK_OPENACC	file:
DEPTH	wam_source_module.F90	/^REAL(real_kind), INTENT(IN)    :: DEPTH /;"	L	subroutine:SNONLIN	file:
DEPTH	wam_source_module.F90	/^REAL(real_kind), INTENT(IN)    :: DEPTH /;"	L	subroutine:SNONLIN_OPENACC	file:
DF	wam_source_module.F90	/^REAL(real_kind) :: CONST1, X0, FF, F, DF$/;"	L	subroutine:INIT_X0TAUHF	file:
DFIM	fre_dir_mod.F90	/^  REAL(real_kind),ALLOCATABLE :: DFIM(/;"	v	module:fre_dir_mod
DFIMOFR	fre_dir_mod.F90	/^  REAL(real_kind),ALLOCATABLE :: DFIMOFR(/;"	v	module:fre_dir_mod
DFIM_FR	fre_dir_mod.F90	/^  REAL(real_kind),ALLOCATABLE :: DFIM_FR(/;"	v	module:fre_dir_mod
DFIM_FR2	fre_dir_mod.F90	/^  REAL(real_kind),ALLOCATABLE :: DFIM_FR2(/;"	v	module:fre_dir_mod
DFIM_SIG2	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,3)) :: CONST, SIG, SIGM1, SIG2, COEF, COEF5, DFIM_SIG2$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
DF_FR	fre_dir_mod.F90	/^  REAL(real_kind),ALLOCATABLE :: DF_FR(/;"	v	module:fre_dir_mod
DF_FR2	fre_dir_mod.F90	/^  REAL(real_kind),ALLOCATABLE :: DF_FR2(/;"	v	module:fre_dir_mod
DI	mod_mpi_variables.F90	/^  INTEGER,PARAMETER  :: DI /;"	v	module:mod_mpi_variables
DKMAX	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: DKMAX /;"	v	module:WAM_SOURCE_MODULE
DKMAX	wave_propag_mod.F90	/^  REAL, PARAMETER :: DKMAX /;"	L	function:wave_numb	file:
DSBR	wam_source_module.F90	/^REAL(real_kind) :: SBR(SIZE(F,1)),DSBR(/;"	L	subroutine:SFBRK	file:
DSBR	wam_source_module.F90	/^REAL(real_kind) :: SBR(SIZE(F,1)),DSBR(/;"	L	subroutine:SFBRK_OPENACC	file:
DSIP	wam_source_module.F90	/^ REAL(real_kind), DIMENSION(ML) :: SIG, C_, C_C, CGM1, DSIP,/;"	L	subroutine:INIT_SDISSP_ARD	file:
DSTAB	wam_source_module.F90	/^REAL(real_kind) :: UFAC,DSTAB$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
DSTAB1	wam_source_module.F90	/^REAL(real_kind) :: DSTAB1,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
DSTAB2	wam_source_module.F90	/^REAL(real_kind) :: DSTAB2$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
DV_G	wam_source_module.F90	/^    REAL(real_kind) ::  EPS, X, T_0, OM, C_0, V_G, DV_G,/;"	L	function:TRANSF	file:
DZETA0	wam_source_module.F90	/^      REAL(real_kind) :: ABR,ABRLOG,L10,FACT,FSUBW,FSUBWMEMO,DZETA0,/;"	L	subroutine:TABU_SWELLFT	file:
DZETA0MEMO	wam_source_module.F90	/^      REAL(real_kind) :: ABR,ABRLOG,L10,FACT,FSUBW,FSUBWMEMO,DZETA0,DZETA0MEMO$/;"	L	subroutine:TABU_SWELLFT	file:
E	initial_mod.F90	/^REA/;"	L	subroutine:FETCH_LAW	file:
EBS	wave_propag_mod.F90	/^  REAL, PARAMETER :: EBS /;"	L	function:wave_numb	file:
EM	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(FL3,1)) :: EM$/;"	L	subroutine:SDEPTHLIM	file:
EM	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(FL3,1)) :: EM$/;"	L	subroutine:SDEPTHLIM_OPENACC	file:
EMEAN	history_mod.F90	/^     real(real_kind) :: EMEAN(/;"	L	subroutine:calc_output	file:
EMEAN	wam_source_module.F90	/^REAL(real_kind)    :: EMEAN(/;"	L	subroutine:IMPLSCH	file:
EMEAN	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN )           :: EMEAN(/;"	L	subroutine:TM1_TM2_PERIODS_B	file:
EMEAN	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN )           :: EMEAN(/;"	L	subroutine:TM1_TM2_PERIODS_B_OPENACC	file:
EMEAN	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN )           :: EMEAN(/;"	L	subroutine:WM1_WM2_WAVENUMBER_B_OPENACC	file:
EMEAN	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)            :: EMEAN(/;"	L	subroutine:FEMEAN	file:
EMEAN	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)            :: EMEAN(/;"	L	subroutine:FEMEAN_OPENACC	file:
EMEAN	wam_source_module.F90	/^REAL(real_kind),    INTENT(INOUT) :: EMEAN /;"	L	subroutine:SDEPTHLIM	file:
EMEAN	wam_source_module.F90	/^REAL(real_kind),    INTENT(INOUT) :: EMEAN /;"	L	subroutine:SDEPTHLIM_OPENACC	file:
EMEAN	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT)           :: EMEAN(/;"	L	subroutine:TOTAL_ENERGY_B	file:
EMEAN	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT)           :: EMEAN(/;"	L	subroutine:TOTAL_ENERGY_B_OPENACC	file:
EMEAN	wam_source_module.F90	/^REAL(real_kind), INTENT(IN)     :: EMEAN /;"	L	subroutine:SFBRK	file:
EMEAN	wam_source_module.F90	/^REAL(real_kind), INTENT(IN)     :: EMEAN /;"	L	subroutine:SFBRK_OPENACC	file:
EMEANWS	wam_source_module.F90	/^REAL(real_kind)    :: EMEANWS(/;"	L	subroutine:IMPLSCH	file:
EMIN	wam_source_module.F90	/^REAL(real_kind)      :: EMIN /;"	v	module:WAM_SOURCE_MODULE
ENH	wam_source_module.F90	/^REAL(real_kind),   ALLOCATABLE, DIMENSION(:,:) :: ENH$/;"	v	module:WAM_SOURCE_MODULE
ENHFR	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,1)) :: ENHFR$/;"	L	subroutine:SNONLIN	file:
ENHFR	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,1)) :: ENHFR$/;"	L	subroutine:SNONLIN_OPENACC	file:
ENH_MAX	wam_source_module.F90	/^REAL(real_kind), PARAMETER  :: ENH_MAX=/;"	L	subroutine:MAKE_SHALLOW_SNL	file:
EPMMA	wam_source_module.F90	/^REAL :: EPMMA,/;"	L	subroutine:INIT_SNONLIN	file:
EPS	wam_source_module.F90	/^    REAL(real_kind) ::  EPS,/;"	L	function:TRANSF	file:
EPS1	wam_source_module.F90	/^REAL(real_kind),    PARAMETER :: EPS1 /;"	v	module:WAM_SOURCE_MODULE
EPSR	wam_source_module.F90	/^REAL(real_kind) :: EPSR$/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
EPSUS	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: EPSUS /;"	L	subroutine:AIRSEA	file:
EPSUS	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: EPSUS /;"	L	subroutine:AIRSEA_OPENACC	file:
EPSUS	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: EPSUS /;"	L	subroutine:FRCUTINDEX	file:
EPSUS	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: EPSUS /;"	L	subroutine:FRCUTINDEX_OPENACC	file:
ESCAPE	face_mod.F90	/^character(1),  parameter :: ESCAPE=/;"	v	module:face
ET	initial_mod.F90	/^  real(real_kind) :: ST(nCells, nDir), ET(/;"	L	subroutine:cold_start_wam	file:
ET	initial_mod.F90	/^REAL(real_kind), INTENT(OUT) :: ET(/;"	L	subroutine:JONSWAP	file:
EXSQ	wam_source_module.F90	/^      REAL(real_kind), PARAMETER, DIMENSION(8) :: EXSQ /;"	L	subroutine:KZEONE	file:
EX_TAIL	fre_dir_mod.F90	/^  INTEGER, PARAMETER :: EX_TAIL /;"	v	module:fre_dir_mod
Etail	history_mod.F90	/^     real(real_kind) :: Etail(/;"	L	subroutine:calc_output	file:
F	wam_source_module.F90	/^REAL(real_kind) :: CONST1, X0, FF/;"	L	subroutine:INIT_X0TAUHF	file:
F	wam_source_module.F90	/^REAL(real_kind) :: USTOLD, TAUOLD, TAUNEW, X, F,/;"	L	subroutine:AIRSEA	file:
F	wam_source_module.F90	/^REAL(real_kind) :: USTOLD, TAUOLD, TAUNEW, X, F,/;"	L	subroutine:AIRSEA_OPENACC	file:
F	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN )           :: F(/;"	L	subroutine:TM1_TM2_PERIODS_B	file:
F	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN )           :: F(/;"	L	subroutine:TM1_TM2_PERIODS_B_OPENACC	file:
F	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN )           :: F(/;"	L	subroutine:WM1_WM2_WAVENUMBER_B_OPENACC	file:
F	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)            :: F(/;"	L	subroutine:FEMEAN	file:
F	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)            :: F(/;"	L	subroutine:FEMEAN_OPENACC	file:
F	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: F /;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
F	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: F /;"	L	subroutine:SINPUT_ARD_OPENACC	file:
F	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: F(/;"	L	subroutine:STRESSO_OPENACC	file:
F	wam_source_module.F90	/^REAL(real_kind), INTENT(IN)     :: F /;"	L	subroutine:SBOTTOM	file:
F	wam_source_module.F90	/^REAL(real_kind), INTENT(IN)     :: F /;"	L	subroutine:SBOTTOM_OPENACC	file:
F	wam_source_module.F90	/^REAL(real_kind), INTENT(IN)     :: F /;"	L	subroutine:SFBRK	file:
F	wam_source_module.F90	/^REAL(real_kind), INTENT(IN)     :: F /;"	L	subroutine:SFBRK_OPENACC	file:
F	wam_source_module.F90	/^REAL(real_kind), INTENT(IN)    :: F /;"	L	subroutine:SNONLIN	file:
F	wam_source_module.F90	/^REAL(real_kind), INTENT(IN)    :: F /;"	L	subroutine:SNONLIN_OPENACC	file:
F1MEAN	wam_source_module.F90	/^REAL(real_kind)    :: F1MEAN(/;"	L	subroutine:IMPLSCH	file:
F1P1	wam_source_module.F90	/^REAL(real_kind)    :: F1P1,/;"	L	subroutine:NLWEIGT	file:
F3	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)            :: F3(/;"	L	subroutine:TOTAL_ENERGY_B	file:
F3	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)            :: F3(/;"	L	subroutine:TOTAL_ENERGY_B_OPENACC	file:
FACM1_NU_AIR	wam_source_module.F90	/^REAL(real_kind) :: FAC_NU_AIR,FACM1_NU_AIR$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
FACSAT	wam_source_module.F90	/^REAL(real_kind) :: FACSAT(/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
FACT	wam_source_module.F90	/^      REAL(real_kind) :: ABR,ABRLOG,L10,FACT,/;"	L	subroutine:TABU_SWELLFT	file:
FACTURB	wam_source_module.F90	/^REAL(real_kind) :: FACTURB(/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
FACWTRB	wam_source_module.F90	/^REAL(real_kind) :: FACWTRB(/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
FAC_NU_AIR	wam_source_module.F90	/^REAL(real_kind) :: FAC_NU_AIR,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
FAD1	wam_source_module.F90	/^REAL(real_kind)    :: SAP, SAM, FIJ, FAD1,/;"	L	subroutine:SNONLIN	file:
FAD1	wam_source_module.F90	/^REAL(real_kind)    :: SAP, SAM, FIJ, FAD1,/;"	L	subroutine:SNONLIN_OPENACC	file:
FAD2	wam_source_module.F90	/^REAL(real_kind)    :: SAP, SAM, FIJ, FAD1, FAD2,/;"	L	subroutine:SNONLIN	file:
FAD2	wam_source_module.F90	/^REAL(real_kind)    :: SAP, SAM, FIJ, FAD1, FAD2,/;"	L	subroutine:SNONLIN_OPENACC	file:
FC	Makefile	/^ FC = mpif90$/;"	m
FCEN	wam_source_module.F90	/^REAL(real_kind)    :: SAP, SAM, FIJ, FAD1, FAD2, FCEN$/;"	L	subroutine:SNONLIN	file:
FCEN	wam_source_module.F90	/^REAL(real_kind)    :: SAP, SAM, FIJ, FAD1, FAD2, FCEN$/;"	L	subroutine:SNONLIN_OPENACC	file:
FEMEAN	wam_source_module.F90	/^SUBROUTINE FEMEAN /;"	s	module:WAM_SOURCE_MODULE
FEMEAN_OPENACC	wam_source_module.F90	/^SUBROUTINE FEMEAN_OPENACC /;"	s	module:WAM_SOURCE_MODULE
FETCH	initial_mod.F90	/^REAL(real_kind),    INTENT(IN)  :: FETCH /;"	L	subroutine:FETCH_LAW	file:
FETCH_LAW	initial_mod.F90	/^SUBROUTINE FETCH_LAW /;"	s	module:initial_mod
FF	wam_source_module.F90	/^REAL(real_kind) :: CONST1, X0, FF,/;"	L	subroutine:INIT_X0TAUHF	file:
FFACM	wam_source_module.F90	/^REAL :: FFACP, FFACP1, FFACM,/;"	L	subroutine:INIT_SNONLIN	file:
FFACM1	wam_source_module.F90	/^REAL :: FFACP, FFACP1, FFACM, FFACM1,/;"	L	subroutine:INIT_SNONLIN	file:
FFACP	wam_source_module.F90	/^REAL :: FFACP,/;"	L	subroutine:INIT_SNONLIN	file:
FFACP1	wam_source_module.F90	/^REAL :: FFACP, FFACP1,/;"	L	subroutine:INIT_SNONLIN	file:
FFLAGS	Makefile	/^ FFLAGS = -O3$/;"	m
FIJ	wam_source_module.F90	/^REAL(real_kind)    :: SAP, SAM, FIJ,/;"	L	subroutine:SNONLIN	file:
FIJ	wam_source_module.F90	/^REAL(real_kind)    :: SAP, SAM, FIJ,/;"	L	subroutine:SNONLIN_OPENACC	file:
FILE_EXISTS	mod_mpi_interfaces.F90	/^      LOGICAL :: FILE_EXISTS$/;"	L	subroutine:mpi_init_basic_env	file:
FKLAM	wam_source_module.F90	/^REAL(real_kind),   ALLOCATABLE, DIMENSION(:)   :: FKLAM /;"	v	module:WAM_SOURCE_MODULE
FKLAM1	wam_source_module.F90	/^REAL(real_kind),   ALLOCATABLE, DIMENSION(:)   :: FKLAM1 /;"	v	module:WAM_SOURCE_MODULE
FKLAM12	wam_source_module.F90	/^REAL :: FKLAMM2, FKLAMA2, FKLAMB2, FKLAM12,/;"	L	subroutine:INIT_SNONLIN	file:
FKLAM12	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMA2, FKLAMB2, FKLAM12,/;"	L	subroutine:SNONLIN	file:
FKLAM12	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMA2, FKLAMB2, FKLAM12,/;"	L	subroutine:SNONLIN_OPENACC	file:
FKLAM22	wam_source_module.F90	/^REAL :: FKLAMM2, FKLAMA2, FKLAMB2, FKLAM12, FKLAM22$/;"	L	subroutine:INIT_SNONLIN	file:
FKLAM22	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMA2, FKLAMB2, FKLAM12, FKLAM22$/;"	L	subroutine:SNONLIN	file:
FKLAM22	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMA2, FKLAMB2, FKLAM12, FKLAM22$/;"	L	subroutine:SNONLIN_OPENACC	file:
FKLAMA2	wam_source_module.F90	/^REAL :: FKLAMM2, FKLAMA2,/;"	L	subroutine:INIT_SNONLIN	file:
FKLAMA2	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMA2,/;"	L	subroutine:SNONLIN	file:
FKLAMA2	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMA2,/;"	L	subroutine:SNONLIN_OPENACC	file:
FKLAMB2	wam_source_module.F90	/^REAL :: FKLAMM2, FKLAMA2, FKLAMB2,/;"	L	subroutine:INIT_SNONLIN	file:
FKLAMB2	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMA2, FKLAMB2,/;"	L	subroutine:SNONLIN	file:
FKLAMB2	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMA2, FKLAMB2,/;"	L	subroutine:SNONLIN_OPENACC	file:
FKLAMM	wam_source_module.F90	/^REAL :: FKLAP12, FKLAP22, FKLAMM,/;"	L	subroutine:INIT_SNONLIN	file:
FKLAMM	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMM,/;"	L	subroutine:SNONLIN	file:
FKLAMM	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMM,/;"	L	subroutine:SNONLIN_OPENACC	file:
FKLAMM1	wam_source_module.F90	/^REAL :: FKLAP12, FKLAP22, FKLAMM, FKLAMM1,/;"	L	subroutine:INIT_SNONLIN	file:
FKLAMM1	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMM, FKLAMM1,/;"	L	subroutine:SNONLIN	file:
FKLAMM1	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMM, FKLAMM1,/;"	L	subroutine:SNONLIN_OPENACC	file:
FKLAMM2	wam_source_module.F90	/^REAL :: FKLAMM2,/;"	L	subroutine:INIT_SNONLIN	file:
FKLAMM2	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMM, FKLAMM1, GW5, GW6, GW7, GW8, FKLAMMA, FKLAMMB, FKLAMM2$/;"	L	subroutine:SNONLIN	file:
FKLAMM2	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMM, FKLAMM1, GW5, GW6, GW7, GW8, FKLAMMA, FKLAMMB, FKLAMM2$/;"	L	subroutine:SNONLIN_OPENACC	file:
FKLAMMA	wam_source_module.F90	/^REAL :: FKLAP12, FKLAP22, FKLAMM, FKLAMM1, FKLAMMA,/;"	L	subroutine:INIT_SNONLIN	file:
FKLAMMA	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMM, FKLAMM1, GW5, GW6, GW7, GW8, FKLAMMA,/;"	L	subroutine:SNONLIN	file:
FKLAMMA	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMM, FKLAMM1, GW5, GW6, GW7, GW8, FKLAMMA,/;"	L	subroutine:SNONLIN_OPENACC	file:
FKLAMMB	wam_source_module.F90	/^REAL :: FKLAP12, FKLAP22, FKLAMM, FKLAMM1, FKLAMMA, FKLAMMB$/;"	L	subroutine:INIT_SNONLIN	file:
FKLAMMB	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMM, FKLAMM1, GW5, GW6, GW7, GW8, FKLAMMA, FKLAMMB,/;"	L	subroutine:SNONLIN	file:
FKLAMMB	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMM, FKLAMM1, GW5, GW6, GW7, GW8, FKLAMMA, FKLAMMB,/;"	L	subroutine:SNONLIN_OPENACC	file:
FKLAMP	wam_source_module.F90	/^REAL :: FFACP, FFACP1, FFACM, FFACM1, FTAIL, FKLAMP,/;"	L	subroutine:INIT_SNONLIN	file:
FKLAMP	wam_source_module.F90	/^REAL(real_kind)    :: FTAIL, FKLAMP,/;"	L	subroutine:SNONLIN	file:
FKLAMP	wam_source_module.F90	/^REAL(real_kind)    :: FTAIL, FKLAMP,/;"	L	subroutine:SNONLIN_OPENACC	file:
FKLAMP1	wam_source_module.F90	/^REAL :: FFACP, FFACP1, FFACM, FFACM1, FTAIL, FKLAMP, FKLAMP1$/;"	L	subroutine:INIT_SNONLIN	file:
FKLAMP1	wam_source_module.F90	/^REAL(real_kind)    :: FTAIL, FKLAMP, FKLAMP1,/;"	L	subroutine:SNONLIN	file:
FKLAMP1	wam_source_module.F90	/^REAL(real_kind)    :: FTAIL, FKLAMP, FKLAMP1,/;"	L	subroutine:SNONLIN_OPENACC	file:
FKLAMP2	wam_source_module.F90	/^REAL :: FKLAMPA, FKLAMPB, FKLAMP2,/;"	L	subroutine:INIT_SNONLIN	file:
FKLAMP2	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMPA, FKLAMPB, FKLAMP2,/;"	L	subroutine:SNONLIN	file:
FKLAMP2	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMPA, FKLAMPB, FKLAMP2,/;"	L	subroutine:SNONLIN_OPENACC	file:
FKLAMPA	wam_source_module.F90	/^REAL :: FKLAMPA,/;"	L	subroutine:INIT_SNONLIN	file:
FKLAMPA	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMPA,/;"	L	subroutine:SNONLIN	file:
FKLAMPA	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMPA,/;"	L	subroutine:SNONLIN_OPENACC	file:
FKLAMPB	wam_source_module.F90	/^REAL :: FKLAMPA, FKLAMPB,/;"	L	subroutine:INIT_SNONLIN	file:
FKLAMPB	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMPA, FKLAMPB,/;"	L	subroutine:SNONLIN	file:
FKLAMPB	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMPA, FKLAMPB,/;"	L	subroutine:SNONLIN_OPENACC	file:
FKLAP	wam_source_module.F90	/^REAL(real_kind),   ALLOCATABLE, DIMENSION(:)   :: FKLAP /;"	v	module:WAM_SOURCE_MODULE
FKLAP1	wam_source_module.F90	/^REAL(real_kind),   ALLOCATABLE, DIMENSION(:)   :: FKLAP1 /;"	v	module:WAM_SOURCE_MODULE
FKLAP12	wam_source_module.F90	/^REAL :: FKLAP12,/;"	L	subroutine:INIT_SNONLIN	file:
FKLAP12	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMPA, FKLAMPB, FKLAMP2, FKLAPA2, FKLAPB2, FKLAP12,/;"	L	subroutine:SNONLIN	file:
FKLAP12	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMPA, FKLAMPB, FKLAMP2, FKLAPA2, FKLAPB2, FKLAP12,/;"	L	subroutine:SNONLIN_OPENACC	file:
FKLAP22	wam_source_module.F90	/^REAL :: FKLAP12, FKLAP22,/;"	L	subroutine:INIT_SNONLIN	file:
FKLAP22	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMPA, FKLAMPB, FKLAMP2, FKLAPA2, FKLAPB2, FKLAP12, FKLAP22$/;"	L	subroutine:SNONLIN	file:
FKLAP22	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMPA, FKLAMPB, FKLAMP2, FKLAPA2, FKLAPB2, FKLAP12, FKLAP22$/;"	L	subroutine:SNONLIN_OPENACC	file:
FKLAPA2	wam_source_module.F90	/^REAL :: FKLAMPA, FKLAMPB, FKLAMP2, FKLAPA2,/;"	L	subroutine:INIT_SNONLIN	file:
FKLAPA2	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMPA, FKLAMPB, FKLAMP2, FKLAPA2,/;"	L	subroutine:SNONLIN	file:
FKLAPA2	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMPA, FKLAMPB, FKLAMP2, FKLAPA2,/;"	L	subroutine:SNONLIN_OPENACC	file:
FKLAPB2	wam_source_module.F90	/^REAL :: FKLAMPA, FKLAMPB, FKLAMP2, FKLAPA2, FKLAPB2$/;"	L	subroutine:INIT_SNONLIN	file:
FKLAPB2	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMPA, FKLAMPB, FKLAMP2, FKLAPA2, FKLAPB2,/;"	L	subroutine:SNONLIN	file:
FKLAPB2	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMPA, FKLAMPB, FKLAMP2, FKLAPA2, FKLAPB2,/;"	L	subroutine:SNONLIN_OPENACC	file:
FKM	wam_source_module.F90	/^REAL(real_kind)    :: F1P1, FRG, FLP, FLM, FKP, FKM,/;"	L	subroutine:NLWEIGT	file:
FKP	wam_source_module.F90	/^REAL(real_kind)    :: F1P1, FRG, FLP, FLM, FKP,/;"	L	subroutine:NLWEIGT	file:
FL	wam_source_module.F90	/^REAL(real_kind)    :: FL(/;"	L	subroutine:IMPLSCH	file:
FL	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT)   :: FL(/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
FL	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT)   :: FL(/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
FL	wam_source_module.F90	/^REAL(real_kind), INTENT(INOUT)  :: FL(/;"	L	subroutine:SBOTTOM	file:
FL	wam_source_module.F90	/^REAL(real_kind), INTENT(INOUT)  :: FL(/;"	L	subroutine:SBOTTOM_OPENACC	file:
FL	wam_source_module.F90	/^REAL(real_kind), INTENT(INOUT)  :: FL(/;"	L	subroutine:SFBRK	file:
FL	wam_source_module.F90	/^REAL(real_kind), INTENT(INOUT)  :: FL(/;"	L	subroutine:SFBRK_OPENACC	file:
FL	wam_source_module.F90	/^REAL(real_kind), INTENT(INOUT) :: FL(/;"	L	subroutine:SNONLIN	file:
FL	wam_source_module.F90	/^REAL(real_kind), INTENT(INOUT) :: FL(/;"	L	subroutine:SNONLIN_OPENACC	file:
FL3	wam_source_module.F90	/^REAL(real_kind),    INTENT(INOUT) :: FL3 /;"	L	subroutine:IMPHFTAIL_OPENACC	file:
FL3	wam_source_module.F90	/^REAL(real_kind),    INTENT(INOUT) :: FL3(/;"	L	subroutine:IMPLSCH	file:
FL3	wam_source_module.F90	/^REAL(real_kind),    INTENT(INOUT) :: FL3(/;"	L	subroutine:SDEPTHLIM	file:
FL3	wam_source_module.F90	/^REAL(real_kind),    INTENT(INOUT) :: FL3(/;"	L	subroutine:SDEPTHLIM_OPENACC	file:
FL3	wam_source_module.F90	/^REAL(real_kind), ALLOCATABLE :: FL3(/;"	v	module:WAM_SOURCE_MODULE
FLM	wam_source_module.F90	/^REAL(real_kind)    :: F1P1, FRG, FLP, FLM,/;"	L	subroutine:NLWEIGT	file:
FLMIN	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: FLMIN /;"	v	module:WAM_SOURCE_MODULE
FLMINFR	wam_source_module.F90	/^REAL(real_kind), ALLOCATABLE, DIMENSION(:,:) ::  FLMINFR /;"	v	module:WAM_SOURCE_MODULE
FLP	wam_source_module.F90	/^REAL(real_kind)    :: F1P1, FRG, FLP,/;"	L	subroutine:NLWEIGT	file:
FLP	wam_source_module.F90	/^REAL(real_kind) :: USTP, USDIRP, UCN, UCNZALPD, FLP,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
FLP_AVG	wam_source_module.F90	/^REAL(real_kind) :: FLP_AVG,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
FM	initial_mod.F90	/^  REAL(real_kind) :: FM=/;"	L	subroutine:cold_start_wam	file:
FM	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: FM(/;"	L	subroutine:FRCUTINDEX	file:
FM	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: FM(/;"	L	subroutine:FRCUTINDEX_OPENACC	file:
FM	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT)           :: FM /;"	L	subroutine:FEMEAN	file:
FM	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT)           :: FM /;"	L	subroutine:FEMEAN_OPENACC	file:
FM2	wam_source_module.F90	/^REAL(real_kind) :: FPMH, FPPM, FM2,/;"	L	subroutine:FRCUTINDEX	file:
FM2	wam_source_module.F90	/^REAL(real_kind) :: FPMH, FPPM, FM2,/;"	L	subroutine:FRCUTINDEX_OPENACC	file:
FMEAN	wam_source_module.F90	/^REAL(real_kind)    :: FMEAN(/;"	L	subroutine:IMPLSCH	file:
FMEAN	wam_source_module.F90	/^REAL(real_kind), INTENT(IN)     :: FMEAN(/;"	L	subroutine:SFBRK	file:
FMEAN	wam_source_module.F90	/^REAL(real_kind), INTENT(IN)     :: FMEAN(/;"	L	subroutine:SFBRK_OPENACC	file:
FMEANWS	wam_source_module.F90	/^REAL(real_kind)    :: FMEANWS(/;"	L	subroutine:IMPLSCH	file:
FMIN	wam_source_module.F90	/^REAL(real_kind),    SAVE      :: FMIN /;"	v	module:WAM_SOURCE_MODULE
FMWS	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: FMWS(/;"	L	subroutine:FRCUTINDEX	file:
FMWS	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: FMWS(/;"	L	subroutine:FRCUTINDEX_OPENACC	file:
FNC2	wam_source_module.F90	/^REAL(real_kind) :: FNC2,/;"	L	subroutine:TAU_PHI_HF	file:
FNC2	wam_source_module.F90	/^REAL(real_kind) :: FNC2,/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
FOBJ	depend.mk	/^FOBJ=linked_list_mod.o        \\$/;"	m
FP	initial_mod.F90	/^  real(real_kind) :: FP(/;"	L	subroutine:cold_start_wam	file:
FP	initial_mod.F90	/^REAL(real_kind),    INTENT(OUT) :: FP(/;"	L	subroutine:FETCH_LAW	file:
FP	initial_mod.F90	/^REAL(real_kind), INTENT(IN)  :: FP(/;"	L	subroutine:JONSWAP	file:
FPK	wam_source_module.F90	/^REAL(real_kind), ALLOCATABLE :: U10(:), FPK(/;"	L	subroutine:WAM_SOURCE_init	file:
FPM	wam_source_module.F90	/^REAL(real_kind)    :: TEMP(1:SIZE(SL,1)), FPM(/;"	L	subroutine:SOURCE_PHILLIPS	file:
FPM	wam_source_module.F90	/^REAL(real_kind) :: FPMH/;"	L	subroutine:FRCUTINDEX	file:
FPM	wam_source_module.F90	/^REAL(real_kind) :: FPMH/;"	L	subroutine:FRCUTINDEX_OPENACC	file:
FPM4	wam_source_module.F90	/^REAL(real_kind) :: FPMH, FPPM, FM2, FPM, FPM4$/;"	L	subroutine:FRCUTINDEX	file:
FPM4	wam_source_module.F90	/^REAL(real_kind) :: FPMH, FPPM, FM2, FPM, FPM4$/;"	L	subroutine:FRCUTINDEX_OPENACC	file:
FPMAX	initial_mod.F90	/^REAL(real_kind),    INTENT(IN)  :: FPMAX /;"	L	subroutine:FETCH_LAW	file:
FPMH	wam_source_module.F90	/^REAL(real_kind) :: FPMH,/;"	L	subroutine:FRCUTINDEX	file:
FPMH	wam_source_module.F90	/^REAL(real_kind) :: FPMH,/;"	L	subroutine:FRCUTINDEX_OPENACC	file:
FPPM	wam_source_module.F90	/^REAL(real_kind) :: FPMH, FPPM,/;"	L	subroutine:FRCUTINDEX	file:
FPPM	wam_source_module.F90	/^REAL(real_kind) :: FPMH, FPPM,/;"	L	subroutine:FRCUTINDEX_OPENACC	file:
FR	initial_mod.F90	/^REAL(real_kind), INTENT(IN)  :: FR(/;"	L	subroutine:JONSWAP	file:
FR5	fre_dir_mod.F90	/^  REAL(real_kind),ALLOCATABLE :: FR5(/;"	v	module:fre_dir_mod
FRCUTINDEX	wam_source_module.F90	/^SUBROUTINE FRCUTINDEX /;"	s	module:WAM_SOURCE_MODULE
FRCUTINDEX_OPENACC	wam_source_module.F90	/^SUBROUTINE FRCUTINDEX_OPENACC /;"	s	module:WAM_SOURCE_MODULE
FRG	wam_source_module.F90	/^REAL(real_kind)    :: F1P1, FRG,/;"	L	subroutine:NLWEIGT	file:
FRH	initial_mod.F90	/^REAL(real_kind)    :: FRH,/;"	L	subroutine:JONSWAP	file:
FRH	wam_source_module.F90	/^REAL(real_kind), ALLOCATABLE, DIMENSION(:)     :: FRH /;"	v	module:WAM_SOURCE_MODULE
FRIC	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: FRIC /;"	L	subroutine:FRCUTINDEX	file:
FRIC	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: FRIC /;"	L	subroutine:FRCUTINDEX_OPENACC	file:
FRLON	wam_source_module.F90	/^REAL(real_kind),    ALLOCATABLE :: FRLON(/;"	L	subroutine:NLWEIGT	file:
FRM5	fre_dir_mod.F90	/^  REAL(real_kind),ALLOCATABLE :: FRM5(/;"	v	module:fre_dir_mod
FRR	wam_source_module.F90	/^REAL :: ALPH, FRR$/;"	L	subroutine:INIT_SNONLIN	file:
FSUBW	wam_source_module.F90	/^      REAL(real_kind) :: ABR,ABRLOG,L10,FACT,FSUBW,/;"	L	subroutine:TABU_SWELLFT	file:
FSUBWMEMO	wam_source_module.F90	/^      REAL(real_kind) :: ABR,ABRLOG,L10,FACT,FSUBW,FSUBWMEMO,/;"	L	subroutine:TABU_SWELLFT	file:
FTAIL	wam_source_module.F90	/^REAL :: FFACP, FFACP1, FFACM, FFACM1, FTAIL,/;"	L	subroutine:INIT_SNONLIN	file:
FTAIL	wam_source_module.F90	/^REAL(real_kind)    :: FTAIL,/;"	L	subroutine:SNONLIN	file:
FTAIL	wam_source_module.F90	/^REAL(real_kind)    :: FTAIL,/;"	L	subroutine:SNONLIN_OPENACC	file:
FTEMP	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,1)) :: FTEMP$/;"	L	subroutine:SNONLIN	file:
FTEMP	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,1)) :: FTEMP$/;"	L	subroutine:SNONLIN_OPENACC	file:
FTRF	wam_source_module.F90	/^REAL(real_kind), ALLOCATABLE, DIMENSION(:)     :: FTRF /;"	v	module:WAM_SOURCE_MODULE
FU	wam_source_module.F90	/^REAL(real_kind) :: FU,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
FUD	wam_source_module.F90	/^REAL(real_kind) :: FU,FUD,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
FWW	wam_source_module.F90	/^REAL(real_kind) :: Z0VIS, FWW$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
G2ZPI4FRH5M	initial_mod.F90	/^REAL(real_kind)    :: G2ZPI4FRH5M(/;"	L	subroutine:JONSWAP	file:
GAMD	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: GAMD /;"	v	module:WAM_SOURCE_MODULE
GAMMA	initial_mod.F90	/^  REAL(real_kind), PARAMETER :: GAMMA /;"	L	subroutine:cold_start_wam	file:
GAMMA	initial_mod.F90	/^REAL(real_kind), INTENT(IN)  :: GAMMA /;"	L	subroutine:JONSWAP	file:
GAMMA	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: GAMMA /;"	L	subroutine:WAM_SOURCE_init	file:
GM1	wam_source_module.F90	/^REAL(real_kind) :: FNC2, SQRTZ0OG, GM1,/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
GM1	wam_source_module.F90	/^REAL(real_kind) :: FNC2, SQRTZ0OG, SQRTGZ0, GM1,/;"	L	subroutine:TAU_PHI_HF	file:
GM1	wam_source_module.F90	/^REAL(real_kind) :: GM1,/;"	L	subroutine:STRESSO_OPENACC	file:
GPU_ARRAY	mod_mpi_interfaces.F90	/^      INTEGER, DIMENSION(:), ALLOCATABLE  :: GPU_ARRAY$/;"	L	subroutine:mpi_init_basic_env	file:
GPU_ARRAY	mod_mpi_interfaces.F90	/^      NAMELIST \/GPU_INFO2\/ GPU_ARRAY$/;"	L	subroutine:mpi_init_basic_env	file:
GPU_AVAILABLE_NUM	mod_mpi_interfaces.F90	/^      INTEGER :: GPU_AVAILABLE_NUM$/;"	L	subroutine:mpi_init_basic_env	file:
GPU_AVAILABLE_NUM	mod_mpi_interfaces.F90	/^      NAMELIST \/GPU_INFO1\/ GPU_AVAILABLE_NUM$/;"	L	subroutine:mpi_init_basic_env	file:
GPU_INFO1	mod_mpi_interfaces.F90	/^      NAMELIST \/GPU_INFO1\//;"	n	subroutine:mpi_init_basic_env
GPU_INFO2	mod_mpi_interfaces.F90	/^      NAMELIST \/GPU_INFO2\//;"	n	subroutine:mpi_init_basic_env
GW1	wam_source_module.F90	/^REAL :: GW1,/;"	L	subroutine:INIT_SNONLIN	file:
GW1	wam_source_module.F90	/^REAL(real_kind)    :: FTAIL, FKLAMP, FKLAMP1, GW1,/;"	L	subroutine:SNONLIN	file:
GW1	wam_source_module.F90	/^REAL(real_kind)    :: FTAIL, FKLAMP, FKLAMP1, GW1,/;"	L	subroutine:SNONLIN_OPENACC	file:
GW2	wam_source_module.F90	/^REAL :: GW1, GW2,/;"	L	subroutine:INIT_SNONLIN	file:
GW2	wam_source_module.F90	/^REAL(real_kind)    :: FTAIL, FKLAMP, FKLAMP1, GW1, GW2,/;"	L	subroutine:SNONLIN	file:
GW2	wam_source_module.F90	/^REAL(real_kind)    :: FTAIL, FKLAMP, FKLAMP1, GW1, GW2,/;"	L	subroutine:SNONLIN_OPENACC	file:
GW3	wam_source_module.F90	/^REAL :: GW1, GW2, GW3,/;"	L	subroutine:INIT_SNONLIN	file:
GW3	wam_source_module.F90	/^REAL(real_kind)    :: FTAIL, FKLAMP, FKLAMP1, GW1, GW2, GW3,/;"	L	subroutine:SNONLIN	file:
GW3	wam_source_module.F90	/^REAL(real_kind)    :: FTAIL, FKLAMP, FKLAMP1, GW1, GW2, GW3,/;"	L	subroutine:SNONLIN_OPENACC	file:
GW4	wam_source_module.F90	/^REAL :: GW1, GW2, GW3, GW4,/;"	L	subroutine:INIT_SNONLIN	file:
GW4	wam_source_module.F90	/^REAL(real_kind)    :: FTAIL, FKLAMP, FKLAMP1, GW1, GW2, GW3, GW4$/;"	L	subroutine:SNONLIN	file:
GW4	wam_source_module.F90	/^REAL(real_kind)    :: FTAIL, FKLAMP, FKLAMP1, GW1, GW2, GW3, GW4$/;"	L	subroutine:SNONLIN_OPENACC	file:
GW5	wam_source_module.F90	/^REAL :: GW1, GW2, GW3, GW4, GW5,/;"	L	subroutine:INIT_SNONLIN	file:
GW5	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMM, FKLAMM1, GW5,/;"	L	subroutine:SNONLIN	file:
GW5	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMM, FKLAMM1, GW5,/;"	L	subroutine:SNONLIN_OPENACC	file:
GW6	wam_source_module.F90	/^REAL :: GW1, GW2, GW3, GW4, GW5, GW6,/;"	L	subroutine:INIT_SNONLIN	file:
GW6	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMM, FKLAMM1, GW5, GW6,/;"	L	subroutine:SNONLIN	file:
GW6	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMM, FKLAMM1, GW5, GW6,/;"	L	subroutine:SNONLIN_OPENACC	file:
GW7	wam_source_module.F90	/^REAL :: GW1, GW2, GW3, GW4, GW5, GW6, GW7,/;"	L	subroutine:INIT_SNONLIN	file:
GW7	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMM, FKLAMM1, GW5, GW6, GW7,/;"	L	subroutine:SNONLIN	file:
GW7	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMM, FKLAMM1, GW5, GW6, GW7,/;"	L	subroutine:SNONLIN_OPENACC	file:
GW8	wam_source_module.F90	/^REAL :: GW1, GW2, GW3, GW4, GW5, GW6, GW7, GW8$/;"	L	subroutine:INIT_SNONLIN	file:
GW8	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMM, FKLAMM1, GW5, GW6, GW7, GW8,/;"	L	subroutine:SNONLIN	file:
GW8	wam_source_module.F90	/^REAL(real_kind)    :: FKLAMM, FKLAMM1, GW5, GW6, GW7, GW8,/;"	L	subroutine:SNONLIN_OPENACC	file:
GZ0	wam_source_module.F90	/^REAL(real_kind) :: FNC2, SQRTZ0OG, GM1, GZ0,/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
GZ0	wam_source_module.F90	/^REAL(real_kind) :: FNC2, SQRTZ0OG, SQRTGZ0,/;"	L	subroutine:TAU_PHI_HF	file:
HFTSWELLF6	wam_source_module.F90	/^REAL(real_kind) :: FU,FUD,NU_AIR,SMOOTH, HFTSWELLF6,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
I	initial_mod.F90	/^IN/;"	L	subroutine:JONSWAP	file:
I	wam_source_module.F90	/^      IN/;"	L	subroutine:TABU_SWELLFT	file:
I	wam_source_module.F90	/^IN/;"	L	subroutine:IMPHFTAIL_OPENACC	file:
I	wam_source_module.F90	/^IN/;"	L	subroutine:NLWEIGT	file:
I	wam_source_module.F90	/^IN/;"	L	subroutine:SBOTTOM_OPENACC	file:
I	wam_source_module.F90	/^IN/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
I	wam_source_module.F90	/^IN/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
I	wam_source_module.F90	/^IN/;"	L	subroutine:STRESSO_OPENACC	file:
I	wam_source_module.F90	/^IN/;"	L	subroutine:WM1_WM2_WAVENUMBER_B_OPENACC	file:
IAB	wam_source_module.F90	/^INTEGER(real_kind), PARAMETER :: IAB=/;"	v	module:WAM_SOURCE_MODULE
IAN	wam_source_module.F90	/^    INTEGER, INTENT(IN) :: IAN /;"	L	function:JAFU	file:
IC	wam_source_module.F90	/^INTEGER :: KLP1, IC,/;"	L	subroutine:NLWEIGT	file:
IC	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC,/;"	L	subroutine:INIT_SNONLIN	file:
IC	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC,/;"	L	subroutine:SNONLIN	file:
IC	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC,/;"	L	subroutine:SNONLIN_OPENACC	file:
ICOUNT	wam_source_module.F90	/^INTEGER :: ICOUNT,/;"	L	subroutine:INIT_SNONLIN	file:
IGST	wam_source_module.F90	/^INTEGER :: IJ,K,M,IND,IGST,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
IJ	wam_source_module.F90	/^INTEGER  :: IJ,/;"	L	subroutine:TOTAL_ENERGY_B	file:
IJ	wam_source_module.F90	/^INTEGER  :: IJ,/;"	L	subroutine:TOTAL_ENERGY_B_OPENACC	file:
IJ	wam_source_module.F90	/^INTEGER :: IJ$/;"	L	subroutine:FRCUTINDEX	file:
IJ	wam_source_module.F90	/^INTEGER :: IJ$/;"	L	subroutine:FRCUTINDEX_OPENACC	file:
IJ	wam_source_module.F90	/^INTEGER :: IJ$/;"	L	subroutine:SNONLIN	file:
IJ	wam_source_module.F90	/^INTEGER :: IJ$/;"	L	subroutine:SNONLIN_OPENACC	file:
IJ	wam_source_module.F90	/^INTEGER :: IJ$/;"	L	subroutine:WSIGSTAR	file:
IJ	wam_source_module.F90	/^INTEGER :: IJ$/;"	L	subroutine:WSIGSTAR_OPENACC	file:
IJ	wam_source_module.F90	/^INTEGER :: IJ,/;"	L	subroutine:AIRSEA	file:
IJ	wam_source_module.F90	/^INTEGER :: IJ,/;"	L	subroutine:AIRSEA_OPENACC	file:
IJ	wam_source_module.F90	/^INTEGER :: IJ,/;"	L	subroutine:FEMEAN	file:
IJ	wam_source_module.F90	/^INTEGER :: IJ,/;"	L	subroutine:FEMEAN_OPENACC	file:
IJ	wam_source_module.F90	/^INTEGER :: IJ,/;"	L	subroutine:IMPHFTAIL_OPENACC	file:
IJ	wam_source_module.F90	/^INTEGER :: IJ,/;"	L	subroutine:MAKE_SHALLOW_SNL	file:
IJ	wam_source_module.F90	/^INTEGER :: IJ,/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
IJ	wam_source_module.F90	/^INTEGER :: IJ,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
IJ	wam_source_module.F90	/^INTEGER :: IJ,/;"	L	subroutine:TM1_TM2_PERIODS_B	file:
IJ	wam_source_module.F90	/^INTEGER :: IJ,/;"	L	subroutine:TM1_TM2_PERIODS_B_OPENACC	file:
IJ	wam_source_module.F90	/^INTEGER :: IJ,/;"	L	subroutine:WM1_WM2_WAVENUMBER_B_OPENACC	file:
IJ	wam_source_module.F90	/^INTEGER :: J, IJ$/;"	L	subroutine:TAU_PHI_HF	file:
IJ	wam_source_module.F90	/^INTEGER :: J, IJ$/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
IJ	wam_source_module.F90	/^INTEGER :: K, M, IJ$/;"	L	subroutine:IMPLSCH	file:
IJ	wam_source_module.F90	/^INTEGER :: K, M, IJ$/;"	L	subroutine:SDEPTHLIM_OPENACC	file:
IJ	wam_source_module.F90	/^INTEGER :: K, M, IJ$/;"	L	subroutine:SOURCE_PHILLIPS	file:
IJ	wam_source_module.F90	/^INTEGER :: K, M, KL, ML, IJ,/;"	L	subroutine:STRESSO_OPENACC	file:
IJ	wam_source_module.F90	/^INTEGER :: M, K, IJ$/;"	L	subroutine:SBOTTOM	file:
IJ	wam_source_module.F90	/^INTEGER :: M, K, IJ$/;"	L	subroutine:SFBRK_OPENACC	file:
IJ	wam_source_module.F90	/^INTEGER :: M, K, IJ,/;"	L	subroutine:SBOTTOM_OPENACC	file:
IKM	wam_source_module.F90	/^INTEGER,ALLOCATABLE, DIMENSION(:)   :: IKM /;"	v	module:WAM_SOURCE_MODULE
IKM1	wam_source_module.F90	/^INTEGER,ALLOCATABLE, DIMENSION(:)   :: IKM1 /;"	v	module:WAM_SOURCE_MODULE
IKN	wam_source_module.F90	/^INTEGER :: M, IKN,/;"	L	subroutine:NLWEIGT	file:
IKP	wam_source_module.F90	/^INTEGER,ALLOCATABLE, DIMENSION(:)   :: IKP /;"	v	module:WAM_SOURCE_MODULE
IKP1	wam_source_module.F90	/^INTEGER,ALLOCATABLE, DIMENSION(:)   :: IKP1 /;"	v	module:WAM_SOURCE_MODULE
IM	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP, IP1, IM /;"	L	subroutine:INIT_SNONLIN	file:
IM	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP, IP1, IM,/;"	L	subroutine:SNONLIN	file:
IM	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP, IP1, IM,/;"	L	subroutine:SNONLIN_OPENACC	file:
IM0	wam_source_module.F90	/^      REAL(real_kind) :: X, Y, X2, Y2, RE0, IM0,/;"	L	subroutine:KZEONE	file:
IM1	wam_source_module.F90	/^      REAL(real_kind) :: X, Y, X2, Y2, RE0, IM0, RE1, IM1,/;"	L	subroutine:KZEONE	file:
IM1	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP, IP1, IM , IM1,/;"	L	subroutine:INIT_SNONLIN	file:
IM1	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP, IP1, IM, IM1,/;"	L	subroutine:SNONLIN	file:
IM1	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP, IP1, IM, IM1,/;"	L	subroutine:SNONLIN_OPENACC	file:
IMPHFTAIL_OPENACC	wam_source_module.F90	/^SUBROUTINE IMPHFTAIL_OPENACC /;"	s	module:WAM_SOURCE_MODULE
IMPLSCH	wam_source_module.F90	/^SUBROUTINE IMPLSCH(/;"	s	module:WAM_SOURCE_MODULE
IND	wam_source_module.F90	/^INTEGER :: IJ,K,M,IND,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
INDICESSAT	wam_source_module.F90	/^INTEGER, ALLOCATABLE :: INDICESSAT(/;"	v	module:WAM_SOURCE_MODULE
INIT_SDISSP_ARD	wam_source_module.F90	/^SUBROUTINE INIT_SDISSP_ARD$/;"	s	module:WAM_SOURCE_MODULE
INIT_SNONLIN	wam_source_module.F90	/^SUBROUTINE INIT_SNONLIN$/;"	s	module:WAM_SOURCE_MODULE
INIT_X0TAUHF	wam_source_module.F90	/^SUBROUTINE INIT_X0TAUHF$/;"	s	module:WAM_SOURCE_MODULE
INLCOEF	wam_source_module.F90	/^INTEGER,ALLOCATABLE, DIMENSION(:,:) :: INLCOEF /;"	v	module:WAM_SOURCE_MODULE
INV_LOG_CO	wam_source_module.F90	/^REAL(real_kind),    SAVE      :: INV_LOG_CO /;"	v	module:WAM_SOURCE_MODULE
IOS	mod_mpi_interfaces.F90	/^      INTEGER :: IOS$/;"	L	subroutine:mpi_init_basic_env	file:
IP	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP,/;"	L	subroutine:INIT_SNONLIN	file:
IP	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP,/;"	L	subroutine:SNONLIN	file:
IP	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP,/;"	L	subroutine:SNONLIN_OPENACC	file:
IP1	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP, IP1,/;"	L	subroutine:INIT_SNONLIN	file:
IP1	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP, IP1,/;"	L	subroutine:SNONLIN	file:
IP1	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP, IP1,/;"	L	subroutine:SNONLIN_OPENACC	file:
IPSAT	wam_source_module.F90	/^INTEGER, PARAMETER :: IPSAT=/;"	v	module:WAM_SOURCE_MODULE
IRCOUNT	wam_source_module.F90	/^INTEGER :: ICOUNT, IRCOUNT$/;"	L	subroutine:INIT_SNONLIN	file:
ISB	wam_source_module.F90	/^INTEGER, PARAMETER :: ISB=/;"	v	module:WAM_SOURCE_MODULE
ISDSDTH	wam_source_module.F90	/^INTEGER, PARAMETER :: ISDSDTH /;"	v	module:WAM_SOURCE_MODULE
ISG	wam_source_module.F90	/^INTEGER :: KLP1, IC, KH, KLH, K, KS, ISG,/;"	L	subroutine:NLWEIGT	file:
ISM	wam_source_module.F90	/^INTEGER :: M, IKN, I, ISP, ISM$/;"	L	subroutine:NLWEIGT	file:
ISNONLIN	wam_source_module.F90	/^INTEGER :: ISNONLIN /;"	v	module:WAM_SOURCE_MODULE
ISP	wam_source_module.F90	/^INTEGER :: M, IKN, I, ISP,/;"	L	subroutine:NLWEIGT	file:
ITEMP	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP, IP1, IM , IM1, ITEMP$/;"	L	subroutine:INIT_SNONLIN	file:
ITER	wam_source_module.F90	/^      INTEGER :: I,ITER$/;"	L	subroutine:TABU_SWELLFT	file:
ITER	wam_source_module.F90	/^INTEGER :: IJ, ITER$/;"	L	subroutine:AIRSEA	file:
ITER	wam_source_module.F90	/^INTEGER :: IJ, ITER$/;"	L	subroutine:AIRSEA_OPENACC	file:
ITERM	wam_source_module.F90	/^     &        R1, R2, T1, T2, P1, P2, RTERM, ITERM,/;"	L	subroutine:KZEONE	file:
IU_GPU_RESOURCE	mod_mpi_interfaces.F90	/^      INTEGER, PARAMETER  :: IU_GPU_RESOURCE /;"	L	subroutine:mpi_init_basic_env	file:
I_INT	wam_source_module.F90	/^ INTEGER :: JD, K, M, I_INT,/;"	L	subroutine:INIT_SDISSP_ARD	file:
InNodeComm	mod_mpi_interfaces.F90	/^      INTEGER :: InNodeComm,/;"	L	subroutine:mpi_init_basic_env	file:
InNodeRank	mod_mpi_interfaces.F90	/^      INTEGER :: InNodeComm,InNodeRank,/;"	L	subroutine:mpi_init_basic_env	file:
J	wam_source_module.F90	/^    INTEGER, INTENT(IN) :: J /;"	L	function:JAFU	file:
J	wam_source_module.F90	/^INTEGER :: J$/;"	L	subroutine:INIT_X0TAUHF	file:
J	wam_source_module.F90	/^INTEGER :: J$/;"	L	subroutine:WAM_SOURCE_init	file:
J	wam_source_module.F90	/^INTEGER :: J,/;"	L	subroutine:TAU_PHI_HF	file:
J	wam_source_module.F90	/^INTEGER :: J,/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
JA1	wam_source_module.F90	/^INTEGER, ALLOCATABLE :: JA1(/;"	L	subroutine:NLWEIGT	file:
JA2	wam_source_module.F90	/^INTEGER, ALLOCATABLE :: JA2(/;"	L	subroutine:NLWEIGT	file:
JAFU	wam_source_module.F90	/^INTEGER FUNCTION JAFU /;"	f	module:WAM_SOURCE_MODULE
JD	wam_source_module.F90	/^ INTEGER :: JD,/;"	L	subroutine:INIT_SDISSP_ARD	file:
JONSWAP	initial_mod.F90	/^SUBROUTINE JONSWAP /;"	s	module:initial_mod
JTOT_TAUHF	wam_source_module.F90	/^INTEGER, PARAMETER :: JTOT_TAUHF=/;"	v	module:WAM_SOURCE_MODULE
JU	wam_source_module.F90	/^INTEGER :: JU(/;"	L	subroutine:IMPLSCH	file:
JUMAX	wam_source_module.F90	/^INTEGER, PARAMETER :: JUMAX /;"	v	module:WAM_SOURCE_MODULE
J_INT	wam_source_module.F90	/^ INTEGER :: JD, K, M, I_INT, J_INT,/;"	L	subroutine:INIT_SDISSP_ARD	file:
K	initial_mod.F90	/^    integer :: iCell, K,/;"	L	subroutine:set_initial_condition	file:
K	wam_source_module.F90	/^      INTEGER :: N, M, K,/;"	L	subroutine:KZEONE	file:
K	wam_source_module.F90	/^ INTEGER :: JD, K,/;"	L	subroutine:INIT_SDISSP_ARD	file:
K	wam_source_module.F90	/^INTEGER  :: IJ, M, K$/;"	L	subroutine:TOTAL_ENERGY_B_OPENACC	file:
K	wam_source_module.F90	/^INTEGER :: IJ, K,/;"	L	subroutine:IMPHFTAIL_OPENACC	file:
K	wam_source_module.F90	/^INTEGER :: IJ, K,/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
K	wam_source_module.F90	/^INTEGER :: IJ, M, K$/;"	L	subroutine:FEMEAN_OPENACC	file:
K	wam_source_module.F90	/^INTEGER :: IJ, M, K$/;"	L	subroutine:TM1_TM2_PERIODS_B_OPENACC	file:
K	wam_source_module.F90	/^INTEGER :: IJ, M, K,/;"	L	subroutine:WM1_WM2_WAVENUMBER_B_OPENACC	file:
K	wam_source_module.F90	/^INTEGER :: IJ,K,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
K	wam_source_module.F90	/^INTEGER :: K,/;"	L	subroutine:IMPLSCH	file:
K	wam_source_module.F90	/^INTEGER :: K,/;"	L	subroutine:SDEPTHLIM	file:
K	wam_source_module.F90	/^INTEGER :: K,/;"	L	subroutine:SDEPTHLIM_OPENACC	file:
K	wam_source_module.F90	/^INTEGER :: K,/;"	L	subroutine:SOURCE_PHILLIPS	file:
K	wam_source_module.F90	/^INTEGER :: K,/;"	L	subroutine:STRESSO_OPENACC	file:
K	wam_source_module.F90	/^INTEGER :: KL/;"	L	subroutine:NLWEIGT	file:
K	wam_source_module.F90	/^INTEGER :: M, K$/;"	L	subroutine:SFBRK	file:
K	wam_source_module.F90	/^INTEGER :: M, K,/;"	L	subroutine:SBOTTOM	file:
K	wam_source_module.F90	/^INTEGER :: M, K,/;"	L	subroutine:SBOTTOM_OPENACC	file:
K	wam_source_module.F90	/^INTEGER :: M, K,/;"	L	subroutine:SFBRK_OPENACC	file:
K	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP, IP1, IM, IM1, KH/;"	L	subroutine:SNONLIN	file:
K	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP, IP1, IM, IM1, KH/;"	L	subroutine:SNONLIN_OPENACC	file:
K1	wam_source_module.F90	/^INTEGER :: KLP1, IC, KH, KLH, K, KS, ISG, K1,/;"	L	subroutine:NLWEIGT	file:
K1	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP, IP1, IM, IM1, KH, K, K1,/;"	L	subroutine:SNONLIN	file:
K1	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP, IP1, IM, IM1, KH, K, K1,/;"	L	subroutine:SNONLIN_OPENACC	file:
K11	wam_source_module.F90	/^INTEGER :: KLP1, IC, KH, KLH, K, KS, ISG, K1, K11,/;"	L	subroutine:NLWEIGT	file:
K11	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP, IP1, IM, IM1, KH, K, K1, K2, K11,/;"	L	subroutine:SNONLIN	file:
K11	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP, IP1, IM, IM1, KH, K, K1, K2, K11,/;"	L	subroutine:SNONLIN_OPENACC	file:
K11W	wam_source_module.F90	/^INTEGER,ALLOCATABLE, DIMENSION(:,:) :: K11W /;"	v	module:WAM_SOURCE_MODULE
K1W	wam_source_module.F90	/^INTEGER,ALLOCATABLE, DIMENSION(:,:) :: K1W /;"	v	module:WAM_SOURCE_MODULE
K2	wam_source_module.F90	/^INTEGER :: IJ, K, M, M2, K2,/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
K2	wam_source_module.F90	/^INTEGER :: KLP1, IC, KH, KLH, K, KS, ISG, K1, K11, K2,/;"	L	subroutine:NLWEIGT	file:
K2	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP, IP1, IM, IM1, KH, K, K1, K2,/;"	L	subroutine:SNONLIN	file:
K2	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP, IP1, IM, IM1, KH, K, K1, K2,/;"	L	subroutine:SNONLIN_OPENACC	file:
K21	wam_source_module.F90	/^INTEGER :: KLP1, IC, KH, KLH, K, KS, ISG, K1, K11, K2, K21$/;"	L	subroutine:NLWEIGT	file:
K21	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP, IP1, IM, IM1, KH, K, K1, K2, K11, K21$/;"	L	subroutine:SNONLIN	file:
K21	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP, IP1, IM, IM1, KH, K, K1, K2, K11, K21$/;"	L	subroutine:SNONLIN_OPENACC	file:
K21W	wam_source_module.F90	/^INTEGER,ALLOCATABLE, DIMENSION(:,:) :: K21W /;"	v	module:WAM_SOURCE_MODULE
K2W	wam_source_module.F90	/^INTEGER,ALLOCATABLE, DIMENSION(:,:) :: K2W /;"	v	module:WAM_SOURCE_MODULE
KAPPA	wam_source_module.F90	/^      REAL(real_kind),    PARAMETER :: ABMAX=8.0, KAPPA=/;"	L	subroutine:TABU_SWELLFT	file:
KD	wam_source_module.F90	/^REAL(real_kind)    :: TEMP(1:SIZE(SL,1)), FPM(1:SIZE(SL,1)), KD$/;"	L	subroutine:SOURCE_PHILLIPS	file:
KEI	wam_source_module.F90	/^      REAL(real_kind) :: KER, KEI$/;"	L	subroutine:TABU_SWELLFT	file:
KEI	wam_source_module.F90	/^      REAL(real_kind) :: X, KER, KEI$/;"	L	subroutine:KERKEI	file:
KER	wam_source_module.F90	/^      REAL(real_kind) :: KER,/;"	L	subroutine:TABU_SWELLFT	file:
KER	wam_source_module.F90	/^      REAL(real_kind) :: X, KER,/;"	L	subroutine:KERKEI	file:
KERKEI	wam_source_module.F90	/^SUBROUTINE KERKEI /;"	s	module:WAM_SOURCE_MODULE
KFRH	wam_source_module.F90	/^INTEGER :: KFRH /;"	v	module:WAM_SOURCE_MODULE
KH	wam_source_module.F90	/^INTEGER :: KLP1, IC, KH,/;"	L	subroutine:NLWEIGT	file:
KH	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP, IP1, IM, IM1, KH,/;"	L	subroutine:SNONLIN	file:
KH	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1, IC, IP, IP1, IM, IM1, KH,/;"	L	subroutine:SNONLIN_OPENACC	file:
KK	wam_source_module.F90	/^ INTEGER :: JD, K, M, I_INT, J_INT, M2, KK,/;"	L	subroutine:INIT_SDISSP_ARD	file:
KK	wam_source_module.F90	/^INTEGER :: IJ, K, M, M2, K2, KK,/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
KKD	wam_source_module.F90	/^INTEGER, DIMENSION(SIZE(F,2),SIZE(F,2)) :: KKD$/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
KL	wam_source_module.F90	/^INTEGER :: K, M, KL,/;"	L	subroutine:STRESSO_OPENACC	file:
KL	wam_source_module.F90	/^integer:: KL /;"	v	module:WAM_SOURCE_MODULE
KLD	wam_source_module.F90	/^ INTEGER :: JD, K, M, I_INT, J_INT, M2, KK, KLD$/;"	L	subroutine:INIT_SDISSP_ARD	file:
KLD	wam_source_module.F90	/^INTEGER :: IJ, K, M, M2, K2, KK, KLD,/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
KLH	wam_source_module.F90	/^INTEGER :: KLP1, IC, KH, KLH,/;"	L	subroutine:NLWEIGT	file:
KLP1	wam_source_module.F90	/^INTEGER :: KLP1,/;"	L	subroutine:NLWEIGT	file:
KPM	fre_dir_mod.F90	/^  integer, allocatable :: KPM(/;"	v	module:fre_dir_mod
KS	wam_source_module.F90	/^INTEGER :: KLP1, IC, KH, KLH, K, KS,/;"	L	subroutine:NLWEIGT	file:
KZEONE	wam_source_module.F90	/^SUBROUTINE KZEONE(/;"	s	module:WAM_SOURCE_MODULE
L	wam_source_module.F90	/^     &        R1, R2, T1, T2, P1, P2, RTERM, ITERM, L$/;"	L	subroutine:KZEONE	file:
L10	wam_source_module.F90	/^      REAL(real_kind) :: ABR,ABRLOG,L10,/;"	L	subroutine:TABU_SWELLFT	file:
LDFLAGS	Makefile	/^ LDFLAGS = $(NC_INC)$/;"	m
LIBS	Makefile	/^ LIBS = $(NC_LIB)$/;"	m
LL	wam_source_module.F90	/^      INTEGER :: N, M, K, LL$/;"	L	subroutine:KZEONE	file:
LLIMPFLX	wam_source_module.F90	/^LOGICAL, PARAMETER :: LLIMPFLX=/;"	L	subroutine:IMPLSCH	file:
LLSSDSC3	wam_source_module.F90	/^LOGICAL :: LLSSDSC3,/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
LLSSDSC5	wam_source_module.F90	/^LOGICAL :: LLSSDSC3,  LLSSDSC5$/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
LLWS	wam_source_module.F90	/^LOGICAL :: LLWS(/;"	L	subroutine:IMPLSCH	file:
LLWS	wam_source_module.F90	/^LOGICAL, INTENT(OUT)   :: LLWS(/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
LOG10	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: LOG10 /;"	L	subroutine:WSIGSTAR	file:
LOG10	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: LOG10 /;"	L	subroutine:WSIGSTAR_OPENACC	file:
LOG_GAMMA	initial_mod.F90	/^REAL(real_kind)    :: FRH, LOG_GAMMA$/;"	L	subroutine:JONSWAP	file:
LOWER_ALPHABET	face_mod.F90	/^character(26), parameter :: LOWER_ALPHABET=/;"	v	module:face
M	initial_mod.F90	/^    integer :: iCell, K, M$/;"	L	subroutine:set_initial_condition	file:
M	initial_mod.F90	/^INTEGER :: I, M$/;"	L	subroutine:JONSWAP	file:
M	wam_source_module.F90	/^      INTEGER :: N, M,/;"	L	subroutine:KZEONE	file:
M	wam_source_module.F90	/^ INTEGER :: JD, K, M,/;"	L	subroutine:INIT_SDISSP_ARD	file:
M	wam_source_module.F90	/^INTEGER  :: IJ, M,/;"	L	subroutine:TOTAL_ENERGY_B	file:
M	wam_source_module.F90	/^INTEGER  :: IJ, M,/;"	L	subroutine:TOTAL_ENERGY_B_OPENACC	file:
M	wam_source_module.F90	/^INTEGER :: IJ, K, M,/;"	L	subroutine:IMPHFTAIL_OPENACC	file:
M	wam_source_module.F90	/^INTEGER :: IJ, K, M,/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
M	wam_source_module.F90	/^INTEGER :: IJ, M$/;"	L	subroutine:FEMEAN	file:
M	wam_source_module.F90	/^INTEGER :: IJ, M$/;"	L	subroutine:MAKE_SHALLOW_SNL	file:
M	wam_source_module.F90	/^INTEGER :: IJ, M$/;"	L	subroutine:TM1_TM2_PERIODS_B	file:
M	wam_source_module.F90	/^INTEGER :: IJ, M,/;"	L	subroutine:FEMEAN_OPENACC	file:
M	wam_source_module.F90	/^INTEGER :: IJ, M,/;"	L	subroutine:TM1_TM2_PERIODS_B_OPENACC	file:
M	wam_source_module.F90	/^INTEGER :: IJ, M,/;"	L	subroutine:WM1_WM2_WAVENUMBER_B_OPENACC	file:
M	wam_source_module.F90	/^INTEGER :: IJ,K,M,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
M	wam_source_module.F90	/^INTEGER :: K, M$/;"	L	subroutine:SDEPTHLIM	file:
M	wam_source_module.F90	/^INTEGER :: K, M,/;"	L	subroutine:IMPLSCH	file:
M	wam_source_module.F90	/^INTEGER :: K, M,/;"	L	subroutine:SDEPTHLIM_OPENACC	file:
M	wam_source_module.F90	/^INTEGER :: K, M,/;"	L	subroutine:SOURCE_PHILLIPS	file:
M	wam_source_module.F90	/^INTEGER :: K, M,/;"	L	subroutine:STRESSO_OPENACC	file:
M	wam_source_module.F90	/^INTEGER :: M,/;"	L	subroutine:NLWEIGT	file:
M	wam_source_module.F90	/^INTEGER :: M,/;"	L	subroutine:SBOTTOM	file:
M	wam_source_module.F90	/^INTEGER :: M,/;"	L	subroutine:SBOTTOM_OPENACC	file:
M	wam_source_module.F90	/^INTEGER :: M,/;"	L	subroutine:SFBRK	file:
M	wam_source_module.F90	/^INTEGER :: M,/;"	L	subroutine:SFBRK_OPENACC	file:
M2	wam_source_module.F90	/^ INTEGER :: JD, K, M, I_INT, J_INT, M2,/;"	L	subroutine:INIT_SDISSP_ARD	file:
M2	wam_source_module.F90	/^INTEGER :: IJ, K, M, M2,/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
MAKE_SHALLOW_SNL	wam_source_module.F90	/^SUBROUTINE MAKE_SHALLOW_SNL /;"	s	module:WAM_SOURCE_MODULE
MASK	wam_source_module.F90	/^LOGICAL, INTENT(IN),  OPTIONAL :: MASK /;"	L	subroutine:FEMEAN	file:
MASK	wam_source_module.F90	/^LOGICAL, INTENT(IN),  OPTIONAL :: MASK /;"	L	subroutine:FEMEAN_OPENACC	file:
MASK	wam_source_module.F90	/^LOGICAL, INTENT(IN),  OPTIONAL :: MASK(/;"	L	subroutine:TM1_TM2_PERIODS_B	file:
MASK	wam_source_module.F90	/^LOGICAL, INTENT(IN),  OPTIONAL :: MASK(/;"	L	subroutine:TM1_TM2_PERIODS_B_OPENACC	file:
MASK	wam_source_module.F90	/^LOGICAL, INTENT(IN),  OPTIONAL :: MASK(/;"	L	subroutine:WM1_WM2_WAVENUMBER_B_OPENACC	file:
MASK	wam_source_module.F90	/^LOGICAL, INTENT(IN), OPTIONAL  :: MASK(/;"	L	subroutine:TOTAL_ENERGY_B	file:
MASK	wam_source_module.F90	/^LOGICAL, INTENT(IN), OPTIONAL  :: MASK(/;"	L	subroutine:TOTAL_ENERGY_B_OPENACC	file:
MC	wam_source_module.F90	/^INTEGER :: MC,/;"	L	subroutine:INIT_SNONLIN	file:
MC	wam_source_module.F90	/^INTEGER :: MC,/;"	L	subroutine:SNONLIN	file:
MC	wam_source_module.F90	/^INTEGER :: MC,/;"	L	subroutine:SNONLIN_OPENACC	file:
MFR1STFR	wam_source_module.F90	/^INTEGER :: MFR1STFR,/;"	L	subroutine:SNONLIN	file:
MFR1STFR	wam_source_module.F90	/^INTEGER :: MFR1STFR,/;"	L	subroutine:SNONLIN_OPENACC	file:
MFRLSTFR	wam_source_module.F90	/^INTEGER :: MFR1STFR, MFRLSTFR$/;"	L	subroutine:SNONLIN	file:
MFRLSTFR	wam_source_module.F90	/^INTEGER :: MFR1STFR, MFRLSTFR$/;"	L	subroutine:SNONLIN_OPENACC	file:
MFRSTLW	wam_source_module.F90	/^INTEGER :: MFRSTLW /;"	v	module:WAM_SOURCE_MODULE
MICHE	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: MICHE /;"	v	module:WAM_SOURCE_MODULE
MIJ	wam_source_module.F90	/^INTEGER :: MIJ(/;"	L	subroutine:IMPLSCH	file:
MIJ	wam_source_module.F90	/^INTEGER, INTENT(IN)    :: MIJ(/;"	L	subroutine:IMPHFTAIL_OPENACC	file:
MIJ	wam_source_module.F90	/^INTEGER, INTENT(IN)    :: MIJ(/;"	L	subroutine:STRESSO_OPENACC	file:
MIJ	wam_source_module.F90	/^INTEGER, INTENT(IN)    :: MIJ(/;"	L	subroutine:TAU_PHI_HF	file:
MIJ	wam_source_module.F90	/^INTEGER, INTENT(IN)    :: MIJ(/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
MIJ	wam_source_module.F90	/^INTEGER, INTENT(OUT)   :: MIJ(/;"	L	subroutine:FRCUTINDEX	file:
MIJ	wam_source_module.F90	/^INTEGER, INTENT(OUT)   :: MIJ(/;"	L	subroutine:FRCUTINDEX_OPENACC	file:
MIJ_MAX	wam_source_module.F90	/^INTEGER :: MIJ_MAX$/;"	L	subroutine:STRESSO_OPENACC	file:
ML	wam_source_module.F90	/^INTEGER  :: IJ, M, ML$/;"	L	subroutine:TOTAL_ENERGY_B	file:
ML	wam_source_module.F90	/^INTEGER :: K, M, KL, ML,/;"	L	subroutine:STRESSO_OPENACC	file:
ML	wam_source_module.F90	/^integer:: ML$/;"	v	module:WAM_SOURCE_MODULE
MLSTHG	wam_source_module.F90	/^INTEGER :: MLSTHG /;"	v	module:WAM_SOURCE_MODULE
MM	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM,/;"	L	subroutine:INIT_SNONLIN	file:
MM	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM,/;"	L	subroutine:SNONLIN	file:
MM	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM,/;"	L	subroutine:SNONLIN_OPENACC	file:
MM1	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1,/;"	L	subroutine:INIT_SNONLIN	file:
MM1	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1,/;"	L	subroutine:SNONLIN	file:
MM1	wam_source_module.F90	/^INTEGER :: MC, MP, MP1, MM, MM1,/;"	L	subroutine:SNONLIN_OPENACC	file:
MM1_TAIL	fre_dir_mod.F90	/^  REAL(real_kind)     :: MM1_TAIL /;"	v	module:fre_dir_mod
MO_TAIL	fre_dir_mod.F90	/^  REAL(real_kind)    :: MO_TAIL /;"	v	module:fre_dir_mod
MP	wam_source_module.F90	/^INTEGER :: MC, MP,/;"	L	subroutine:INIT_SNONLIN	file:
MP	wam_source_module.F90	/^INTEGER :: MC, MP,/;"	L	subroutine:SNONLIN	file:
MP	wam_source_module.F90	/^INTEGER :: MC, MP,/;"	L	subroutine:SNONLIN_OPENACC	file:
MP1	wam_source_module.F90	/^INTEGER :: MC, MP, MP1,/;"	L	subroutine:INIT_SNONLIN	file:
MP1	wam_source_module.F90	/^INTEGER :: MC, MP, MP1,/;"	L	subroutine:SNONLIN	file:
MP1	wam_source_module.F90	/^INTEGER :: MC, MP, MP1,/;"	L	subroutine:SNONLIN_OPENACC	file:
MP1_TAIL	fre_dir_mod.F90	/^  REAL(real_kind)     :: MP1_TAIL /;"	v	module:fre_dir_mod
MP2_TAIL	fre_dir_mod.F90	/^  REAL(real_kind)     :: MP2_TAIL /;"	v	module:fre_dir_mod
MPI_INPUT_UNIT	mod_mpi_variables.F90	/^  integer, parameter :: MPI_INPUT_UNIT /;"	v	module:mod_mpi_variables
MPI_LOG_UNIT	mod_mpi_test_variables.F90	/^   INTEGER, PUBLIC, PARAMETER :: MPI_LOG_UNIT /;"	v	module:mod_mpi_test_variables
MPI_MIDIUM_LEN	mod_mpi_variables.F90	/^  integer, parameter :: MPI_MIDIUM_LEN /;"	v	module:mod_mpi_variables
MPI_TEST_UNIT	mod_mpi_test_variables.F90	/^   INTEGER, PUBLIC, PARAMETER :: MPI_TEST_UNIT /;"	v	module:mod_mpi_test_variables
MPI_TIME_UNIT	mod_mpi_test_variables.F90	/^   INTEGER, PUBLIC, PARAMETER :: MPI_TIME_UNIT /;"	v	module:mod_mpi_test_variables
MWD	history_mod.F90	/^     real(real_kind), intent(out):: MWD(/;"	L	subroutine:calc_output	file:
MWD	history_mod.F90	/^  real(real_kind), allocatable :: MWD(/;"	v	module:history_mod
MWP	history_mod.F90	/^     real(real_kind), intent(out):: MWP(/;"	L	subroutine:calc_output	file:
MWP	history_mod.F90	/^  real(real_kind), allocatable :: MWP(/;"	v	module:history_mod
N	history_mod.F90	/^     real(real_kind), intent(in) :: N(/;"	L	subroutine:calc_output	file:
N	history_mod.F90	/^     real(real_kind), intent(in) :: N(/;"	L	subroutine:station_output_write	file:
N	state_mod.F90	/^     real(real_kind), allocatable :: N(/;"	k	type:wave_type
N	time_scheme_mod.F90	/^  real(real_kind), intent(inout)  :: N(/;"	L	subroutine:time_integrate_source	file:
N	wam_source_module.F90	/^      INT/;"	L	subroutine:KZEONE	file:
N0	initial_mod.F90	/^  real(real_kind), intent(out):: N0(/;"	L	subroutine:cold_start_wam	file:
NC_INC	Makefile	/^ NC_INC = -I$(shell nf-config --includedir)$/;"	m
NC_LIB	Makefile	/^ NC_LIB = $(shell nf-config --flibs)$/;"	m
NDIKCUMUL	wam_source_module.F90	/^INTEGER :: NDIKCUMUL /;"	v	module:WAM_SOURCE_MODULE
NFRE	wam_source_module.F90	/^INTEGER :: NFRE$/;"	L	subroutine:IMPHFTAIL_OPENACC	file:
NGST	wam_source_module.F90	/^INTEGER , PARAMETER :: NGST=/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
NINL	wam_source_module.F90	/^INTEGER, PARAMETER :: NINL /;"	v	module:WAM_SOURCE_MODULE
NITER	wam_source_module.F90	/^      INTEGER, PARAMETER :: NITER=/;"	L	subroutine:TABU_SWELLFT	file:
NITER	wam_source_module.F90	/^INTEGER, PARAMETER :: NITER=/;"	L	subroutine:AIRSEA	file:
NITER	wam_source_module.F90	/^INTEGER, PARAMETER :: NITER=/;"	L	subroutine:AIRSEA_OPENACC	file:
NL	face_mod.F90	/^character(1),  parameter :: NL=/;"	v	module:face
NLWEIGT	wam_source_module.F90	/^SUBROUTINE NLWEIGT$/;"	s	module:WAM_SOURCE_MODULE
NRNL	wam_source_module.F90	/^INTEGER, PARAMETER :: NRNL /;"	v	module:WAM_SOURCE_MODULE
NSDSNTH	wam_source_module.F90	/^INTEGER :: NSDSNTH /;"	v	module:WAM_SOURCE_MODULE
NU_AIR	wam_source_module.F90	/^REAL(real_kind) :: FU,FUD,NU_AIR,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
N_all	restart_mod.F90	/^    real(real_kind),allocatable,dimension(:,:,:) :: N_all$/;"	L	subroutine:restart_input	file:
N_new	wave_propag_mod.F90	/^    real(real_kind), intent(out) :: N_new(/;"	L	subroutine:update_state	file:
N_old	wave_propag_mod.F90	/^    real(real_kind), intent(in)  :: N_old(/;"	L	subroutine:calc_tend_geog	file:
N_old	wave_propag_mod.F90	/^    real(real_kind), intent(in)  :: N_old(/;"	L	subroutine:calc_tend_theta	file:
N_old	wave_propag_mod.F90	/^    real(real_kind), intent(in)  :: N_old(/;"	L	subroutine:update_state	file:
OM	wam_source_module.F90	/^    REAL(real_kind) ::  EPS, X, T_0, OM,/;"	L	function:TRANSF	file:
OM	wam_source_module.F90	/^REAL(real_kind)    :: D, OM,/;"	L	subroutine:MAKE_SHALLOW_SNL	file:
OM	wave_propag_mod.F90	/^  REAL, INTENT(IN) :: OM /;"	L	function:wave_numb	file:
OMEGA	wam_source_module.F90	/^REAL(real_kind) :: OMEGA,/;"	L	subroutine:TAU_PHI_HF	file:
OMEGA	wam_source_module.F90	/^REAL(real_kind) :: OMEGA,/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
OMEGAC	wam_source_module.F90	/^REAL(real_kind) :: OMEGA, OMEGAC,/;"	L	subroutine:TAU_PHI_HF	file:
OMEGAC	wam_source_module.F90	/^REAL(real_kind) :: OMEGA, OMEGAC,/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
OMEGACC	wam_source_module.F90	/^REAL(real_kind) :: OMEGA, OMEGAC, OMEGACC$/;"	L	subroutine:TAU_PHI_HF	file:
OMEGACC	wam_source_module.F90	/^REAL(real_kind) :: OMEGA, OMEGAC, OMEGACC$/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
ONETHIRD	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: ONETHIRD /;"	L	subroutine:WSIGSTAR	file:
ONETHIRD	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: ONETHIRD /;"	L	subroutine:WSIGSTAR_OPENACC	file:
OP_rad	forcing_mod.F90	/^      real(real_kind) :: OP_rad /;"	L	subroutine:calc_TC_wind_field	file:
OP_rad	forcing_mod.F90	/^      real(real_kind) :: OP_rad /;"	L	subroutine:calc_TC_wind_field_openacc	file:
P1	wam_source_module.F90	/^     &        R1, R2, T1, T2, P1,/;"	L	subroutine:KZEONE	file:
P1	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: P1 /;"	L	subroutine:WSIGSTAR	file:
P1	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: P1 /;"	L	subroutine:WSIGSTAR_OPENACC	file:
P2	wam_source_module.F90	/^     &        R1, R2, T1, T2, P1, P2,/;"	L	subroutine:KZEONE	file:
P2	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: P2 /;"	L	subroutine:WSIGSTAR	file:
P2	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: P2 /;"	L	subroutine:WSIGSTAR_OPENACC	file:
PHI1	wam_source_module.F90	/^REAL(real_kind),DIMENSION(SIZE(F,1)) :: TAU1,PHI1,/;"	L	subroutine:STRESSO_OPENACC	file:
PHIAW	wam_source_module.F90	/^REAL(real_kind),    ALLOCATABLE :: PHIAW(/;"	v	module:WAM_SOURCE_MODULE
PHIAW	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT)   :: PHIAW(/;"	L	subroutine:STRESSO_OPENACC	file:
PHIBOT	wam_source_module.F90	/^REAL(real_kind),    ALLOCATABLE :: PHIBOT(/;"	v	module:WAM_SOURCE_MODULE
PHIHF	wam_source_module.F90	/^REAL(real_kind) :: TAUHF,PHIHF$/;"	L	subroutine:STRESSO_OPENACC	file:
PHIHF	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT)   :: PHIHF(/;"	L	subroutine:TAU_PHI_HF	file:
PHIHF	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT)   :: PHIHF(/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
PHIOC	wam_source_module.F90	/^REAL(real_kind),    ALLOCATABLE :: PHIOC(/;"	v	module:WAM_SOURCE_MODULE
PTURB	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,1)) :: PVISC, PTURB$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
PVISC	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,1)) :: PVISC,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
Pe	const_mod.F90	/^  real(real_kind), parameter :: Pe /;"	v	module:const_mod
Q0	wam_source_module.F90	/^REAL(real_kind)    :: Q0$/;"	L	subroutine:CMPQB_OPENACC	file:
Q0	wam_source_module.F90	/^REAL(real_kind)    :: Q0(/;"	L	subroutine:CMPQB	file:
QB	wam_source_module.F90	/^REAL(real_kind)    , INTENT(OUT) :: QB /;"	L	subroutine:CMPQB_OPENACC	file:
QB	wam_source_module.F90	/^REAL(real_kind)    , INTENT(OUT) :: QB(/;"	L	subroutine:CMPQB	file:
QB	wam_source_module.F90	/^REAL(real_kind) :: QB(/;"	L	subroutine:SFBRK	file:
QB	wam_source_module.F90	/^REAL(real_kind) :: QB,/;"	L	subroutine:SFBRK_OPENACC	file:
R1	wam_source_module.F90	/^      REAL(real_kind) :: X, Y, X2, Y2, RE0, IM0, RE1, IM1,               &$/;"	L	subroutine:KZEONE	file:
R2	wam_source_module.F90	/^     &        R1, R2,/;"	L	subroutine:KZEONE	file:
RE	wam_source_module.F90	/^REA/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
RE0	wam_source_module.F90	/^      REAL(real_kind) :: X, Y, X2, Y2, RE0,/;"	L	subroutine:KZEONE	file:
RE1	wam_source_module.F90	/^      REAL(real_kind) :: X, Y, X2, Y2, RE0, IM0, RE1,/;"	L	subroutine:KZEONE	file:
RENEWALFREQ	wam_source_module.F90	/^REAL(real_kind) :: RENEWALFREQ$/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
RE_C	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,1)) :: SIG_N, UORBT, AORB, RE, RE_C$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
RHOWGDFTH	wam_source_module.F90	/^REAL(real_kind) :: CM, RHOWGDFTH,/;"	L	subroutine:STRESSO_OPENACC	file:
RHOWG_DFIM	fre_dir_mod.F90	/^  REAL(real_kind),ALLOCATABLE :: RHOWG_DFIM(/;"	v	module:fre_dir_mod
RNLCOEF	wam_source_module.F90	/^REAL(real_kind), ALLOCATABLE, DIMENSION(:,:)   :: RNLCOEF /;"	v	module:WAM_SOURCE_MODULE
RNUAIR	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: RNUAIR /;"	v	module:WAM_SOURCE_MODULE
RNUAIRM	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: RNUAIRM /;"	v	module:WAM_SOURCE_MODULE
ROAIRN	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: ROAIRN(/;"	L	subroutine:IMPLSCH	file:
ROAIRN	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: ROAIRN(/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
ROAIRN	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: ROAIRN(/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
ROAIRN	wam_source_module.F90	/^REAL(real_kind), ALLOCATABLE :: ROAIRN(/;"	v	module:WAM_SOURCE_MODULE
ROAIRN_PVISC	wam_source_module.F90	/^REAL(real_kind) :: ROGOROAIR, ROAIRN_PVISC$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
ROG	wam_source_module.F90	/^REAL(real_kind) :: ROG$/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
ROG	wam_source_module.F90	/^REAL(real_kind) :: ROG$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
ROGOROAIR	wam_source_module.F90	/^REAL(real_kind) :: ROGOROAIR,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
RTERM	wam_source_module.F90	/^     &        R1, R2, T1, T2, P1, P2, RTERM,/;"	L	subroutine:KZEONE	file:
SA	initial_mod.F90	/^  REAL(real_kind), PARAMETER :: SA=/;"	L	subroutine:cold_start_wam	file:
SA	initial_mod.F90	/^REAL(real_kind), INTENT(IN)  :: SA /;"	L	subroutine:JONSWAP	file:
SA	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: SA=/;"	L	subroutine:WAM_SOURCE_init	file:
SAA	initial_mod.F90	/^REAL(real_kind)    :: ARG, SAA,/;"	L	subroutine:JONSWAP	file:
SAM	wam_source_module.F90	/^REAL(real_kind)    :: SAP, SAM,/;"	L	subroutine:SNONLIN	file:
SAM	wam_source_module.F90	/^REAL(real_kind)    :: SAP, SAM,/;"	L	subroutine:SNONLIN_OPENACC	file:
SAP	wam_source_module.F90	/^REAL(real_kind)    :: SAP,/;"	L	subroutine:SNONLIN	file:
SAP	wam_source_module.F90	/^REAL(real_kind)    :: SAP,/;"	L	subroutine:SNONLIN_OPENACC	file:
SATWEIGHTS	wam_source_module.F90	/^REAL(real_kind), ALLOCATABLE :: SATWEIGHTS(/;"	v	module:WAM_SOURCE_MODULE
SB	initial_mod.F90	/^  REAL(real_kind), PARAMETER :: SB=/;"	L	subroutine:cold_start_wam	file:
SB	initial_mod.F90	/^REAL(real_kind), INTENT(IN)  :: SB /;"	L	subroutine:JONSWAP	file:
SB	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: SB=/;"	L	subroutine:WAM_SOURCE_init	file:
SBB	initial_mod.F90	/^REAL(real_kind)    :: ARG, SAA, SBB$/;"	L	subroutine:JONSWAP	file:
SBO	wam_source_module.F90	/^REAL(real_kind)    :: SBO$/;"	L	subroutine:SBOTTOM_OPENACC	file:
SBO	wam_source_module.F90	/^REAL(real_kind)    :: SBO(/;"	L	subroutine:SBOTTOM	file:
SBOTTOM	wam_source_module.F90	/^SUBROUTINE SBOTTOM /;"	s	module:WAM_SOURCE_MODULE
SBOTTOM_OPENACC	wam_source_module.F90	/^SUBROUTINE SBOTTOM_OPENACC /;"	s	module:WAM_SOURCE_MODULE
SBR	wam_source_module.F90	/^REAL(real_kind) :: SBR(/;"	L	subroutine:SFBRK	file:
SBR	wam_source_module.F90	/^REAL(real_kind) :: SBR(/;"	L	subroutine:SFBRK_OPENACC	file:
SCUMUL	wam_source_module.F90	/^REAL(real_kind) :: SCUMUL /;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
SDEPTHLIM	wam_source_module.F90	/^SUBROUTINE SDEPTHLIM(/;"	s	module:WAM_SOURCE_MODULE
SDEPTHLIM_OPENACC	wam_source_module.F90	/^SUBROUTINE SDEPTHLIM_OPENACC(/;"	s	module:WAM_SOURCE_MODULE
SDISSIP_ARD_OPENACC	wam_source_module.F90	/^SUBROUTINE SDISSIP_ARD_OPENACC /;"	s	module:WAM_SOURCE_MODULE
SDSBR	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: SDSBR /;"	v	module:WAM_SOURCE_MODULE
SFBRK	wam_source_module.F90	/^SUBROUTINE SFBRK /;"	s	module:WAM_SOURCE_MODULE
SFBRK_OPENACC	wam_source_module.F90	/^SUBROUTINE SFBRK_OPENACC /;"	s	module:WAM_SOURCE_MODULE
SH	wam_source_module.F90	/^REAL(real_kind) :: CM, XK, SH$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
SI	history_mod.F90	/^     real(real_kind) :: temps1, temps2, SI,/;"	L	subroutine:calc_output	file:
SIG	wam_source_module.F90	/^ REAL(real_kind), DIMENSION(ML) :: SIG,/;"	L	subroutine:INIT_SDISSP_ARD	file:
SIG	wam_source_module.F90	/^REAL(real_kind) :: SIG(/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
SIG	wam_source_module.F90	/^REAL(real_kind) :: SIG,/;"	L	subroutine:STRESSO_OPENACC	file:
SIG	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,3)) :: CONST, SIG,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
SIG2	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,3)) :: CONST, SIG, SIGM1, SIG2,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
SIGM1	wam_source_module.F90	/^REAL(real_kind) :: SIG, SIGM1$/;"	L	subroutine:STRESSO_OPENACC	file:
SIGM1	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,3)) :: CONST, SIG, SIGM1,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
SIG_CONV	wam_source_module.F90	/^REAL(real_kind) :: U10, C_D, DC_DDU, SIG_CONV$/;"	L	subroutine:WSIGSTAR	file:
SIG_CONV	wam_source_module.F90	/^REAL(real_kind) :: U10, C_D, DC_DDU, SIG_CONV$/;"	L	subroutine:WSIGSTAR_OPENACC	file:
SIG_N	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT)   :: SIG_N(/;"	L	subroutine:WSIGSTAR	file:
SIG_N	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT)   :: SIG_N(/;"	L	subroutine:WSIGSTAR_OPENACC	file:
SIG_N	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,1)) :: SIG_N,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
SINPLUS	wam_source_module.F90	/^REAL(real_kind) :: GM1, COSW, CONST, SINPLUS$/;"	L	subroutine:STRESSO_OPENACC	file:
SINPUT_ARD_OPENACC	wam_source_module.F90	/^SUBROUTINE SINPUT_ARD_OPENACC /;"	s	module:WAM_SOURCE_MODULE
SL	wam_source_module.F90	/^REAL(real_kind)    :: SL(/;"	L	subroutine:IMPLSCH	file:
SL	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: SL(/;"	L	subroutine:STRESSO_OPENACC	file:
SL	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT)   :: SL(/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
SL	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT)   :: SL(/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
SL	wam_source_module.F90	/^REAL(real_kind),   INTENT(INOUT)        :: SL(/;"	L	subroutine:SOURCE_PHILLIPS	file:
SL	wam_source_module.F90	/^REAL(real_kind), INTENT(INOUT)  :: SL(/;"	L	subroutine:SBOTTOM	file:
SL	wam_source_module.F90	/^REAL(real_kind), INTENT(INOUT)  :: SL(/;"	L	subroutine:SBOTTOM_OPENACC	file:
SL	wam_source_module.F90	/^REAL(real_kind), INTENT(INOUT)  :: SL(/;"	L	subroutine:SFBRK	file:
SL	wam_source_module.F90	/^REAL(real_kind), INTENT(INOUT)  :: SL(/;"	L	subroutine:SFBRK_OPENACC	file:
SL	wam_source_module.F90	/^REAL(real_kind), INTENT(INOUT) :: SL(/;"	L	subroutine:SNONLIN	file:
SL	wam_source_module.F90	/^REAL(real_kind), INTENT(INOUT) :: SL(/;"	L	subroutine:SNONLIN_OPENACC	file:
SLP	wam_source_module.F90	/^REAL(real_kind) :: USTP, USDIRP, UCN, UCNZALPD, FLP,SLP$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
SLP_AVG	wam_source_module.F90	/^REAL(real_kind) :: FLP_AVG, SLP_AVG$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
SL_BOT	wam_source_module.F90	/^REAL(real_kind)    :: SL_BOT(/;"	L	subroutine:IMPLSCH	file:
SMIN	wam_source_module.F90	/^REAL(real_kind)    :: SMIN(/;"	L	subroutine:IMPLSCH	file:
SMOOTH	wam_source_module.F90	/^REAL(real_kind) :: FU,FUD,NU_AIR,SMOOTH,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
SNONLIN	wam_source_module.F90	/^SUBROUTINE SNONLIN /;"	s	module:WAM_SOURCE_MODULE
SNONLIN_OPENACC	wam_source_module.F90	/^SUBROUTINE SNONLIN_OPENACC /;"	s	module:WAM_SOURCE_MODULE
SOURCE_PHILLIPS	wam_source_module.F90	/^SUBROUTINE SOURCE_PHILLIPS /;"	s	module:WAM_SOURCE_MODULE
SPOS	wam_source_module.F90	/^REAL(real_kind)    :: SPOS(/;"	L	subroutine:IMPLSCH	file:
SPOS	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT)   :: SPOS(/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
SPRD	wam_source_module.F90	/^REAL(real_kind)    :: SPRD(/;"	L	subroutine:IMPLSCH	file:
SQRTGZ0	wam_source_module.F90	/^REAL(real_kind) :: FNC2, SQRTZ0OG, SQRTGZ0,/;"	L	subroutine:TAU_PHI_HF	file:
SQRTZ0OG	wam_source_module.F90	/^REAL(real_kind) :: FNC2, SQRTZ0OG,/;"	L	subroutine:TAU_PHI_HF	file:
SQRTZ0OG	wam_source_module.F90	/^REAL(real_kind) :: FNC2, SQRTZ0OG,/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
SSDSBRF1	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: SSDSBRF1 /;"	v	module:WAM_SOURCE_MODULE
SSDSC2	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: SSDSC2 /;"	v	module:WAM_SOURCE_MODULE
SSDSC2_SIG	wam_source_module.F90	/^REAL(real_kind) :: SSDSC2_SIG(/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
SSDSC3	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: SSDSC3 /;"	v	module:WAM_SOURCE_MODULE
SSDSC4	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: SSDSC4 /;"	v	module:WAM_SOURCE_MODULE
SSDSC5	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: SSDSC5 /;"	v	module:WAM_SOURCE_MODULE
SSDSC6	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: SSDSC6 /;"	v	module:WAM_SOURCE_MODULE
SSDSC6M1	wam_source_module.F90	/^REAL(real_kind) :: SSDSC6M1$/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
SSOURCE	wam_source_module.F90	/^REAL(real_kind)    :: SSOURCE(/;"	L	subroutine:IMPLSCH	file:
ST	initial_mod.F90	/^  real(real_kind) :: ST(/;"	L	subroutine:cold_start_wam	file:
STH	wave_propag_mod.F90	/^  REAL :: AKP, BO, TH, STH$/;"	L	function:wave_numb	file:
STRESSO_OPENACC	wam_source_module.F90	/^SUBROUTINE STRESSO_OPENACC /;"	s	module:WAM_SOURCE_MODULE
STYLES	face_mod.F90	/^character(17), parameter :: STYLES(/;"	v	module:face
SUMT	wam_source_module.F90	/^REAL(real_kind) :: SUMT,/;"	L	subroutine:STRESSO_OPENACC	file:
SUMX	wam_source_module.F90	/^REAL(real_kind) :: SUMT, SUMX,/;"	L	subroutine:STRESSO_OPENACC	file:
SUMY	wam_source_module.F90	/^REAL(real_kind) :: SUMT, SUMX, SUMY$/;"	L	subroutine:STRESSO_OPENACC	file:
SWELLF	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: SWELLF /;"	L	subroutine:SINPUT_ARD_OPENACC	file:
SWELLF2	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: SWELLF2 /;"	L	subroutine:SINPUT_ARD_OPENACC	file:
SWELLF3	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: SWELLF3 /;"	L	subroutine:SINPUT_ARD_OPENACC	file:
SWELLF4	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: SWELLF4 /;"	L	subroutine:SINPUT_ARD_OPENACC	file:
SWELLF5	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: SWELLF5 /;"	L	subroutine:SINPUT_ARD_OPENACC	file:
SWELLF6	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: SWELLF6 /;"	L	subroutine:SINPUT_ARD_OPENACC	file:
SWELLF7	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: SWELLF7 /;"	L	subroutine:SINPUT_ARD_OPENACC	file:
SWELLFT	wam_source_module.F90	/^REAL(real_kind)               :: SWELLFT(/;"	v	module:WAM_SOURCE_MODULE
SWH	history_mod.F90	/^     real(real_kind), intent(out):: SWH(/;"	L	subroutine:calc_output	file:
SWH	history_mod.F90	/^  real(real_kind), allocatable :: SWH(/;"	v	module:history_mod
T1	wam_source_module.F90	/^     &        R1, R2, T1,/;"	L	subroutine:KZEONE	file:
T2	wam_source_module.F90	/^     &        R1, R2, T1, T2,/;"	L	subroutine:KZEONE	file:
TABU_SWELLFT	wam_source_module.F90	/^SUBROUTINE TABU_SWELLFT$/;"	s	module:WAM_SOURCE_MODULE
TAILFACTOR	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: TAILFACTOR /;"	L	subroutine:FRCUTINDEX	file:
TAILFACTOR	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: TAILFACTOR /;"	L	subroutine:FRCUTINDEX_OPENACC	file:
TAILFACTOR_PM	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: TAILFACTOR_PM /;"	L	subroutine:FRCUTINDEX	file:
TAILFACTOR_PM	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: TAILFACTOR_PM /;"	L	subroutine:FRCUTINDEX_OPENACC	file:
TAU1	wam_source_module.F90	/^REAL(real_kind),DIMENSION(SIZE(F,1)) :: TAU1,/;"	L	subroutine:STRESSO_OPENACC	file:
TAUBOT_X	wam_source_module.F90	/^REAL(real_kind),    ALLOCATABLE :: TAUBOT_X(/;"	v	module:WAM_SOURCE_MODULE
TAUBOT_Y	wam_source_module.F90	/^REAL(real_kind),    ALLOCATABLE :: TAUBOT_Y(/;"	v	module:WAM_SOURCE_MODULE
TAUHF	wam_source_module.F90	/^REAL(real_kind) :: TAUHF,/;"	L	subroutine:STRESSO_OPENACC	file:
TAUHF	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT)   :: TAUHF(/;"	L	subroutine:TAU_PHI_HF	file:
TAUHF	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT)   :: TAUHF(/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
TAUNEW	wam_source_module.F90	/^REAL(real_kind) :: USTOLD, TAUOLD, TAUNEW,/;"	L	subroutine:AIRSEA	file:
TAUNEW	wam_source_module.F90	/^REAL(real_kind) :: USTOLD, TAUOLD, TAUNEW,/;"	L	subroutine:AIRSEA_OPENACC	file:
TAUOC_X	wam_source_module.F90	/^REAL(real_kind),    ALLOCATABLE :: TAUOC_X(/;"	v	module:WAM_SOURCE_MODULE
TAUOC_Y	wam_source_module.F90	/^REAL(real_kind),    ALLOCATABLE :: TAUOC_Y(/;"	v	module:WAM_SOURCE_MODULE
TAUOLD	wam_source_module.F90	/^REAL(real_kind) :: USTOLD, TAUOLD,/;"	L	subroutine:AIRSEA	file:
TAUOLD	wam_source_module.F90	/^REAL(real_kind) :: USTOLD, TAUOLD,/;"	L	subroutine:AIRSEA_OPENACC	file:
TAUPX	wam_source_module.F90	/^REAL(real_kind) :: TAUPX,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
TAUPY	wam_source_module.F90	/^REAL(real_kind) :: TAUPX,TAUPY$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
TAUW	wam_source_module.F90	/^REAL(real_kind) :: X0G, UST, UST0, TAUW,/;"	L	subroutine:TAU_PHI_HF	file:
TAUW	wam_source_module.F90	/^REAL(real_kind) :: X0G, UST, UST0, TAUW,/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
TAUW	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: TAUW(/;"	L	subroutine:AIRSEA	file:
TAUW	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: TAUW(/;"	L	subroutine:AIRSEA_OPENACC	file:
TAUW	wam_source_module.F90	/^REAL(real_kind),    INTENT(INOUT) :: TAUW /;"	L	subroutine:IMPLSCH	file:
TAUW	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT)   :: TAUW(/;"	L	subroutine:STRESSO_OPENACC	file:
TAUW	wam_source_module.F90	/^REAL(real_kind), ALLOCATABLE :: TAUW(/;"	v	module:WAM_SOURCE_MODULE
TAUW0	wam_source_module.F90	/^REAL(real_kind) :: X0G, UST, UST0, TAUW, TAUW0$/;"	L	subroutine:TAU_PHI_HF	file:
TAUW0	wam_source_module.F90	/^REAL(real_kind) :: X0G, UST, UST0, TAUW, TAUW0$/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
TAUWSHELTER	wam_source_module.F90	/^REAL(real_kind)            :: TAUWSHELTER=/;"	v	module:WAM_SOURCE_MODULE
TAUX	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,1),NGST) :: TAUX,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
TAUY	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,1),NGST) :: TAUX, TAUY$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
TAU_PHI_HF	wam_source_module.F90	/^SUBROUTINE TAU_PHI_HF(/;"	s	module:WAM_SOURCE_MODULE
TAU_PHI_HF_OPENACC	wam_source_module.F90	/^SUBROUTINE TAU_PHI_HF_OPENACC(/;"	s	module:WAM_SOURCE_MODULE
TC_forcing	forcing_mod.F90	/^  type(TC_forcing_/;"	v	module:forcing_mod
TC_forcing_type	forcing_mod.F90	/^  type TC_forcing_type$/;"	t	module:forcing_mod
TEMP	history_mod.F90	/^     real(real_kind) :: TEMP(/;"	L	subroutine:calc_output	file:
TEMP	wam_source_module.F90	/^REAL(real_kind)     :: TEMP(/;"	L	subroutine:TOTAL_ENERGY_B	file:
TEMP	wam_source_module.F90	/^REAL(real_kind)     :: TEMP(/;"	L	subroutine:TOTAL_ENERGY_B_OPENACC	file:
TEMP	wam_source_module.F90	/^REAL(real_kind)    :: TEMP(/;"	L	subroutine:IMPLSCH	file:
TEMP	wam_source_module.F90	/^REAL(real_kind)    :: TEMP(/;"	L	subroutine:SOURCE_PHILLIPS	file:
TEMP	wam_source_module.F90	/^REAL(real_kind)    :: TEMP(/;"	L	subroutine:TM1_TM2_PERIODS_B	file:
TEMP	wam_source_module.F90	/^REAL(real_kind)    :: TEMP(/;"	L	subroutine:TM1_TM2_PERIODS_B_OPENACC	file:
TEMP	wam_source_module.F90	/^REAL(real_kind)    :: TEMP(/;"	L	subroutine:WM1_WM2_WAVENUMBER_B_OPENACC	file:
TEMP	wam_source_module.F90	/^REAL(real_kind) :: TEMP,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
TEMP1	wam_source_module.F90	/^REAL(real_kind) :: DSTAB1, TEMP1,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
TEMP1	wam_source_module.F90	/^REAL(real_kind) :: TEMP1(/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
TEMP2	wam_source_module.F90	/^REAL(real_kind)     :: TEMP2(/;"	L	subroutine:FEMEAN	file:
TEMP2	wam_source_module.F90	/^REAL(real_kind)     :: TEMP2(/;"	L	subroutine:FEMEAN_OPENACC	file:
TEMP2	wam_source_module.F90	/^REAL(real_kind)    :: TEMP(SIZE(F,1),SIZE(F,3)), TEMP2(/;"	L	subroutine:WM1_WM2_WAVENUMBER_B_OPENACC	file:
TEMP2	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,1)) :: TEMP2$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
TEMP2	wam_source_module.F90	/^REAL, DIMENSION(SIZE(FL3,1),SIZE(FL3,3)) :: TEMP2$/;"	L	subroutine:IMPHFTAIL_OPENACC	file:
TEMPC	wam_source_module.F90	/^INTEGER :: TEMPC$/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
TEMPS	wam_source_module.F90	/^REAL(real_kind)     :: TEMPS$/;"	L	subroutine:FEMEAN_OPENACC	file:
TEMPS	wam_source_module.F90	/^REAL(real_kind)     :: TEMPS$/;"	L	subroutine:TOTAL_ENERGY_B_OPENACC	file:
TEMPS	wam_source_module.F90	/^REAL(real_kind)    :: TEMPS$/;"	L	subroutine:TM1_TM2_PERIODS_B_OPENACC	file:
TEMPS	wam_source_module.F90	/^REAL(real_kind)    :: TEMPS$/;"	L	subroutine:WM1_WM2_WAVENUMBER_B_OPENACC	file:
TEMPS1	wam_source_module.F90	/^REAL(real_kind)   :: TEMPS1,/;"	L	subroutine:IMPLSCH	file:
TEMPS1	wam_source_module.F90	/^REAL(real_kind) :: TEMPS1,/;"	L	subroutine:STRESSO_OPENACC	file:
TEMPS2	wam_source_module.F90	/^REAL(real_kind)   :: TEMPS1,TEMPS2,/;"	L	subroutine:IMPLSCH	file:
TEMPS2	wam_source_module.F90	/^REAL(real_kind) :: TEMPS1,TEMPS2,/;"	L	subroutine:STRESSO_OPENACC	file:
TEMPS3	wam_source_module.F90	/^REAL(real_kind)   :: TEMPS1,TEMPS2,TEMPS3$/;"	L	subroutine:IMPLSCH	file:
TEMPS3	wam_source_module.F90	/^REAL(real_kind) :: TEMPS1,TEMPS2,TEMPS3$/;"	L	subroutine:STRESSO_OPENACC	file:
TFAC	wam_source_module.F90	/^REAL :: AKM1, TFAC$/;"	L	subroutine:IMPHFTAIL_OPENACC	file:
TH	wave_propag_mod.F90	/^  REAL :: AKP, BO, TH,/;"	L	function:wave_numb	file:
TM1	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT), OPTIONAL :: TM1(/;"	L	subroutine:TM1_TM2_PERIODS_B	file:
TM1	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT), OPTIONAL :: TM1(/;"	L	subroutine:TM1_TM2_PERIODS_B_OPENACC	file:
TM1_TM2_PERIODS_B	wam_source_module.F90	/^SUBROUTINE TM1_TM2_PERIODS_B /;"	s	module:WAM_SOURCE_MODULE
TM1_TM2_PERIODS_B_OPENACC	wam_source_module.F90	/^SUBROUTINE TM1_TM2_PERIODS_B_OPENACC /;"	s	module:WAM_SOURCE_MODULE
TM2	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT), OPTIONAL :: TM2(/;"	L	subroutine:TM1_TM2_PERIODS_B	file:
TM2	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT), OPTIONAL :: TM2(/;"	L	subroutine:TM1_TM2_PERIODS_B_OPENACC	file:
TMP01	wam_source_module.F90	/^REAL(real_kind) :: TPIINV, TPIINVH, TMP01,/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
TMP02	wam_source_module.F90	/^ REAL(real_kind) :: TPIINV, TMP02$/;"	L	subroutine:INIT_SDISSP_ARD	file:
TMP03	wam_source_module.F90	/^REAL(real_kind) :: TPIINV, TPIINVH, TMP01, TMP03$/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
TOTAL_ENERGY_B	wam_source_module.F90	/^SUBROUTINE TOTAL_ENERGY_B /;"	s	module:WAM_SOURCE_MODULE
TOTAL_ENERGY_B_OPENACC	wam_source_module.F90	/^SUBROUTINE TOTAL_ENERGY_B_OPENACC /;"	s	module:WAM_SOURCE_MODULE
TPHOLD	wam_source_module.F90	/^REAL(real_kind)    :: TPHOLD(/;"	L	subroutine:SOURCE_PHILLIPS	file:
TPIINV	wam_source_module.F90	/^ REAL(real_kind) :: TPIINV,/;"	L	subroutine:INIT_SDISSP_ARD	file:
TPIINV	wam_source_module.F90	/^REAL(real_kind) :: TPIINV,/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
TPIINVH	wam_source_module.F90	/^REAL(real_kind) :: TPIINV, TPIINVH,/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
TRANSF	wam_source_module.F90	/^REAL(real_kind) FUNCTION TRANSF /;"	f	module:WAM_SOURCE_MODULE
TRPZ_DSIP	wam_source_module.F90	/^ REAL(real_kind), DIMENSION(ML) :: SIG, C_, C_C, CGM1, DSIP, TRPZ_DSIP /;"	L	subroutine:INIT_SDISSP_ARD	file:
TSQ	wam_source_module.F90	/^      REAL(real_kind), PARAMETER, DIMENSION(8) :: TSQ /;"	L	subroutine:KZEONE	file:
TWOXMP1	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: TWOXMP1=/;"	L	subroutine:AIRSEA	file:
TWOXMP1	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: TWOXMP1=/;"	L	subroutine:AIRSEA_OPENACC	file:
T_0	wam_source_module.F90	/^    REAL(real_kind) ::  EPS, X, T_0,/;"	L	function:TRANSF	file:
T_TAIL	wam_source_module.F90	/^REAL(real_kind),   ALLOCATABLE, DIMENSION(:,:) :: T_TAIL /;"	v	module:WAM_SOURCE_MODULE
U10	initial_mod.F90	/^REAL(real_kind),    INTENT(IN)  :: U10(/;"	L	subroutine:FETCH_LAW	file:
U10	wam_source_module.F90	/^REAL(real_kind) :: U10,/;"	L	subroutine:WSIGSTAR	file:
U10	wam_source_module.F90	/^REAL(real_kind) :: U10,/;"	L	subroutine:WSIGSTAR_OPENACC	file:
U10	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: U10 /;"	L	subroutine:IMPLSCH	file:
U10	wam_source_module.F90	/^REAL(real_kind), ALLOCATABLE :: U10(/;"	L	subroutine:WAM_SOURCE_init	file:
U10M1	wam_source_module.F90	/^REAL(real_kind) :: U10M1,/;"	L	subroutine:WSIGSTAR	file:
U10M1	wam_source_module.F90	/^REAL(real_kind) :: U10M1,/;"	L	subroutine:WSIGSTAR_OPENACC	file:
U10P2	wam_source_module.F90	/^REAL(real_kind) :: U10M1, C2U10P1, U10P2$/;"	L	subroutine:WSIGSTAR	file:
U10P2	wam_source_module.F90	/^REAL(real_kind) :: U10M1, C2U10P1, U10P2$/;"	L	subroutine:WSIGSTAR_OPENACC	file:
UCN	wam_source_module.F90	/^REAL(real_kind) :: USTP, USDIRP, UCN,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
UCNZALPD	wam_source_module.F90	/^REAL(real_kind) :: USTP, USDIRP, UCN, UCNZALPD,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
UDIR	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: UDIR /;"	L	subroutine:IMPLSCH	file:
UDIR	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: UDIR /;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
UDIR	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: UDIR /;"	L	subroutine:SINPUT_ARD_OPENACC	file:
UDIR	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: UDIR(/;"	L	subroutine:STRESSO_OPENACC	file:
UDIR	wam_source_module.F90	/^REAL(real_kind),   INTENT(IN)           :: UDIR(/;"	L	subroutine:SOURCE_PHILLIPS	file:
UFAC	wam_source_module.F90	/^REAL(real_kind) :: UFAC,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
UG	initial_mod.F90	/^REAL(real_kind) :: UG(/;"	L	subroutine:FETCH_LAW	file:
UMAX	wam_source_module.F90	/^REAL(real_kind),    PARAMETER :: UMAX /;"	v	module:WAM_SOURCE_MODULE
UORBT	wam_source_module.F90	/^REAL(real_kind), DIMENSION(SIZE(F,1)) :: SIG_N, UORBT,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
UPPER_ALPHABET	face_mod.F90	/^character(26), parameter :: UPPER_ALPHABET=/;"	v	module:face
USDIRP	wam_source_module.F90	/^REAL(real_kind) :: USTP, USDIRP,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
USG2	wam_source_module.F90	/^REAL(real_kind) :: USG2$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
UST	wam_source_module.F90	/^REAL(real_kind) :: X0G, UST,/;"	L	subroutine:TAU_PHI_HF	file:
UST	wam_source_module.F90	/^REAL(real_kind) :: X0G, UST,/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
UST0	wam_source_module.F90	/^REAL(real_kind) :: X0G, UST, UST0,/;"	L	subroutine:TAU_PHI_HF	file:
UST0	wam_source_module.F90	/^REAL(real_kind) :: X0G, UST, UST0,/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
USTAR	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: USTAR(/;"	L	subroutine:FRCUTINDEX	file:
USTAR	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: USTAR(/;"	L	subroutine:FRCUTINDEX_OPENACC	file:
USTAR	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: USTAR(/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
USTAR	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: USTAR(/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
USTAR	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: USTAR(/;"	L	subroutine:STRESSO_OPENACC	file:
USTAR	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: USTAR(/;"	L	subroutine:TAU_PHI_HF	file:
USTAR	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: USTAR(/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
USTAR	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: USTAR(/;"	L	subroutine:WSIGSTAR	file:
USTAR	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: USTAR(/;"	L	subroutine:WSIGSTAR_OPENACC	file:
USTAR	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT)   :: USTAR /;"	L	subroutine:IMPLSCH	file:
USTAR	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT)   :: USTAR(/;"	L	subroutine:AIRSEA	file:
USTAR	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT)   :: USTAR(/;"	L	subroutine:AIRSEA_OPENACC	file:
USTAR	wam_source_module.F90	/^REAL(real_kind),   INTENT(IN)           :: USTAR(/;"	L	subroutine:SOURCE_PHILLIPS	file:
USTAR	wam_source_module.F90	/^REAL(real_kind), ALLOCATABLE :: USTAR(/;"	v	module:WAM_SOURCE_MODULE
USTM1	wam_source_module.F90	/^REAL(real_kind) :: USTM1,/;"	L	subroutine:AIRSEA	file:
USTM1	wam_source_module.F90	/^REAL(real_kind) :: USTM1,/;"	L	subroutine:AIRSEA_OPENACC	file:
USTOLD	wam_source_module.F90	/^REAL(real_kind) :: USTOLD,/;"	L	subroutine:AIRSEA	file:
USTOLD	wam_source_module.F90	/^REAL(real_kind) :: USTOLD,/;"	L	subroutine:AIRSEA_OPENACC	file:
USTP	wam_source_module.F90	/^REAL(real_kind) :: USTP,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
UTOP	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: UTOP(/;"	L	subroutine:AIRSEA	file:
UTOP	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: UTOP(/;"	L	subroutine:AIRSEA_OPENACC	file:
V_G	wam_source_module.F90	/^    REAL(real_kind) ::  EPS, X, T_0, OM, C_0, V_G,/;"	L	function:TRANSF	file:
VgCell	forcing_mod.F90	/^      real(real_kind) :: VgCell /;"	L	subroutine:calc_TC_wind_field	file:
VgCell	forcing_mod.F90	/^      real(real_kind) :: VgCell /;"	L	subroutine:calc_TC_wind_field_openacc	file:
WAM_SOURCE_MODULE	wam_source_module.F90	/^MODULE WAM_SOURCE_MODULE$/;"	m
WAM_SOURCE_init	wam_source_module.F90	/^SUBROUTINE WAM_SOURCE_init(/;"	s	module:WAM_SOURCE_MODULE
WAV	wam_source_module.F90	/^REAL(real_kind)    :: WAV$/;"	L	subroutine:SBOTTOM_OPENACC	file:
WAV	wam_source_module.F90	/^REAL(real_kind)    :: WAV(/;"	L	subroutine:SBOTTOM	file:
WCUMUL	wam_source_module.F90	/^REAL(real_kind) :: WCUMUL$/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
WM1	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT), OPTIONAL :: WM1(/;"	L	subroutine:WM1_WM2_WAVENUMBER_B_OPENACC	file:
WM1_WM2_WAVENUMBER_B_OPENACC	wam_source_module.F90	/^SUBROUTINE WM1_WM2_WAVENUMBER_B_OPENACC(/;"	s	module:WAM_SOURCE_MODULE
WM2	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT), OPTIONAL :: WM2(/;"	L	subroutine:WM1_WM2_WAVENUMBER_B_OPENACC	file:
WSIGSTAR	wam_source_module.F90	/^SUBROUTINE WSIGSTAR /;"	s	module:WAM_SOURCE_MODULE
WSIGSTAR_OPENACC	wam_source_module.F90	/^SUBROUTINE WSIGSTAR_OPENACC /;"	s	module:WAM_SOURCE_MODULE
WSPMIN	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: WSPMIN /;"	L	subroutine:WSIGSTAR	file:
WSPMIN	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: WSPMIN /;"	L	subroutine:WSIGSTAR_OPENACC	file:
WSTAR	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: WSTAR /;"	L	subroutine:IMPLSCH	file:
WSTAR	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: WSTAR(/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
WSTAR	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: WSTAR(/;"	L	subroutine:WSIGSTAR	file:
WSTAR	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: WSTAR(/;"	L	subroutine:WSIGSTAR_OPENACC	file:
WSTAR	wam_source_module.F90	/^REAL(real_kind), ALLOCATABLE :: WSTAR(/;"	v	module:WAM_SOURCE_MODULE
WTAUHF	wam_source_module.F90	/^REAL(real_kind)               :: WTAUHF(/;"	v	module:WAM_SOURCE_MODULE
X	wam_source_module.F90	/^      REAL(real_kind) :: X,/;"	L	subroutine:KERKEI	file:
X	wam_source_module.F90	/^      REAL(real_kind) :: X,/;"	L	subroutine:KZEONE	file:
X	wam_source_module.F90	/^    REAL(real_kind) ::  EPS, X,/;"	L	function:TRANSF	file:
X	wam_source_module.F90	/^REAL :: EPMMA, X$/;"	L	subroutine:INIT_SNONLIN	file:
X	wam_source_module.F90	/^REAL(real_kind) :: USTOLD, TAUOLD, TAUNEW, X,/;"	L	subroutine:AIRSEA	file:
X	wam_source_module.F90	/^REAL(real_kind) :: USTOLD, TAUOLD, TAUNEW, X,/;"	L	subroutine:AIRSEA_OPENACC	file:
X	wam_source_module.F90	/^REAL(real_kind) :: XI/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
X0	wam_source_module.F90	/^REAL(real_kind) :: CONST1, X0,/;"	L	subroutine:INIT_X0TAUHF	file:
X0G	wam_source_module.F90	/^REAL(real_kind) :: X0G,/;"	L	subroutine:TAU_PHI_HF	file:
X0G	wam_source_module.F90	/^REAL(real_kind) :: X0G,/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
X0TAUHF	wam_source_module.F90	/^REAL(real_kind)               :: X0TAUHF /;"	v	module:WAM_SOURCE_MODULE
X2	wam_source_module.F90	/^      REAL(real_kind) :: X, Y, X2,/;"	L	subroutine:KZEONE	file:
XEPS	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: XEPS /;"	v	module:WAM_SOURCE_MODULE
XF	wam_source_module.F90	/^REAL(real_kind)    :: F1P1, FRG, FLP, FLM, FKP, FKM, XF,/;"	L	subroutine:NLWEIGT	file:
XI	wam_source_module.F90	/^REAL(real_kind) :: XI,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
XINVEPS	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: XINVEPS /;"	v	module:WAM_SOURCE_MODULE
XK	wam_source_module.F90	/^    REAL(real_kind),    INTENT(IN)    :: XK /;"	L	function:TRANSF	file:
XK	wam_source_module.F90	/^REAL(real_kind)    :: D, OM, XK$/;"	L	subroutine:MAKE_SHALLOW_SNL	file:
XK	wam_source_module.F90	/^REAL(real_kind) :: CM, XK,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
XK	wam_source_module.F90	/^REAL(real_kind) :: XK(/;"	L	subroutine:SDISSIP_ARD_OPENACC	file:
XKAPPA	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: XKAPPA /;"	v	module:WAM_SOURCE_MODULE
XKAPPAD	wam_source_module.F90	/^REAL(real_kind) :: XKAPPAD$/;"	L	subroutine:WSIGSTAR	file:
XKAPPAD	wam_source_module.F90	/^REAL(real_kind) :: XKAPPAD$/;"	L	subroutine:WSIGSTAR_OPENACC	file:
XKMEAN	wam_source_module.F90	/^REAL(real_kind)    :: XKMEAN(/;"	L	subroutine:IMPLSCH	file:
XKUTOP	wam_source_module.F90	/^REAL(real_kind) :: XLOGXL, ALPHAOG, XKUTOP,/;"	L	subroutine:AIRSEA	file:
XKUTOP	wam_source_module.F90	/^REAL(real_kind) :: XLOGXL, ALPHAOG, XKUTOP,/;"	L	subroutine:AIRSEA_OPENACC	file:
XLEVTAIL	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: XLEVTAIL(/;"	L	subroutine:TAU_PHI_HF	file:
XLEVTAIL	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: XLEVTAIL(/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
XLEVTAIL	wam_source_module.F90	/^REAL(real_kind),DIMENSION(SIZE(F,1)) :: TAU1,PHI1,XLEVTAIL$/;"	L	subroutine:STRESSO_OPENACC	file:
XLOGDFRTH	wam_source_module.F90	/^ REAL(real_kind) :: XLOGDFRTH$/;"	L	subroutine:INIT_SDISSP_ARD	file:
XLOGGZ0	wam_source_module.F90	/^REAL(real_kind) :: FNC2, SQRTZ0OG, GM1, GZ0, XLOGGZ0$/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
XLOGGZ0	wam_source_module.F90	/^REAL(real_kind) :: FNC2, SQRTZ0OG, SQRTGZ0, GM1, GZ0, XLOGGZ0$/;"	L	subroutine:TAU_PHI_HF	file:
XLOGXL	wam_source_module.F90	/^REAL(real_kind) :: XLOGXL,/;"	L	subroutine:AIRSEA	file:
XLOGXL	wam_source_module.F90	/^REAL(real_kind) :: XLOGXL,/;"	L	subroutine:AIRSEA_OPENACC	file:
XNL	wam_source_module.F90	/^    REAL(real_kind) ::  EPS, X, T_0, OM, C_0, V_G, DV_G, XNL_/;"	L	function:TRANSF	file:
XNLEV	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: XNLEV /;"	v	module:WAM_SOURCE_MODULE
XNL_1	wam_source_module.F90	/^    REAL(real_kind) ::  EPS, X, T_0, OM, C_0, V_G, DV_G, XNL_1,/;"	L	function:TRANSF	file:
XNL_2	wam_source_module.F90	/^    REAL(real_kind) ::  EPS, X, T_0, OM, C_0, V_G, DV_G, XNL_1, XNL_2,/;"	L	function:TRANSF	file:
XOLOGZ0	wam_source_module.F90	/^REAL(real_kind) :: XLOGXL, ALPHAOG, XKUTOP, XOLOGZ0$/;"	L	subroutine:AIRSEA	file:
XOLOGZ0	wam_source_module.F90	/^REAL(real_kind) :: XLOGXL, ALPHAOG, XKUTOP, XOLOGZ0$/;"	L	subroutine:AIRSEA_OPENACC	file:
XSTRESS	wam_source_module.F90	/^REAL(real_kind) :: XSTRESS,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
XSTRESS	wam_source_module.F90	/^REAL(real_kind),DIMENSION(SIZE(F,1)) :: XSTRESS,/;"	L	subroutine:STRESSO_OPENACC	file:
X_rad	forcing_mod.F90	/^      real(real_kind) :: X_rad /;"	L	subroutine:calc_TC_wind_field	file:
X_rad	forcing_mod.F90	/^      real(real_kind) :: X_rad /;"	L	subroutine:calc_TC_wind_field_openacc	file:
Y	wam_source_module.F90	/^      REAL(real_kind) :: X, Y,/;"	L	subroutine:KZEONE	file:
Y	wam_source_module.F90	/^REAL(real_kind) :: Y,/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
Y	wam_source_module.F90	/^REAL(real_kind) :: YC/;"	L	subroutine:TAU_PHI_HF	file:
Y2	wam_source_module.F90	/^      REAL(real_kind) :: X, Y, X2, Y2,/;"	L	subroutine:KZEONE	file:
YC	wam_source_module.F90	/^REAL(real_kind) :: YC,/;"	L	subroutine:TAU_PHI_HF	file:
YSTRESS	wam_source_module.F90	/^REAL(real_kind) :: XSTRESS, YSTRESS$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
YSTRESS	wam_source_module.F90	/^REAL(real_kind),DIMENSION(SIZE(F,1)) :: XSTRESS, YSTRESS$/;"	L	subroutine:STRESSO_OPENACC	file:
Y_rad	forcing_mod.F90	/^      real(real_kind) :: Y_rad /;"	L	subroutine:calc_TC_wind_field	file:
Y_rad	forcing_mod.F90	/^      real(real_kind) :: Y_rad /;"	L	subroutine:calc_TC_wind_field_openacc	file:
Z0	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: Z0 /;"	L	subroutine:SINPUT_ARD_OPENACC	file:
Z0	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: Z0(/;"	L	subroutine:STRESSO_OPENACC	file:
Z0	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: Z0(/;"	L	subroutine:TAU_PHI_HF	file:
Z0	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: Z0(/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
Z0	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: Z0(/;"	L	subroutine:WSIGSTAR	file:
Z0	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: Z0(/;"	L	subroutine:WSIGSTAR_OPENACC	file:
Z0	wam_source_module.F90	/^REAL(real_kind),    INTENT(INOUT) :: Z0 /;"	L	subroutine:IMPLSCH	file:
Z0	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT)   :: Z0(/;"	L	subroutine:AIRSEA	file:
Z0	wam_source_module.F90	/^REAL(real_kind),    INTENT(OUT)   :: Z0(/;"	L	subroutine:AIRSEA_OPENACC	file:
Z0	wam_source_module.F90	/^REAL(real_kind), ALLOCATABLE :: Z0(/;"	v	module:WAM_SOURCE_MODULE
Z0CH	wam_source_module.F90	/^REAL(real_kind) :: USTM1, Z0TOT, Z0CH,/;"	L	subroutine:AIRSEA	file:
Z0CH	wam_source_module.F90	/^REAL(real_kind) :: USTM1, Z0TOT, Z0CH,/;"	L	subroutine:AIRSEA_OPENACC	file:
Z0RAT	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: Z0RAT /;"	L	subroutine:SINPUT_ARD_OPENACC	file:
Z0TOT	wam_source_module.F90	/^REAL(real_kind) :: USTM1, Z0TOT,/;"	L	subroutine:AIRSEA	file:
Z0TOT	wam_source_module.F90	/^REAL(real_kind) :: USTM1, Z0TOT,/;"	L	subroutine:AIRSEA_OPENACC	file:
Z0TUB	wam_source_module.F90	/^REAL(real_kind) :: FU,FUD,NU_AIR,SMOOTH, HFTSWELLF6,Z0TUB$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
Z0TUBMAX	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: Z0TUBMAX /;"	L	subroutine:SINPUT_ARD_OPENACC	file:
Z0VIS	wam_source_module.F90	/^REAL(real_kind) :: USTM1, Z0TOT, Z0CH, Z0VIS,/;"	L	subroutine:AIRSEA	file:
Z0VIS	wam_source_module.F90	/^REAL(real_kind) :: USTM1, Z0TOT, Z0CH, Z0VIS,/;"	L	subroutine:AIRSEA_OPENACC	file:
Z0VIS	wam_source_module.F90	/^REAL(real_kind) :: Z0VIS,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
ZALP	wam_source_module.F90	/^REAL(real_kind)            :: ZALP /;"	v	module:WAM_SOURCE_MODULE
ZARG	wam_source_module.F90	/^REAL(real_kind) :: YC, Y, CM1, ZX, ZARG,/;"	L	subroutine:TAU_PHI_HF	file:
ZBETA	wam_source_module.F90	/^REAL(real_kind) :: YC, Y, CM1, ZX, ZARG, ZLOG, ZBETA$/;"	L	subroutine:TAU_PHI_HF	file:
ZCN	wam_source_module.F90	/^REAL(real_kind) :: ZCN$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
ZDP	initial_mod.F90	/^  REAL(real_kind), PARAMETER :: ZDP=/;"	L	subroutine:cold_start_wam	file:
ZI	wam_source_module.F90	/^      REAL(real_kind) :: ZR, ZI,/;"	L	subroutine:KERKEI	file:
ZINF	wam_source_module.F90	/^REAL(real_kind) :: DELZ, ZINF$/;"	L	subroutine:TAU_PHI_HF	file:
ZINF	wam_source_module.F90	/^REAL(real_kind) :: DELZ, ZINF$/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
ZLOG	wam_source_module.F90	/^REAL(real_kind) :: Y, CM1, ZX, ZLOG$/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
ZLOG	wam_source_module.F90	/^REAL(real_kind) :: YC, Y, CM1, ZX, ZARG, ZLOG,/;"	L	subroutine:TAU_PHI_HF	file:
ZLOG	wam_source_module.F90	/^REAL(real_kind) :: ZLOG,/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
ZLOG2X	wam_source_module.F90	/^REAL(real_kind) :: ZLOG, ZLOG2X$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
ZORB	wam_source_module.F90	/^REAL(real_kind) :: TEMP, ZORB$/;"	L	subroutine:SINPUT_ARD_OPENACC	file:
ZR	wam_source_module.F90	/^      REAL(real_kind) :: ZR,/;"	L	subroutine:KERKEI	file:
ZSUP	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: ZSUP /;"	L	subroutine:TAU_PHI_HF	file:
ZSUP	wam_source_module.F90	/^REAL(real_kind), PARAMETER :: ZSUP /;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
ZX	wam_source_module.F90	/^REAL(real_kind) :: Y, CM1, ZX,/;"	L	subroutine:TAU_PHI_HF_OPENACC	file:
ZX	wam_source_module.F90	/^REAL(real_kind) :: YC, Y, CM1, ZX,/;"	L	subroutine:TAU_PHI_HF	file:
ZZ	wam_source_module.F90	/^REAL(real_kind) :: USTM1, Z0TOT, Z0CH, Z0VIS, ZZ$/;"	L	subroutine:AIRSEA	file:
ZZ	wam_source_module.F90	/^REAL(real_kind) :: USTM1, Z0TOT, Z0CH, Z0VIS, ZZ$/;"	L	subroutine:AIRSEA_OPENACC	file:
a	mod_mpi_interfaces.F90	/^       INTEGER, DIMENSION(:) :: a /;"	L	function:mpi_findloc	file:
a	mod_mpi_interfaces.F90	/^       INTEGER, DIMENSION(:) :: a /;"	L	function:mpi_findloc_ordered	file:
a	mod_mpi_interfaces.F90	/^      INTEGER, INTENT(in out) :: a(/;"	L	subroutine:mpi_sort_one	file:
a	mod_mpi_interfaces.F90	/^      INTEGER, INTENT(inout) :: a(/;"	L	subroutine:mpi_sort_two	file:
add	datetime_mod.F90	/^  elemental type(datetime_type) function add(/;"	f	module:datetime_mod
add_days	datetime_mod.F90	/^  pure subroutine add_days(/;"	s	module:datetime_mod
add_hours	datetime_mod.F90	/^  pure subroutine add_hours(/;"	s	module:datetime_mod
add_milliseconds	datetime_mod.F90	/^  pure subroutine add_milliseconds(/;"	s	module:datetime_mod
add_minutes	datetime_mod.F90	/^  pure subroutine add_minutes(/;"	s	module:datetime_mod
add_months	datetime_mod.F90	/^  pure subroutine add_months(/;"	s	module:datetime_mod
add_seconds	datetime_mod.F90	/^  pure subroutine add_seconds(/;"	s	module:datetime_mod
add_var	fiona_mod.F90	/^    logical, intent(in), optional :: add_var$/;"	L	subroutine:fiona_add_dim	file:
adjust_buf	mod_mpi_test.F90	/^      integer, ALLOCATABLE, DIMENSION(:, :) :: adjust_buf$/;"	L	subroutine:mpi_data_2d_output_int	file:
adjust_buf	mod_mpi_test.F90	/^      real(real_kind), ALLOCATABLE, DIMENSION(:) :: adjust_buf$/;"	L	subroutine:mpi_data_1d_output_real	file:
adjust_buf	mod_mpi_test.F90	/^      real(real_kind), ALLOCATABLE, DIMENSION(:, :) :: adjust_buf$/;"	L	subroutine:mpi_data_2d_output_real	file:
adjust_buf	mod_mpi_test.F90	/^      real(real_kind), ALLOCATABLE, DIMENSION(:, :,:) :: adjust_buf$/;"	L	subroutine:mpi_data_3d_output_real	file:
alert	time_mod.F90	/^    type(alert_/;"	L	function:time_is_alerted	file:
alert	time_mod.F90	/^    type(alert_/;"	L	subroutine:time_add_alert	file:
alert_type	time_mod.F90	/^  type alert_type$/;"	t	module:time_mod
alerts	time_mod.F90	/^  type(hash_table_type) alerts$/;"	v	module:time_mod
allocate_atm_forcing	forcing_mod.F90	/^  subroutine allocate_atm_forcing(/;"	s	module:forcing_mod
allocate_wave	state_mod.F90	/^  subroutine allocate_wave(/;"	s	module:state_mod
angleEdge	mesh_mod.F90	/^  real(real_kind), allocatable :: angleEdge(/;"	v	module:mesh_mod
angleEdgeCos	mesh_mod.F90	/^  real(real_kind), allocatable :: angleEdgeCos(/;"	v	module:mesh_mod
angleEdgeSin	mesh_mod.F90	/^  real(real_kind), allocatable :: angleEdgeSin(/;"	v	module:mesh_mod
append	fiona_mod.F90	/^    logical, intent(in), optional :: append$/;"	L	subroutine:apply_dataset_to_netcdf_master	file:
append	fiona_mod.F90	/^    logical, intent(in), optional :: append$/;"	L	subroutine:apply_dataset_to_netcdf_slave	file:
apply_dataset_to_netcdf_master	fiona_mod.F90	/^  subroutine apply_dataset_to_netcdf_master(/;"	s	module:fiona_mod
apply_dataset_to_netcdf_slave	fiona_mod.F90	/^  subroutine apply_dataset_to_netcdf_slave(/;"	s	module:fiona_mod
areaCell	mesh_mod.F90	/^  real(real_kind), allocatable :: areaCell(/;"	v	module:mesh_mod
areaEdge	mesh_mod.F90	/^  real(real_kind), allocatable :: areaEdge(/;"	v	module:mesh_mod
areaTriangle	mesh_mod.F90	/^  real(real_kind), allocatable :: areaTriangle(/;"	v	module:mesh_mod
arg	wave_propag_mod.F90	/^      real(real_kind) :: arg /;"	L	subroutine:prepare_coef_theta	file:
array	array_mod.F90	/^    type(array_/;"	L	function:array	file:
array	array_mod.F90	/^  function array(/;"	f	module:array_mod
array	fiona_mod.F90	/^    real(8), intent(in) :: array(/;"	L	subroutine:fiona_quick_output_1d_r8	file:
array	fiona_mod.F90	/^    real(8), intent(in) :: array(/;"	L	subroutine:fiona_quick_output_2d_r8	file:
array	mod_mpi_interfaces.F90	/^      integer,intent(INOUT),dimension(:,:) :: array$/;"	L	subroutine:mpi_adjust_cell_indexes	file:
array	mod_mpi_interfaces.F90	/^      integer,intent(INOUT),dimension(:,:) :: array$/;"	L	subroutine:mpi_adjust_edge_indexes	file:
array	mod_mpi_interfaces.F90	/^      integer,intent(INOUT),dimension(:,:) :: array$/;"	L	subroutine:mpi_bcast_2d	file:
array_append	array_mod.F90	/^  subroutine array_append(/;"	s	module:array_mod
array_append_ptr	array_mod.F90	/^  subroutine array_append_ptr(/;"	s	module:array_mod
array_assign	array_mod.F90	/^  subroutine array_assign(/;"	s	module:array_mod
array_clear	array_mod.F90	/^  subroutine array_clear(/;"	s	module:array_mod
array_expand_by	array_mod.F90	/^  subroutine array_expand_by(/;"	s	module:array_mod
array_expand_to	array_mod.F90	/^  subroutine array_expand_to(/;"	s	module:array_mod
array_finalize	array_mod.F90	/^  subroutine array_finalize(/;"	s	module:array_mod
array_index_ptr	array_mod.F90	/^  integer function array_index_ptr(/;"	f	module:array_mod
array_insert_at	array_mod.F90	/^  subroutine array_insert_at(/;"	s	module:array_mod
array_insert_ptr_at	array_mod.F90	/^  subroutine array_insert_ptr_at(/;"	s	module:array_mod
array_item_finalize	array_mod.F90	/^  recursive subroutine array_item_finalize(/;"	s	module:array_mod
array_item_type	array_mod.F90	/^  type array_item_type$/;"	t	module:array_mod
array_last_value	array_mod.F90	/^  function array_last_value(/;"	f	module:array_mod
array_mod	array_mod.F90	/^module array_mod$/;"	m
array_replace_ptr	array_mod.F90	/^  subroutine array_replace_ptr(/;"	s	module:array_mod
array_replace_ptr_at	array_mod.F90	/^  subroutine array_replace_ptr_at(/;"	s	module:array_mod
array_type	array_mod.F90	/^  type array_type$/;"	t	module:array_mod
array_value_at	array_mod.F90	/^  function array_value_at(/;"	f	module:array_mod
assign	datetime_mod.F90	/^  pure elemental subroutine assign(/;"	s	module:datetime_mod
atm_forcing	forcing_mod.F90	/^    type(atm_forcing_/;"	L	subroutine:allocate_atm_forcing	file:
atm_forcing	forcing_mod.F90	/^  type(atm_forcing_/;"	v	module:forcing_mod
atm_forcing_time_step	forcing_mod.F90	/^  integer :: atm_forcing_time_step /;"	v	module:forcing_mod
atm_forcing_type	forcing_mod.F90	/^  type atm_forcing_type$/;"	t	module:forcing_mod
atm_interval_seconds	forcing_mod.F90	/^    real(real_kind)              :: atm_interval_seconds /;"	k	type:forcing_type
atm_time_rate	forcing_mod.F90	/^    real(real_kind)              :: atm_time_rate /;"	k	type:forcing_type
atm_time_size	forcing_mod.F90	/^    integer                      :: atm_time_size /;"	k	type:forcing_type
atm_time_steps_from_update	forcing_mod.F90	/^    integer                      :: atm_time_steps_from_update /;"	k	type:forcing_type
att_name	fiona_mod.F90	/^    character(*), intent(in ) :: att_name$/;"	L	subroutine:fiona_get_att_i4	file:
att_name	fiona_mod.F90	/^    character(*), intent(in ) :: att_name$/;"	L	subroutine:fiona_get_att_i8	file:
att_name	fiona_mod.F90	/^    character(*), intent(in ) :: att_name$/;"	L	subroutine:fiona_get_att_r4	file:
att_name	fiona_mod.F90	/^    character(*), intent(in ) :: att_name$/;"	L	subroutine:fiona_get_att_str	file:
att_name	fiona_mod.F90	/^    character(*), intent(in ) :: att_name$/;"	L	subroutine:fiona_get_var_att_str	file:
att_name	fiona_mod.F90	/^    character(*), intent(in)  :: att_name$/;"	L	subroutine:fiona_get_att_r8	file:
atts	fiona_mod.F90	/^    type(hash_table_type) atts$/;"	k	type:dataset_type
author	fiona_mod.F90	/^    character(256) :: author /;"	k	type:dataset_type
b	mod_mpi_interfaces.F90	/^      INTEGER, INTENT(inout) :: a(:), b(/;"	L	subroutine:mpi_sort_two	file:
basename	string_actions_mod.F90	/^  interface basename$/;"	i	module:string_actions_mod
basename_1	string_actions_mod.F90	/^  pure function basename_1(/;"	f	module:string_actions_mod
bottomDepth	mesh_mod.F90	/^  real(real_kind), allocatable :: bottomDepth(/;"	v	module:mesh_mod
bottomDepthEdge	wave_propag_mod.F90	/^  real(real_kind), allocatable :: bottomDepthEdge(/;"	v	module:wave_propag_mod
bottomDepthSmooth	wave_propag_mod.F90	/^  real(real_kind), allocatable :: bottomDepthSmooth(/;"	v	module:wave_propag_mod
bt	wave_propag_mod.F90	/^      real(real_kind) :: bt$/;"	L	subroutine:prepare_propag	file:
buf_adjust	mod_mpi_test.F90	/^      INTEGER, INTENT(INOUT), DIMENSION(:,:) :: buf_adjust /;"	L	subroutine:mpi_2d_data_adjust_int	file:
buf_adjust	mod_mpi_test.F90	/^      REAL(real_kind), INTENT(INOUT), DIMENSION(:) :: buf_adjust /;"	L	subroutine:mpi_1d_data_adjust	file:
buf_adjust	mod_mpi_test.F90	/^      REAL(real_kind), INTENT(INOUT), DIMENSION(:,:) :: buf_adjust /;"	L	subroutine:mpi_2d_data_adjust_real	file:
buf_adjust	mod_mpi_test.F90	/^      REAL(real_kind), INTENT(INOUT), DIMENSION(:,:,:) :: buf_adjust /;"	L	subroutine:mpi_3d_data_adjust	file:
buf_input	mod_mpi_interfaces.F90	/^      real(kind=real_kind),dimension(:,:),intent(IN) :: buf_input$/;"	L	subroutine:mpi_oncell_input_real_adjust_2d	file:
buf_input	mod_mpi_interfaces.F90	/^      real(kind=real_kind),dimension(:,:,:),intent(IN) :: buf_input$/;"	L	subroutine:mpi_oncell_input_real_adjust_3d	file:
buf_original	mod_mpi_test.F90	/^      INTEGER, INTENT(IN), DIMENSION(:) :: buf_original /;"	L	subroutine:mpi_2d_data_adjust_int	file:
buf_original	mod_mpi_test.F90	/^      REAL(real_kind), INTENT(IN), DIMENSION(:) :: buf_original /;"	L	subroutine:mpi_1d_data_adjust	file:
buf_original	mod_mpi_test.F90	/^      REAL(real_kind), INTENT(IN), DIMENSION(:) :: buf_original /;"	L	subroutine:mpi_2d_data_adjust_real	file:
buf_original	mod_mpi_test.F90	/^      REAL(real_kind), INTENT(IN), DIMENSION(:) :: buf_original /;"	L	subroutine:mpi_3d_data_adjust	file:
buf_output	mod_mpi_interfaces.F90	/^      integer,dimension(:),intent(INOUT) :: buf_output$/;"	L	subroutine:mpi_oncell_output_integer_adjust_1d	file:
buf_output	mod_mpi_interfaces.F90	/^      real(kind=real_kind),dimension(:),intent(INOUT) :: buf_output$/;"	L	subroutine:mpi_adjust_sta_1d_real	file:
buf_output	mod_mpi_interfaces.F90	/^      real(kind=real_kind),dimension(:),intent(INOUT) :: buf_output$/;"	L	subroutine:mpi_oncell_input_real_adjust_2d	file:
buf_output	mod_mpi_interfaces.F90	/^      real(kind=real_kind),dimension(:),intent(INOUT) :: buf_output$/;"	L	subroutine:mpi_oncell_input_real_adjust_3d	file:
buf_output	mod_mpi_interfaces.F90	/^      real(kind=real_kind),dimension(:),intent(INOUT) :: buf_output$/;"	L	subroutine:mpi_oncell_output_real_adjust_1d	file:
buf_output	mod_mpi_interfaces.F90	/^      real(kind=real_kind),dimension(:),intent(INOUT) :: buf_output$/;"	L	subroutine:mpi_onedge_output_real_adjust_1d	file:
buf_output	mod_mpi_interfaces.F90	/^      real(kind=real_kind),dimension(:,:),intent(INOUT) :: buf_output$/;"	L	subroutine:mpi_oncell_output_real_adjust_2d	file:
buf_output	mod_mpi_interfaces.F90	/^      real(kind=real_kind),dimension(:,:,:),intent(INOUT) :: buf_output$/;"	L	subroutine:mpi_oncell_output_real_adjust_3d	file:
buf_postion	mod_mpi_interfaces.F90	/^      integer :: i,j,buf_postion$/;"	L	subroutine:mpi_input_exchange_root_2d_integer	file:
buf_postion	mod_mpi_interfaces.F90	/^      integer :: i,j,buf_postion$/;"	L	subroutine:mpi_input_exchange_root_2d_real	file:
buf_recv	mod_mpi_interfaces.F90	/^      integer,dimension(:),intent(IN) :: buf_recv$/;"	L	subroutine:mpi_oncell_output_integer_adjust_1d	file:
buf_recv	mod_mpi_interfaces.F90	/^      real(kind=real_kind),dimension(:),intent(IN) :: buf_recv$/;"	L	subroutine:mpi_adjust_sta_1d_real	file:
buf_recv	mod_mpi_interfaces.F90	/^      real(kind=real_kind),dimension(:),intent(IN) :: buf_recv$/;"	L	subroutine:mpi_oncell_output_real_adjust_1d	file:
buf_recv	mod_mpi_interfaces.F90	/^      real(kind=real_kind),dimension(:),intent(IN) :: buf_recv$/;"	L	subroutine:mpi_oncell_output_real_adjust_2d	file:
buf_recv	mod_mpi_interfaces.F90	/^      real(kind=real_kind),dimension(:),intent(IN) :: buf_recv$/;"	L	subroutine:mpi_oncell_output_real_adjust_3d	file:
buf_recv	mod_mpi_interfaces.F90	/^      real(kind=real_kind),dimension(:),intent(IN) :: buf_recv$/;"	L	subroutine:mpi_onedge_output_real_adjust_1d	file:
c	face_mod.F90	/^  integer(int32)               :: c /;"	L	function:color_index	file:
c	face_mod.F90	/^  integer(int32) :: c /;"	L	subroutine:colors_samples	file:
calc_TC_pres_field	forcing_mod.F90	/^   subroutine calc_TC_pres_field(/;"	s	module:forcing_mod
calc_TC_wind_field	forcing_mod.F90	/^  subroutine calc_TC_wind_field(/;"	s	module:forcing_mod
calc_TC_wind_field_openacc	forcing_mod.F90	/^  subroutine calc_TC_wind_field_openacc(/;"	s	module:forcing_mod
calc_depth_gradient	wave_propag_mod.F90	/^  subroutine calc_depth_gradient(/;"	s	module:wave_propag_mod
calc_distance_from_TC	forcing_mod.F90	/^   subroutine calc_distance_from_TC(/;"	s	module:forcing_mod
calc_distance_from_TC_openacc	forcing_mod.F90	/^   subroutine calc_distance_from_TC_openacc(/;"	s	module:forcing_mod
calc_output	history_mod.F90	/^  subroutine calc_output(/;"	s	module:history_mod
calc_tend_geog	wave_propag_mod.F90	/^  subroutine calc_tend_geog(/;"	s	module:wave_propag_mod
calc_tend_theta	wave_propag_mod.F90	/^  subroutine calc_tend_theta(/;"	s	module:wave_propag_mod
called	fiona_mod.F90	/^    logical, save :: called /;"	L	subroutine:fiona_init	file:
capacity	array_mod.F90	/^    integer :: capacity /;"	k	type:array_type
capacity	array_mod.F90	/^    integer, intent(in) :: capacity$/;"	L	function:array	file:
cellIdxTab	wave_propag_mod.F90	/^  integer, allocatable :: cellIdxTab(/;"	v	module:wave_propag_mod
cellIdxTabSmooth	wave_propag_mod.F90	/^  integer, allocatable :: cellIdxTabSmooth(/;"	v	module:wave_propag_mod
cellTangentPlane	mesh_mod.F90	/^  real(real_kind), allocatable :: cellTangentPlane(/;"	v	module:mesh_mod
cell_1	mask_mod.F90	/^    integer cell_1,/;"	L	subroutine:mask_edge	file:
cell_2	mask_mod.F90	/^    integer cell_1, cell_2$/;"	L	subroutine:mask_edge	file:
cell_ID	mod_mpi_interfaces.F90	/^      integer :: i,j,k,edge_ID,proc_ID,cell_ID$/;"	L	subroutine:mpi_find_halo_edges	file:
cell_ID	mod_mpi_interfaces.F90	/^      integer :: i,j,k,l,m,cell_ID,/;"	L	subroutine:mpi_find_halo_cells	file:
cellsOnCell	mesh_mod.F90	/^  integer, allocatable :: cellsOnCell(/;"	v	module:mesh_mod
cellsOnCell	mod_mpi_interfaces.F90	/^      integer, dimension(:,:),intent(IN) ::  cellsOnCell$/;"	L	subroutine:mpi_find_halo_cells	file:
cellsOnEdge	mesh_mod.F90	/^  integer, allocatable :: cellsOnEdge(/;"	v	module:mesh_mod
cells_num_process	mod_mpi_interfaces.F90	/^      integer,allocatable,dimension(:) :: cells_num_process$/;"	L	subroutine:mpi_find_halo_cells	file:
cells_on_process	mod_mpi_interfaces.F90	/^      integer,allocatable,dimension(:,:) :: cells_on_process$/;"	L	subroutine:mpi_find_halo_cells	file:
cgEdgeNorm	wave_propag_mod.F90	/^    real(real_kind) :: temp, cgEdgeNorm$/;"	L	subroutine:calc_tend_geog	file:
cgEdgeX	wave_propag_mod.F90	/^  real(real_kind), allocatable :: cgEdgeX(/;"	v	module:wave_propag_mod
cgEdgeY	wave_propag_mod.F90	/^  real(real_kind), allocatable :: cgEdgeY(/;"	v	module:wave_propag_mod
chain	hash_table_mod.F90	/^    type(linked_list_type) chain$/;"	k	type:hash_table_item_type
check_nc	read_forcing_mod.F90	/^    subroutine check_nc(/;"	s	module:read_forcing_mod
chunk_size	hash_table_mod.F90	/^    integer :: chunk_size /;"	k	type:hash_table_type
chunk_size	hash_table_mod.F90	/^    integer, intent(in), optional :: chunk_size$/;"	L	function:hash_table	file:
chunk_size	hash_table_mod.F90	/^    integer, intent(in), optional :: chunk_size$/;"	L	subroutine:create_hash_table	file:
clock_comp	wave_main.F90	/^  integer(kind=8) :: start_clock_main, end_clock_main,end_clock_init,clock_comp$/;"	v	program:wave_main
clock_comp_all	wave_main.F90	/^  integer(kind=8),allocatable,dimension(:) :: clock_comp_all$/;"	v	program:wave_main
coc	mask_mod.F90	/^    integer:: iCell, eoc, j, coc$/;"	L	subroutine:mask_init	file:
coc	wave_propag_mod.F90	/^      integer         :: iCell, i, j, nCOC, coc$/;"	L	subroutine:calc_depth_gradient	file:
coc	wave_propag_mod.F90	/^      integer nCOC, coc,/;"	L	subroutine:prepare_propag	file:
coeff	forcing_mod.F90	/^      real(real_kind) :: coeff$/;"	L	subroutine:calc_TC_wind_field	file:
coeff	forcing_mod.F90	/^      real(real_kind) :: coeff$/;"	L	subroutine:calc_TC_wind_field_openacc	file:
coeffs_reconstruct	mesh_mod.F90	/^  real(real_kind), allocatable :: coeffs_reconstruct(/;"	v	module:mesh_mod
cold_start_wam	initial_mod.F90	/^subroutine cold_start_wam(/;"	s	module:initial_mod
color	face_mod.F90	/^  character(len=*), intent(in) :: color /;"	L	function:color_index	file:
color_bg	face_mod.F90	/^  character(len=*), intent(in), optional :: color_bg /;"	L	function:colorize	file:
color_fg	face_mod.F90	/^  character(len=*), intent(in), optional :: color_fg /;"	L	function:colorize	file:
color_index	face_mod.F90	/^  elemental function color_index(/;"	f	module:face
color_index	face_mod.F90	/^  integer(int32)               :: color_index /;"	L	function:color_index	file:
colorize	face_mod.F90	/^  pure function colorize(/;"	f	module:face
colorized	face_mod.F90	/^  character(len=:), allocatable          :: colorized /;"	L	function:colorize	file:
colors_samples	face_mod.F90	/^  subroutine colors_samples(/;"	s	module:face
const_mod	const_mod.F90	/^module const_mod$/;"	m
container	container.F90	/^module container$/;"	m
cosTheta	fre_dir_mod.F90	/^  real(real_kind), allocatable :: cosTheta(/;"	v	module:fre_dir_mod
count_rate	wave_main.F90	/^  real(8) :: run_time_main, count_rate$/;"	v	program:wave_main
count_string	string_actions_mod.F90	/^  interface count_string$/;"	i	module:string_actions_mod
count_string_1	string_actions_mod.F90	/^  pure integer function count_string_1(/;"	f	module:string_actions_mod
counts_all_2d	mod_mpi_test.F90	/^      integer :: counts_all_2d(/;"	L	subroutine:mpi_data_2d_output_int	file:
counts_all_2d	mod_mpi_test.F90	/^      integer :: counts_all_2d(/;"	L	subroutine:mpi_data_2d_output_real	file:
counts_all_3d	mod_mpi_test.F90	/^      integer :: counts_all_3d(/;"	L	subroutine:mpi_data_3d_output_real	file:
create_datetime	datetime_mod.F90	/^  interface create_datetime$/;"	i	module:datetime_mod
create_hash_table	hash_table_mod.F90	/^  subroutine create_hash_table(/;"	s	module:hash_table_mod
create_hash_table_iterator	hash_table_mod.F90	/^  subroutine create_hash_table_iterator(/;"	s	module:hash_table_mod
curr_date_format	history_mod.F90	/^      character(19), intent(in) :: curr_date_format /;"	L	subroutine:station_output_init	file:
curr_date_format	history_mod.F90	/^    character(19) :: curr_date_format /;"	L	subroutine:history_create_new_file	file:
curr_date_format	history_mod.F90	/^    character(19) :: curr_date_format /;"	L	subroutine:history_init	file:
curr_time	time_mod.F90	/^  type(datetime_type) curr_time$/;"	v	module:time_mod
curr_time_format	time_mod.F90	/^  character(30) curr_time_format$/;"	v	module:time_mod
current_p	mod_mpi_interfaces.F90	/^      INTEGER :: current_p$/;"	L	subroutine:mpi_real_2d_prepare_sendbuf	file:
current_p	mod_mpi_interfaces.F90	/^      INTEGER :: current_p$/;"	L	subroutine:mpi_real_3d_prepare_sendbuf	file:
current_p	mod_mpi_interfaces.F90	/^      INTEGER :: i, j,k, current_p$/;"	L	subroutine:mpi_real_3d_prepare_recvbuf	file:
current_p	mod_mpi_interfaces.F90	/^      INTEGER :: i, k, current_p$/;"	L	subroutine:mpi_real_2d_prepare_recvbuf	file:
current_p	mod_mpi_interfaces.F90	/^      INTEGER :: j,k, current_p$/;"	L	subroutine:mpi_real_3d_prepare_recvbuf_onebyone	file:
d1	mod_mpi_io_netcdf.F90	/^      integer, intent(in) :: d1$/;"	L	subroutine:netcdf_read_array_1d_wp	file:
d1	mod_mpi_io_netcdf.F90	/^      integer, intent(in) :: d1$/;"	L	subroutine:netcdf_write_array_1d_wp	file:
d1	mod_mpi_io_netcdf.F90	/^      integer, intent(in) :: d1,/;"	L	subroutine:netcdf_read_array_2d_wp	file:
d1	mod_mpi_io_netcdf.F90	/^      integer, intent(in) :: d1,/;"	L	subroutine:netcdf_read_array_3d_wp	file:
d1	mod_mpi_io_netcdf.F90	/^      integer, intent(in) :: d1,/;"	L	subroutine:netcdf_write_array_2d_int	file:
d1	mod_mpi_io_netcdf.F90	/^      integer, intent(in) :: d1,/;"	L	subroutine:netcdf_write_array_2d_wp	file:
d1	mod_mpi_io_netcdf.F90	/^      integer, intent(in) :: d1,/;"	L	subroutine:netcdf_write_array_3d_wp	file:
d1	mod_mpi_test.F90	/^      INTEGER, INTENT(IN) :: d1 /;"	L	subroutine:mpi_2d_data_adjust_int	file:
d1	mod_mpi_test.F90	/^      INTEGER, INTENT(IN) :: d1 /;"	L	subroutine:mpi_2d_data_adjust_real	file:
d1	mod_mpi_test.F90	/^      INTEGER, INTENT(IN) :: d1 /;"	L	subroutine:mpi_3d_data_adjust	file:
d1	mod_mpi_test.F90	/^      integer, intent(in) :: d1$/;"	L	subroutine:mpi_data_2d_output_int	file:
d1	mod_mpi_test.F90	/^      integer, intent(in) :: d1$/;"	L	subroutine:mpi_data_2d_output_real	file:
d1	mod_mpi_test.F90	/^      integer, intent(in) :: d1$/;"	L	subroutine:mpi_data_3d_output_real	file:
d2	mod_mpi_io_netcdf.F90	/^      integer, intent(in) :: d1, d2$/;"	L	subroutine:netcdf_read_array_2d_wp	file:
d2	mod_mpi_io_netcdf.F90	/^      integer, intent(in) :: d1, d2$/;"	L	subroutine:netcdf_write_array_2d_int	file:
d2	mod_mpi_io_netcdf.F90	/^      integer, intent(in) :: d1, d2$/;"	L	subroutine:netcdf_write_array_2d_wp	file:
d2	mod_mpi_io_netcdf.F90	/^      integer, intent(in) :: d1, d2,/;"	L	subroutine:netcdf_read_array_3d_wp	file:
d2	mod_mpi_io_netcdf.F90	/^      integer, intent(in) :: d1, d2,/;"	L	subroutine:netcdf_write_array_3d_wp	file:
d2	mod_mpi_test.F90	/^      INTEGER, INTENT(IN) :: d2 /;"	L	subroutine:mpi_3d_data_adjust	file:
d2	mod_mpi_test.F90	/^      integer, intent(in) :: d2$/;"	L	subroutine:mpi_data_3d_output_real	file:
d3	mod_mpi_io_netcdf.F90	/^      integer, intent(in) :: d1, d2, d3$/;"	L	subroutine:netcdf_read_array_3d_wp	file:
d3	mod_mpi_io_netcdf.F90	/^      integer, intent(in) :: d1, d2,d3$/;"	L	subroutine:netcdf_write_array_3d_wp	file:
dAreaCell	wave_propag_mod.F90	/^      real(real_kind) :: dAreaCell$/;"	L	subroutine:prepare_coef_geog	file:
dHdx	wave_propag_mod.F90	/^      real(real_kind), intent(out) :: dHdx(/;"	L	subroutine:calc_depth_gradient	file:
dHdx	wave_propag_mod.F90	/^  real(real_kind), allocatable :: dHdx(/;"	v	module:wave_propag_mod
dHdxSmooth	wave_propag_mod.F90	/^  real(real_kind), allocatable :: dHdxSmooth(/;"	v	module:wave_propag_mod
dHdx_read	mesh_mod.F90	/^  real(real_kind), allocatable :: dHdx_read(/;"	v	module:mesh_mod
dHdy	wave_propag_mod.F90	/^      real(real_kind), intent(out) :: dHdy(/;"	L	subroutine:calc_depth_gradient	file:
dHdy	wave_propag_mod.F90	/^  real(real_kind), allocatable :: dHdy(/;"	v	module:wave_propag_mod
dHdySmooth	wave_propag_mod.F90	/^  real(real_kind), allocatable :: dHdySmooth(/;"	v	module:wave_propag_mod
dHdy_read	mesh_mod.F90	/^  real(real_kind), allocatable :: dHdy_read(/;"	v	module:mesh_mod
data_type	fiona_mod.F90	/^    character(*), intent(in), optional :: data_type$/;"	L	subroutine:fiona_add_var	file:
data_type	fiona_mod.F90	/^    integer data_type$/;"	k	type:var_type
dataset	fiona_mod.F90	/^    type(dataset_/;"	L	function:fiona_has_var	file:
dataset	fiona_mod.F90	/^    type(dataset_/;"	L	subroutine:apply_dataset_to_netcdf_master	file:
dataset	fiona_mod.F90	/^    type(dataset_/;"	L	subroutine:apply_dataset_to_netcdf_slave	file:
dataset	fiona_mod.F90	/^    type(dataset_/;"	L	subroutine:fiona_add_dim	file:
dataset	fiona_mod.F90	/^    type(dataset_/;"	L	subroutine:fiona_create_dataset	file:
dataset	fiona_mod.F90	/^    type(dataset_/;"	L	subroutine:fiona_end_input	file:
dataset	fiona_mod.F90	/^    type(dataset_/;"	L	subroutine:fiona_end_output	file:
dataset	fiona_mod.F90	/^    type(dataset_/;"	L	subroutine:fiona_get_att_i4	file:
dataset	fiona_mod.F90	/^    type(dataset_/;"	L	subroutine:fiona_get_att_i8	file:
dataset	fiona_mod.F90	/^    type(dataset_/;"	L	subroutine:fiona_get_att_r4	file:
dataset	fiona_mod.F90	/^    type(dataset_/;"	L	subroutine:fiona_get_att_r8	file:
dataset	fiona_mod.F90	/^    type(dataset_/;"	L	subroutine:fiona_get_att_str	file:
dataset	fiona_mod.F90	/^    type(dataset_/;"	L	subroutine:fiona_get_dim	file:
dataset	fiona_mod.F90	/^    type(dataset_/;"	L	subroutine:fiona_get_var_att_str	file:
dataset	fiona_mod.F90	/^    type(dataset_/;"	L	subroutine:fiona_open_dataset	file:
dataset	fiona_mod.F90	/^    type(dataset_/;"	L	subroutine:fiona_quick_output_1d_r8	file:
dataset	fiona_mod.F90	/^    type(dataset_/;"	L	subroutine:fiona_quick_output_2d_r8	file:
dataset	fiona_mod.F90	/^    type(dataset_/;"	L	subroutine:fiona_start_input	file:
dataset	fiona_mod.F90	/^    type(dataset_/;"	L	subroutine:fiona_start_output	file:
dataset_close	fiona_mod.F90	/^  subroutine dataset_close(/;"	s	module:fiona_mod
dataset_final	fiona_mod.F90	/^  subroutine dataset_final(/;"	s	module:fiona_mod
dataset_is_open	fiona_mod.F90	/^  logical function dataset_is_open(/;"	f	module:fiona_mod
dataset_name	fiona_mod.F90	/^    character(*), intent(in ) :: dataset_name$/;"	L	subroutine:fiona_get_att_i4	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in ) :: dataset_name$/;"	L	subroutine:fiona_get_att_i8	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in ) :: dataset_name$/;"	L	subroutine:fiona_get_att_r4	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in ) :: dataset_name$/;"	L	subroutine:fiona_get_att_str	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in ) :: dataset_name$/;"	L	subroutine:fiona_get_var_att_str	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in ) :: dataset_name$/;"	L	subroutine:fiona_input_3d	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in ) :: dataset_name$/;"	L	subroutine:fiona_input_4d	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in ) :: dataset_name$/;"	L	subroutine:fiona_input_5d	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in)  :: dataset_name$/;"	L	subroutine:fiona_get_att_r8	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in) :: dataset_name$/;"	L	function:fiona_has_var	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in) :: dataset_name$/;"	L	function:get_dataset	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in) :: dataset_name$/;"	L	subroutine:fiona_add_att	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in) :: dataset_name$/;"	L	subroutine:fiona_add_dim	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in) :: dataset_name$/;"	L	subroutine:fiona_add_var	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in) :: dataset_name$/;"	L	subroutine:fiona_create_dataset	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in) :: dataset_name$/;"	L	subroutine:fiona_end_input	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in) :: dataset_name$/;"	L	subroutine:fiona_end_output	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in) :: dataset_name$/;"	L	subroutine:fiona_get_dim	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in) :: dataset_name$/;"	L	subroutine:fiona_input_0d	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in) :: dataset_name$/;"	L	subroutine:fiona_input_1d	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in) :: dataset_name$/;"	L	subroutine:fiona_input_2d	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in) :: dataset_name$/;"	L	subroutine:fiona_open_dataset	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in) :: dataset_name$/;"	L	subroutine:fiona_output_0d	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in) :: dataset_name$/;"	L	subroutine:fiona_output_1d	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in) :: dataset_name$/;"	L	subroutine:fiona_output_2d	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in) :: dataset_name$/;"	L	subroutine:fiona_output_3d	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in) :: dataset_name$/;"	L	subroutine:fiona_output_4d	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in) :: dataset_name$/;"	L	subroutine:fiona_output_5d	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in) :: dataset_name$/;"	L	subroutine:fiona_quick_output_1d_r8	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in) :: dataset_name$/;"	L	subroutine:fiona_quick_output_2d_r8	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in) :: dataset_name$/;"	L	subroutine:fiona_start_input	file:
dataset_name	fiona_mod.F90	/^    character(*), intent(in) :: dataset_name$/;"	L	subroutine:fiona_start_output	file:
dataset_name	mod_mpi_interfaces.F90	/^      character(*), intent(IN) :: dataset_name$/;"	L	subroutine:mpi_output_oncell_1d_integer	file:
dataset_name	mod_mpi_interfaces.F90	/^      character(*), intent(IN) :: dataset_name$/;"	L	subroutine:mpi_output_oncell_1d_real	file:
dataset_name	mod_mpi_interfaces.F90	/^      character(*), intent(IN) :: dataset_name$/;"	L	subroutine:mpi_output_oncell_2d_real	file:
dataset_name	mod_mpi_interfaces.F90	/^      character(*), intent(IN) :: dataset_name$/;"	L	subroutine:mpi_output_oncell_3d_real	file:
dataset_name	mod_mpi_interfaces.F90	/^      character(*), intent(IN) :: dataset_name$/;"	L	subroutine:mpi_output_onedge_1d_real	file:
dataset_open	fiona_mod.F90	/^  subroutine dataset_open(/;"	s	module:fiona_mod
dataset_type	fiona_mod.F90	/^  type dataset_type$/;"	t	module:fiona_mod
datasets	fiona_mod.F90	/^  type(hash_table_type) datasets$/;"	v	module:fiona_mod
date	mod_mpi_io_netcdf.F90	/^      character(lc) :: time, date,/;"	L	subroutine:netcdf_write_array_0d_dp	file:
date	mod_mpi_io_netcdf.F90	/^      character(lc) :: time, date,/;"	L	subroutine:netcdf_write_array_1d_wp	file:
date	mod_mpi_io_netcdf.F90	/^      character(lc) :: time, date,/;"	L	subroutine:netcdf_write_array_2d_int	file:
date	mod_mpi_io_netcdf.F90	/^      character(lc) :: time, date,/;"	L	subroutine:netcdf_write_array_2d_wp	file:
date	mod_mpi_io_netcdf.F90	/^      character(lc) :: time, date,/;"	L	subroutine:netcdf_write_array_3d_wp	file:
datetime	datetime.F90	/^module datetime$/;"	m
datetime_1	datetime_mod.F90	/^  type(datetime_type) function datetime_1(/;"	f	module:datetime_mod
datetime_2	datetime_mod.F90	/^  type(datetime_type) function datetime_2(/;"	f	module:datetime_mod
datetime_mod	datetime_mod.F90	/^module datetime_mod$/;"	m
datetime_str	datetime_mod.F90	/^    character(*), intent(in) :: datetime_str$/;"	L	function:datetime_2	file:
datetime_type	datetime_mod.F90	/^  type datetime_type$/;"	t	module:datetime_mod
day	datetime_mod.F90	/^    integer :: day /;"	k	type:datetime_type
day	datetime_mod.F90	/^    integer, intent(in), optional :: day$/;"	L	function:datetime_1	file:
days	datetime_mod.F90	/^    integer, intent(in), optional :: days$/;"	L	function:datetime_1	file:
days	datetime_mod.F90	/^    integer, parameter :: days(/;"	L	function:days_of_month	file:
days	time_mod.F90	/^    real(real_kind), intent(in), optional :: days$/;"	L	subroutine:time_add_alert	file:
days	timedelta_mod.F90	/^    real(8) :: days /;"	k	type:timedelta_type
days_	time_mod.F90	/^    real(real_kind) days_$/;"	L	subroutine:time_add_alert	file:
days_in_year	datetime_mod.F90	/^  pure integer function days_in_year(/;"	f	module:datetime_mod
days_of_month	datetime_mod.F90	/^  pure integer function days_of_month(/;"	f	module:datetime_mod
days_of_year	datetime_mod.F90	/^  pure integer function days_of_year(/;"	f	module:datetime_mod
dcEdge	mesh_mod.F90	/^  real(real_kind), allocatable :: dcEdge(/;"	v	module:mesh_mod
decimal_width	string_numerics_mod.F90	/^    integer, intent(in) :: decimal_width$/;"	L	function:r4_to_str	file:
decimal_width	string_numerics_mod.F90	/^    integer, intent(in) :: decimal_width$/;"	L	function:r8_array_to_str	file:
decimal_width	string_numerics_mod.F90	/^    integer, intent(in) :: decimal_width$/;"	L	function:r8_to_str	file:
decomp	fiona_mod.F90	/^    logical :: decomp /;"	k	type:dim_type
decomp	fiona_mod.F90	/^    logical, intent(in), optional :: decomp$/;"	L	subroutine:fiona_add_dim	file:
deg	const_mod.F90	/^  real(real_kind), parameter :: deg /;"	v	module:const_mod
delFre	fre_dir_mod.F90	/^  real(real_kind), allocatable :: delFre(/;"	v	module:fre_dir_mod
delSigma	fre_dir_mod.F90	/^  real(real_kind), allocatable :: delSigma(/;"	v	module:fre_dir_mod
delTheta	fre_dir_mod.F90	/^  real(real_kind)              :: delTheta /;"	v	module:fre_dir_mod
delete_string	string_actions_mod.F90	/^  interface delete_string$/;"	i	module:string_actions_mod
delete_string_1	string_actions_mod.F90	/^  pure function delete_string_1(/;"	f	module:string_actions_mod
delim	string_actions_mod.F90	/^    character(*), intent(in) :: delim$/;"	L	function:split_string_1	file:
delim	string_actions_mod.F90	/^    character(*), intent(in) :: delim$/;"	L	function:split_string_2	file:
deltaP	forcing_mod.F90	/^      real(real_kind) :: deltaP$/;"	L	subroutine:calc_TC_pres_field	file:
deltaP	forcing_mod.F90	/^      real(real_kind) :: deltaP$/;"	L	subroutine:calc_TC_wind_field	file:
deltaP	forcing_mod.F90	/^      real(real_kind) :: deltaP$/;"	L	subroutine:calc_TC_wind_field_openacc	file:
depth	wave_propag_mod.F90	/^      real(real_kind), intent(in)  :: depth(/;"	L	subroutine:calc_depth_gradient	file:
depthBin	wave_propag_mod.F90	/^  real(real_kind), allocatable :: depthBin(/;"	v	module:wave_propag_mod
depthMax	wave_propag_mod.F90	/^  real(real_kind) :: depthMax$/;"	v	module:wave_propag_mod
desc	fiona_mod.F90	/^    character(*), intent(in), optional :: desc$/;"	L	subroutine:fiona_create_dataset	file:
desc	fiona_mod.F90	/^    character(256) :: desc /;"	k	type:dataset_type
desc_	fiona_mod.F90	/^    character(256) desc_,/;"	L	subroutine:fiona_create_dataset	file:
dest_position	mod_mpi_interfaces.F90	/^      INTEGER :: i, k, dest_process,dest_position,/;"	L	subroutine:mpi_get_cell_destination	file:
dest_position	mod_mpi_interfaces.F90	/^      INTEGER :: i, k, dest_process,dest_position,/;"	L	subroutine:mpi_get_edge_destination	file:
dest_postion_end	mod_mpi_interfaces.F90	/^      INTEGER :: i, k, dest_process,dest_position,start,dest_postion_end,/;"	L	subroutine:mpi_get_cell_destination	file:
dest_postion_end	mod_mpi_interfaces.F90	/^      INTEGER :: i, k, dest_process,dest_position,start,dest_postion_end,/;"	L	subroutine:mpi_get_edge_destination	file:
dest_process	mod_mpi_interfaces.F90	/^      INTEGER :: i, k, dest_process,/;"	L	subroutine:mpi_get_cell_destination	file:
dest_process	mod_mpi_interfaces.F90	/^      INTEGER :: i, k, dest_process,/;"	L	subroutine:mpi_get_edge_destination	file:
dev_rank	mod_mpi_interfaces.F90	/^      INTEGER :: InNodeComm,InNodeRank,dev_rank,/;"	L	subroutine:mpi_init_basic_env	file:
diags	log_mod.F90	/^  type(hash_table_type) diags$/;"	v	module:log_mod
dim	fiona_mod.F90	/^    type(dim_/;"	L	subroutine:apply_dataset_to_netcdf_master	file:
dim	fiona_mod.F90	/^    type(dim_/;"	L	subroutine:apply_dataset_to_netcdf_slave	file:
dim	fiona_mod.F90	/^    type(dim_/;"	L	subroutine:fiona_add_dim	file:
dim	fiona_mod.F90	/^    type(dim_/;"	L	subroutine:fiona_get_dim	file:
dim	fiona_mod.F90	/^    type(dim_/;"	L	subroutine:fiona_start_output	file:
dim_name	read_forcing_mod.F90	/^        character(50) :: dim_name$/;"	L	subroutine:read_tc_key_parameters	file:
dim_names	fiona_mod.F90	/^    character(*), intent(in) :: dim_names(/;"	L	subroutine:fiona_add_var	file:
dim_names	fiona_mod.F90	/^    character(*), intent(in) :: dim_names(/;"	L	subroutine:fiona_quick_output_1d_r8	file:
dim_names	fiona_mod.F90	/^    character(*), intent(in) :: dim_names(/;"	L	subroutine:fiona_quick_output_2d_r8	file:
dim_type	fiona_mod.F90	/^  type dim_type$/;"	t	module:fiona_mod
dimen	mod_mpi_interfaces.F90	/^     integer :: dimen,/;"	L	subroutine:mpi_bcast_key_parameters	file:
dimen1	mod_mpi_interfaces.F90	/^      INTEGER :: dimen1$/;"	L	subroutine:mpi_real_2d_block_exchange_oncell	file:
dimen1	mod_mpi_interfaces.F90	/^      INTEGER :: dimen1,/;"	L	subroutine:mpi_real_3d_block_exchange_oncell	file:
dimen1	mod_mpi_interfaces.F90	/^      INTEGER :: dimen1,/;"	L	subroutine:mpi_real_3d_block_exchange_oncell_onebyone	file:
dimen1	mod_mpi_interfaces.F90	/^      INTEGER, INTENT(IN) :: dimen1$/;"	L	subroutine:mpi_2d_prepare_recv_counts_displs	file:
dimen1	mod_mpi_interfaces.F90	/^      INTEGER, INTENT(IN) :: dimen1$/;"	L	subroutine:mpi_3d_prepare_recv_counts_displs	file:
dimen1	mod_mpi_interfaces.F90	/^      INTEGER, INTENT(IN) :: dimen1$/;"	L	subroutine:mpi_real_2d_prepare_recvbuf	file:
dimen1	mod_mpi_interfaces.F90	/^      INTEGER, INTENT(IN) :: dimen1$/;"	L	subroutine:mpi_real_2d_prepare_sendbuf	file:
dimen1	mod_mpi_interfaces.F90	/^      INTEGER, INTENT(IN) :: dimen1$/;"	L	subroutine:mpi_real_3d_prepare_recvbuf	file:
dimen1	mod_mpi_interfaces.F90	/^      INTEGER, INTENT(IN) :: dimen1$/;"	L	subroutine:mpi_real_3d_prepare_recvbuf_onebyone	file:
dimen1	mod_mpi_interfaces.F90	/^      INTEGER, INTENT(IN) :: dimen1$/;"	L	subroutine:mpi_real_3d_prepare_sendbuf	file:
dimen1	mod_mpi_interfaces.F90	/^      integer :: dimen1$/;"	L	subroutine:mpi_adjust_cell_indexes	file:
dimen1	mod_mpi_interfaces.F90	/^      integer :: dimen1$/;"	L	subroutine:mpi_adjust_edge_indexes	file:
dimen1	mod_mpi_interfaces.F90	/^      integer :: dimen1,/;"	L	subroutine:mpi_bcast_2d	file:
dimen1	mod_mpi_interfaces.F90	/^      integer :: dimen1,/;"	L	subroutine:mpi_output_oncell_2d_real	file:
dimen1	mod_mpi_interfaces.F90	/^      integer :: dimen1,/;"	L	subroutine:mpi_output_oncell_3d_real	file:
dimen1	mod_mpi_interfaces.F90	/^      integer :: i,j,dimen1$/;"	L	subroutine:mpi_input_oncell_2d_real	file:
dimen1	mod_mpi_interfaces.F90	/^      integer :: i,j,dimen1,/;"	L	subroutine:mpi_input_oncell_3d_real	file:
dimen1	mod_mpi_interfaces.F90	/^      integer :: i,j,k,dimen1,/;"	L	subroutine:mpi_oncell_input_real_adjust_2d	file:
dimen1	mod_mpi_interfaces.F90	/^      integer :: i,j,k,dimen1,/;"	L	subroutine:mpi_oncell_output_real_adjust_2d	file:
dimen1	mod_mpi_interfaces.F90	/^      integer :: i,j,k,m,dimen1,/;"	L	subroutine:mpi_oncell_input_real_adjust_3d	file:
dimen1	mod_mpi_interfaces.F90	/^      integer :: i,j,k,m,dimen1,/;"	L	subroutine:mpi_oncell_output_real_adjust_3d	file:
dimen1	mod_mpi_interfaces.F90	/^      integer, intent(in) :: dimen1$/;"	L	subroutine:mpi_input_exchange_nonroot_2d_integer	file:
dimen1	mod_mpi_interfaces.F90	/^      integer, intent(in) :: dimen1$/;"	L	subroutine:mpi_input_exchange_nonroot_2d_real	file:
dimen1	mod_mpi_interfaces.F90	/^      integer, intent(in) :: dimen1$/;"	L	subroutine:mpi_input_exchange_root_2d_integer	file:
dimen1	mod_mpi_interfaces.F90	/^      integer, intent(in) :: dimen1$/;"	L	subroutine:mpi_input_exchange_root_2d_real	file:
dimen1_oncell	mod_mpi_interfaces.F90	/^      integer, intent(in) :: dimen1_oncell,/;"	L	subroutine:mpi_get_index_edges_vertices	file:
dimen2	mod_mpi_interfaces.F90	/^      INTEGER :: dimen1,dimen2$/;"	L	subroutine:mpi_real_3d_block_exchange_oncell	file:
dimen2	mod_mpi_interfaces.F90	/^      INTEGER :: dimen1,dimen2,/;"	L	subroutine:mpi_real_3d_block_exchange_oncell_onebyone	file:
dimen2	mod_mpi_interfaces.F90	/^      INTEGER, INTENT(IN) :: dimen2$/;"	L	subroutine:mpi_3d_prepare_recv_counts_displs	file:
dimen2	mod_mpi_interfaces.F90	/^      INTEGER, INTENT(IN) :: dimen2$/;"	L	subroutine:mpi_real_3d_prepare_recvbuf	file:
dimen2	mod_mpi_interfaces.F90	/^      INTEGER, INTENT(IN) :: dimen2$/;"	L	subroutine:mpi_real_3d_prepare_recvbuf_onebyone	file:
dimen2	mod_mpi_interfaces.F90	/^      INTEGER, INTENT(IN) :: dimen2$/;"	L	subroutine:mpi_real_3d_prepare_sendbuf	file:
dimen2	mod_mpi_interfaces.F90	/^      integer :: dimen1,dimen2$/;"	L	subroutine:mpi_bcast_2d	file:
dimen2	mod_mpi_interfaces.F90	/^      integer :: dimen1,dimen2,/;"	L	subroutine:mpi_output_oncell_3d_real	file:
dimen2	mod_mpi_interfaces.F90	/^      integer :: dimen2$/;"	L	subroutine:mpi_adjust_cell_indexes	file:
dimen2	mod_mpi_interfaces.F90	/^      integer :: dimen2$/;"	L	subroutine:mpi_adjust_edge_indexes	file:
dimen2	mod_mpi_interfaces.F90	/^      integer :: i,j,dimen1,dimen2$/;"	L	subroutine:mpi_input_oncell_3d_real	file:
dimen2	mod_mpi_interfaces.F90	/^      integer :: i,j,k,m,dimen1,dimen2,/;"	L	subroutine:mpi_oncell_input_real_adjust_3d	file:
dimen2	mod_mpi_interfaces.F90	/^      integer :: i,j,k,m,dimen1,dimen2,/;"	L	subroutine:mpi_oncell_output_real_adjust_3d	file:
dimen2	mod_mpi_interfaces.F90	/^      integer, intent(in) :: dimen2$/;"	L	subroutine:mpi_input_exchange_nonroot_2d_integer	file:
dimen2	mod_mpi_interfaces.F90	/^      integer, intent(in) :: dimen2$/;"	L	subroutine:mpi_input_exchange_nonroot_2d_real	file:
dimen2	mod_mpi_interfaces.F90	/^      integer, intent(in) :: dimen2$/;"	L	subroutine:mpi_input_exchange_root_2d_integer	file:
dimen2	mod_mpi_interfaces.F90	/^      integer, intent(in) :: dimen2$/;"	L	subroutine:mpi_input_exchange_root_2d_real	file:
dimen2_oncell	mod_mpi_interfaces.F90	/^      integer, intent(in) :: dimen1_oncell,dimen2_oncell$/;"	L	subroutine:mpi_get_index_edges_vertices	file:
dimid	fiona_mod.F90	/^    integer ierr, dimid$/;"	L	subroutine:fiona_get_dim	file:
dimid	mod_mpi_io_netcdf.F90	/^      integer :: ncid, dimid$/;"	L	subroutine:netcdf_read_dimension	file:
dimid_d1	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1,/;"	L	subroutine:netcdf_write_array_1d_wp	file:
dimid_d1	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1,/;"	L	subroutine:netcdf_write_array_2d_int	file:
dimid_d1	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1,/;"	L	subroutine:netcdf_write_array_2d_wp	file:
dimid_d1	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1,/;"	L	subroutine:netcdf_write_array_3d_wp	file:
dimid_d2	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1, dimid_d2,/;"	L	subroutine:netcdf_write_array_2d_int	file:
dimid_d2	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1, dimid_d2,/;"	L	subroutine:netcdf_write_array_2d_wp	file:
dimid_d2	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1, dimid_d2,/;"	L	subroutine:netcdf_write_array_3d_wp	file:
dimid_d3	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1, dimid_d2, dimid_d3,/;"	L	subroutine:netcdf_write_array_3d_wp	file:
dimid_t	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1, dimid_d2, dimid_d3,dimid_t,/;"	L	subroutine:netcdf_write_array_3d_wp	file:
dimid_t	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1, dimid_d2, dimid_t,/;"	L	subroutine:netcdf_write_array_2d_int	file:
dimid_t	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1, dimid_d2, dimid_t,/;"	L	subroutine:netcdf_write_array_2d_wp	file:
dimid_t	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1, dimid_t,/;"	L	subroutine:netcdf_write_array_1d_wp	file:
dimid_t	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_t,/;"	L	subroutine:netcdf_write_array_0d_dp	file:
dimids	fiona_mod.F90	/^    integer, allocatable :: dimids(/;"	L	subroutine:apply_dataset_to_netcdf_master	file:
dimlen	mod_mpi_io_netcdf.F90	/^      integer, intent(inout) :: dimlen$/;"	L	subroutine:netcdf_read_dimension	file:
dimname	mod_mpi_io_netcdf.F90	/^      character(*), intent(in) :: filename, dimname$/;"	L	subroutine:netcdf_read_dimension	file:
dimname	read_forcing_mod.F90	/^        character(30) :: dimname$/;"	L	subroutine:read_met_forcing_var	file:
dimname1	mod_mpi_io_netcdf.F90	/^      character(lc) :: dimname1$/;"	L	subroutine:netcdf_write_array_1d_wp	file:
dimname1	mod_mpi_io_netcdf.F90	/^      character(lc) :: dimname1,/;"	L	subroutine:netcdf_write_array_2d_int	file:
dimname1	mod_mpi_io_netcdf.F90	/^      character(lc) :: dimname1,/;"	L	subroutine:netcdf_write_array_2d_wp	file:
dimname1	mod_mpi_io_netcdf.F90	/^      character(lc) :: dimname1,/;"	L	subroutine:netcdf_write_array_3d_wp	file:
dimname2	mod_mpi_io_netcdf.F90	/^      character(lc) :: dimname1, dimname2$/;"	L	subroutine:netcdf_write_array_2d_int	file:
dimname2	mod_mpi_io_netcdf.F90	/^      character(lc) :: dimname1, dimname2$/;"	L	subroutine:netcdf_write_array_2d_wp	file:
dimname2	mod_mpi_io_netcdf.F90	/^      character(lc) :: dimname1, dimname2,/;"	L	subroutine:netcdf_write_array_3d_wp	file:
dimname3	mod_mpi_io_netcdf.F90	/^      character(lc) :: dimname1, dimname2,dimname3$/;"	L	subroutine:netcdf_write_array_3d_wp	file:
dims	fiona_mod.F90	/^    type(hash_table_type) dims$/;"	k	type:dataset_type
dims	fiona_mod.F90	/^    type(var_dim_type), allocatable :: dims(/;"	k	type:var_type
dirname	string_actions_mod.F90	/^  interface dirname$/;"	i	module:string_actions_mod
dirname_1	string_actions_mod.F90	/^  pure function dirname_1(/;"	f	module:string_actions_mod
displs_all_2d	mod_mpi_test.F90	/^      integer :: displs_all_2d(/;"	L	subroutine:mpi_data_2d_output_int	file:
displs_all_2d	mod_mpi_test.F90	/^      integer :: displs_all_2d(/;"	L	subroutine:mpi_data_2d_output_real	file:
displs_all_3d	mod_mpi_test.F90	/^      integer :: displs_all_3d(/;"	L	subroutine:mpi_data_3d_output_real	file:
distCell	forcing_mod.F90	/^    real(real_kind), allocatable :: distCell /;"	k	type:TC_forcing_type
distTC	forcing_mod.F90	/^      real(real_kind), intent(in) :: distTC(/;"	L	subroutine:calc_TC_pres_field	file:
distTC	forcing_mod.F90	/^      real(real_kind), intent(in) :: distTC(/;"	L	subroutine:calc_TC_wind_field	file:
distTC	forcing_mod.F90	/^      real(real_kind), intent(in) :: distTC(/;"	L	subroutine:calc_TC_wind_field_openacc	file:
distTC	forcing_mod.F90	/^      real(real_kind), intent(out):: distTC(/;"	L	subroutine:calc_distance_from_TC	file:
distTC	forcing_mod.F90	/^      real(real_kind), intent(out):: distTC(/;"	L	subroutine:calc_distance_from_TC_openacc	file:
dotTheta	wave_propag_mod.F90	/^  real(real_kind), allocatable :: dotTheta(/;"	v	module:wave_propag_mod
dt	wam_source_module.F90	/^REAL(real_kind),    INTENT(IN)    :: dt /;"	L	subroutine:IMPLSCH	file:
dt	wave_propag_mod.F90	/^    real(real_kind), intent(in)  :: dt$/;"	L	subroutine:update_state	file:
dt_src	forcing_mod.F90	/^  real(real_kind) :: dt_src$/;"	v	module:forcing_mod
dvEdge	mesh_mod.F90	/^  real(real_kind), allocatable :: dvEdge(/;"	v	module:mesh_mod
edgeIdxTab	wave_propag_mod.F90	/^  integer, allocatable :: edgeIdxTab(/;"	v	module:wave_propag_mod
edgeNormalVectors	mesh_mod.F90	/^  real(real_kind), allocatable :: edgeNormalVectors(/;"	v	module:mesh_mod
edge_ID	mod_mpi_interfaces.F90	/^      integer :: i,j,k,edge_ID,/;"	L	subroutine:mpi_find_halo_edges	file:
edgesOnCell	mesh_mod.F90	/^  integer, allocatable :: edgesOnCell(/;"	v	module:mesh_mod
edgesOnCell	mod_mpi_interfaces.F90	/^      integer, dimension(:,:),intent(IN) ::  edgesOnCell$/;"	L	subroutine:mpi_find_halo_edges	file:
edges_num_process	mod_mpi_interfaces.F90	/^      integer,allocatable,dimension(:) :: edges_num_process$/;"	L	subroutine:mpi_find_halo_edges	file:
edges_on_process	mod_mpi_interfaces.F90	/^      integer,allocatable,dimension(:,:) :: edges_on_process$/;"	L	subroutine:mpi_find_halo_edges	file:
edges_vertices_oncell	mod_mpi_interfaces.F90	/^      integer, intent(in),dimension(:,:) :: edges_vertices_oncell$/;"	L	subroutine:mpi_get_index_edges_vertices	file:
elapsed_seconds	time_mod.F90	/^  real(8) elapsed_seconds$/;"	v	module:time_mod
end_clock_init	wave_main.F90	/^  integer(kind=8) :: start_clock_main, end_clock_main,end_clock_init,/;"	v	program:wave_main
end_clock_main	wave_main.F90	/^  integer(kind=8) :: start_clock_main, end_clock_main,/;"	v	program:wave_main
end_idx	fiona_mod.F90	/^    integer, intent(out), optional :: end_idx$/;"	L	subroutine:fiona_get_dim	file:
end_time	time_mod.F90	/^  type(datetime_type) end_time$/;"	v	module:time_mod
eoc	mask_mod.F90	/^    integer:: iCell, eoc,/;"	L	subroutine:mask_init	file:
eoc	wave_propag_mod.F90	/^      integer         :: iCell, j, nEOC, eoc$/;"	L	subroutine:prepare_coef_geog	file:
eoc	wave_propag_mod.F90	/^      integer nCOC, coc, j, i, eoc$/;"	L	subroutine:prepare_propag	file:
eoc	wave_propag_mod.F90	/^    integer         :: iCell, k, m, j, iE, nEOC, upwindCell, eoc$/;"	L	subroutine:calc_tend_geog	file:
eps	const_mod.F90	/^  real(real_kind), parameter :: eps /;"	v	module:const_mod
eq	datetime_mod.F90	/^  pure elemental logical function eq(/;"	f	module:datetime_mod
errorFlag	mod_mpi_io_netcdf.F90	/^      integer, intent(inout), optional :: errorFlag$/;"	L	subroutine:netcdf_check	file:
ext	string_actions_mod.F90	/^    character(*), intent(in), optional :: ext$/;"	L	function:basename_1	file:
fCell	mesh_mod.F90	/^  real(real_kind), allocatable :: fCell(/;"	v	module:mesh_mod
fEdge	mesh_mod.F90	/^  real(real_kind), allocatable :: fEdge(/;"	v	module:mesh_mod
fVertex	mesh_mod.F90	/^  real(real_kind), allocatable :: fVertex(/;"	v	module:mesh_mod
f_cell	wave_propag_mod.F90	/^     real(real_kind), intent(in ) :: f_cell(/;"	L	subroutine:scalar_c2e_interp_operator	file:
f_edge	wave_propag_mod.F90	/^     real(real_kind), intent(out) :: f_edge(/;"	L	subroutine:scalar_c2e_interp_operator	file:
face	face_mod.F90	/^module face$/;"	m
fields	string_actions_mod.F90	/^    type(string_type), allocatable :: fields(/;"	L	function:basename_1	file:
file	fiona_mod.F90	/^    character(*), intent(in), optional :: file$/;"	L	subroutine:handle_error	file:
file	log_mod.F90	/^    character(*), intent(in), optional :: file$/;"	L	subroutine:log_error	file:
file	log_mod.F90	/^    character(*), intent(in), optional :: file$/;"	L	subroutine:log_notice	file:
file	log_mod.F90	/^    character(*), intent(in), optional :: file$/;"	L	subroutine:log_warning	file:
file_end_idx	fiona_mod.F90	/^    integer file_start_idx, file_end_idx$/;"	k	type:dataset_type
file_exist	mod_mpi_io_netcdf.F90	/^      logical :: file_exist$/;"	L	subroutine:netcdf_write_array_0d_dp	file:
file_exist	mod_mpi_io_netcdf.F90	/^      logical :: file_exist$/;"	L	subroutine:netcdf_write_array_1d_wp	file:
file_exist	mod_mpi_io_netcdf.F90	/^      logical :: file_exist$/;"	L	subroutine:netcdf_write_array_2d_int	file:
file_exist	mod_mpi_io_netcdf.F90	/^      logical :: file_exist$/;"	L	subroutine:netcdf_write_array_2d_wp	file:
file_exist	mod_mpi_io_netcdf.F90	/^      logical :: file_exist$/;"	L	subroutine:netcdf_write_array_3d_wp	file:
file_idx	fiona_mod.F90	/^    integer, intent(in), optional :: file_idx$/;"	L	subroutine:fiona_start_input	file:
file_name	mod_mpi_test.F90	/^      character(*), intent(in) :: file_name$/;"	L	subroutine:mpi_data_1d_output_real	file:
file_name	mod_mpi_test.F90	/^      character(*), intent(in) :: file_name$/;"	L	subroutine:mpi_data_2d_output_int	file:
file_name	mod_mpi_test.F90	/^      character(*), intent(in) :: file_name$/;"	L	subroutine:mpi_data_2d_output_real	file:
file_name	mod_mpi_test.F90	/^      character(*), intent(in) :: file_name$/;"	L	subroutine:mpi_data_3d_output_real	file:
file_name	mod_mpi_test.F90	/^      character(lc), intent(in) :: file_name$/;"	L	subroutine:mpi_write_file_1d_dp	file:
file_name	mod_mpi_test.F90	/^      character(lc), intent(in) :: file_name$/;"	L	subroutine:mpi_write_file_1d_integer	file:
file_name	mod_mpi_test.F90	/^      character(lc), intent(in) :: file_name$/;"	L	subroutine:mpi_write_file_2d_dp	file:
file_name	mod_mpi_test.F90	/^      character(lc), intent(in) :: file_name$/;"	L	subroutine:mpi_write_file_2d_i2	file:
file_name	mod_mpi_test.F90	/^      character(lc), intent(in) :: file_name$/;"	L	subroutine:mpi_write_file_3d_dp	file:
file_name_update	mod_mpi_test.F90	/^      character(lc) :: file_name_update$/;"	L	subroutine:mpi_data_1d_output_real	file:
file_name_update	mod_mpi_test.F90	/^      character(lc) :: file_name_update$/;"	L	subroutine:mpi_data_2d_output_int	file:
file_name_update	mod_mpi_test.F90	/^      character(lc) :: file_name_update$/;"	L	subroutine:mpi_data_2d_output_real	file:
file_name_update	mod_mpi_test.F90	/^      character(lc) :: file_name_update$/;"	L	subroutine:mpi_data_3d_output_real	file:
file_path	fiona_mod.F90	/^    character(*), intent(in) :: file_path$/;"	L	subroutine:apply_dataset_to_netcdf_master	file:
file_path	fiona_mod.F90	/^    character(*), intent(in) :: file_path$/;"	L	subroutine:apply_dataset_to_netcdf_slave	file:
file_path	fiona_mod.F90	/^    character(*), intent(in), optional :: file_path$/;"	L	subroutine:fiona_create_dataset	file:
file_path	fiona_mod.F90	/^    character(*), intent(in), optional :: file_path$/;"	L	subroutine:fiona_open_dataset	file:
file_path	fiona_mod.F90	/^    character(256) :: file_path /;"	k	type:dataset_type
file_path	fiona_mod.F90	/^    character(256) file_path$/;"	L	subroutine:fiona_start_output	file:
file_path	string_actions_mod.F90	/^    character(*), intent(in) :: file_path$/;"	L	function:basename_1	file:
file_path	string_actions_mod.F90	/^    character(*), intent(in) :: file_path$/;"	L	function:dirname_1	file:
file_path_	fiona_mod.F90	/^    character(256) desc_, file_prefix_, file_path_$/;"	L	subroutine:fiona_create_dataset	file:
file_paths	fiona_mod.F90	/^    character(*), intent(in), optional :: file_paths(/;"	L	subroutine:fiona_open_dataset	file:
file_paths	fiona_mod.F90	/^    character(256), allocatable :: file_paths(/;"	k	type:dataset_type
file_prefix	fiona_mod.F90	/^    character(*), intent(in), optional :: file_prefix$/;"	L	subroutine:fiona_create_dataset	file:
file_prefix	fiona_mod.F90	/^    character(*), intent(in), optional :: file_prefix$/;"	L	subroutine:fiona_quick_output_1d_r8	file:
file_prefix	fiona_mod.F90	/^    character(*), intent(in), optional :: file_prefix$/;"	L	subroutine:fiona_quick_output_2d_r8	file:
file_prefix	fiona_mod.F90	/^    character(256) :: file_prefix /;"	k	type:dataset_type
file_prefix_	fiona_mod.F90	/^    character(256) desc_, file_prefix_,/;"	L	subroutine:fiona_create_dataset	file:
file_prefix_	fiona_mod.F90	/^    character(:), allocatable :: file_prefix_$/;"	L	subroutine:fiona_quick_output_1d_r8	file:
file_prefix_	fiona_mod.F90	/^    character(:), allocatable :: file_prefix_$/;"	L	subroutine:fiona_quick_output_2d_r8	file:
file_start_idx	fiona_mod.F90	/^    integer file_start_idx,/;"	k	type:dataset_type
filename	mod_mpi_io_netcdf.F90	/^      character(*), intent(in) :: filename$/;"	L	subroutine:netcdf_check	file:
filename	mod_mpi_io_netcdf.F90	/^      character(*), intent(in) :: filename,/;"	L	subroutine:netcdf_read_array_1d_wp	file:
filename	mod_mpi_io_netcdf.F90	/^      character(*), intent(in) :: filename,/;"	L	subroutine:netcdf_read_array_2d_wp	file:
filename	mod_mpi_io_netcdf.F90	/^      character(*), intent(in) :: filename,/;"	L	subroutine:netcdf_read_array_3d_wp	file:
filename	mod_mpi_io_netcdf.F90	/^      character(*), intent(in) :: filename,/;"	L	subroutine:netcdf_read_dimension	file:
filename	mod_mpi_io_netcdf.F90	/^      character(*), intent(in) :: filename,/;"	L	subroutine:netcdf_write_array_0d_dp	file:
filename	mod_mpi_io_netcdf.F90	/^      character(*), intent(in) :: filename,/;"	L	subroutine:netcdf_write_array_1d_wp	file:
filename	mod_mpi_io_netcdf.F90	/^      character(*), intent(in) :: filename,/;"	L	subroutine:netcdf_write_array_2d_int	file:
filename	mod_mpi_io_netcdf.F90	/^      character(*), intent(in) :: filename,/;"	L	subroutine:netcdf_write_array_2d_wp	file:
filename	mod_mpi_io_netcdf.F90	/^      character(*), intent(in) :: filename,/;"	L	subroutine:netcdf_write_array_3d_wp	file:
filenum	read_forcing_mod.F90	/^        character(4)  :: filenum$/;"	L	subroutine:read_met_forcing_var	file:
fiona_add_att	fiona_mod.F90	/^  subroutine fiona_add_att(/;"	s	module:fiona_mod
fiona_add_dim	fiona_mod.F90	/^  subroutine fiona_add_dim(/;"	s	module:fiona_mod
fiona_add_var	fiona_mod.F90	/^  subroutine fiona_add_var(/;"	s	module:fiona_mod
fiona_create_dataset	fiona_mod.F90	/^  subroutine fiona_create_dataset(/;"	s	module:fiona_mod
fiona_end_input	fiona_mod.F90	/^  subroutine fiona_end_input(/;"	s	module:fiona_mod
fiona_end_output	fiona_mod.F90	/^  subroutine fiona_end_output(/;"	s	module:fiona_mod
fiona_get_att	fiona_mod.F90	/^  interface fiona_get_att$/;"	i	module:fiona_mod
fiona_get_att_i4	fiona_mod.F90	/^  subroutine fiona_get_att_i4(/;"	s	module:fiona_mod
fiona_get_att_i8	fiona_mod.F90	/^  subroutine fiona_get_att_i8(/;"	s	module:fiona_mod
fiona_get_att_r4	fiona_mod.F90	/^  subroutine fiona_get_att_r4(/;"	s	module:fiona_mod
fiona_get_att_r8	fiona_mod.F90	/^  subroutine fiona_get_att_r8(/;"	s	module:fiona_mod
fiona_get_att_str	fiona_mod.F90	/^  subroutine fiona_get_att_str(/;"	s	module:fiona_mod
fiona_get_dim	fiona_mod.F90	/^  subroutine fiona_get_dim(/;"	s	module:fiona_mod
fiona_get_var_att_str	fiona_mod.F90	/^  subroutine fiona_get_var_att_str(/;"	s	module:fiona_mod
fiona_has_var	fiona_mod.F90	/^  logical function fiona_has_var(/;"	f	module:fiona_mod
fiona_init	fiona_mod.F90	/^  subroutine fiona_init(/;"	s	module:fiona_mod
fiona_input	fiona_mod.F90	/^  interface fiona_input$/;"	i	module:fiona_mod
fiona_input_0d	fiona_mod.F90	/^  subroutine fiona_input_0d(/;"	s	module:fiona_mod
fiona_input_1d	fiona_mod.F90	/^  subroutine fiona_input_1d(/;"	s	module:fiona_mod
fiona_input_2d	fiona_mod.F90	/^  subroutine fiona_input_2d(/;"	s	module:fiona_mod
fiona_input_3d	fiona_mod.F90	/^  subroutine fiona_input_3d(/;"	s	module:fiona_mod
fiona_input_4d	fiona_mod.F90	/^  subroutine fiona_input_4d(/;"	s	module:fiona_mod
fiona_input_5d	fiona_mod.F90	/^  subroutine fiona_input_5d(/;"	s	module:fiona_mod
fiona_mod	fiona_mod.F90	/^module fiona_mod$/;"	m
fiona_open_dataset	fiona_mod.F90	/^  subroutine fiona_open_dataset(/;"	s	module:fiona_mod
fiona_output	fiona_mod.F90	/^  interface fiona_output$/;"	i	module:fiona_mod
fiona_output_0d	fiona_mod.F90	/^  subroutine fiona_output_0d(/;"	s	module:fiona_mod
fiona_output_1d	fiona_mod.F90	/^  subroutine fiona_output_1d(/;"	s	module:fiona_mod
fiona_output_2d	fiona_mod.F90	/^  subroutine fiona_output_2d(/;"	s	module:fiona_mod
fiona_output_3d	fiona_mod.F90	/^  subroutine fiona_output_3d(/;"	s	module:fiona_mod
fiona_output_4d	fiona_mod.F90	/^  subroutine fiona_output_4d(/;"	s	module:fiona_mod
fiona_output_5d	fiona_mod.F90	/^  subroutine fiona_output_5d(/;"	s	module:fiona_mod
fiona_quick_output	fiona_mod.F90	/^  interface fiona_quick_output$/;"	i	module:fiona_mod
fiona_quick_output_1d_r8	fiona_mod.F90	/^  subroutine fiona_quick_output_1d_r8(/;"	s	module:fiona_mod
fiona_quick_output_2d_r8	fiona_mod.F90	/^  subroutine fiona_quick_output_2d_r8(/;"	s	module:fiona_mod
fiona_start_input	fiona_mod.F90	/^  subroutine fiona_start_input(/;"	s	module:fiona_mod
fiona_start_output	fiona_mod.F90	/^  subroutine fiona_start_output(/;"	s	module:fiona_mod
first_item	linked_list_mod.F90	/^    type(linked_list_item_type), pointer :: first_item /;"	k	type:linked_list_type
flogger	flogger.F90	/^module flogger$/;"	m
fmt	string_numerics_mod.F90	/^    character(10) fmt$/;"	L	function:r4_to_str	file:
fmt	string_numerics_mod.F90	/^    character(10) fmt$/;"	L	function:r8_to_str	file:
fmt	string_numerics_mod.F90	/^    character(256) fmt$/;"	L	function:i4_array_to_str	file:
fmt	string_numerics_mod.F90	/^    character(256) fmt$/;"	L	function:i4_to_str	file:
forcing	forcing_mod.F90	/^  type(forcing_/;"	v	module:forcing_mod
forcing_init	forcing_mod.F90	/^  subroutine forcing_init(/;"	s	module:forcing_mod
forcing_mod	forcing_mod.F90	/^module forcing_mod$/;"	m
forcing_type	forcing_mod.F90	/^  type forcing_type$/;"	t	module:forcing_mod
format_str	datetime_mod.F90	/^    character(*), intent(in), optional :: format_str$/;"	L	function:datetime_2	file:
found	mod_mpi_interfaces.F90	/^      logical :: found$/;"	L	subroutine:mpi_find_halo_cells	file:
found	mod_mpi_interfaces.F90	/^      logical :: found$/;"	L	subroutine:mpi_find_halo_edges	file:
fp	mod_mpi_io_netcdf.F90	/^      character(*), intent(in) :: filename, varname, fp$/;"	L	subroutine:netcdf_write_array_0d_dp	file:
fp	mod_mpi_io_netcdf.F90	/^      character(*), intent(in) :: filename, varname, fp$/;"	L	subroutine:netcdf_write_array_1d_wp	file:
fp	mod_mpi_io_netcdf.F90	/^      character(*), intent(in) :: filename, varname, fp$/;"	L	subroutine:netcdf_write_array_2d_int	file:
fp	mod_mpi_io_netcdf.F90	/^      character(*), intent(in) :: filename, varname, fp$/;"	L	subroutine:netcdf_write_array_2d_wp	file:
fp	mod_mpi_io_netcdf.F90	/^      character(*), intent(in) :: filename, varname, fp$/;"	L	subroutine:netcdf_write_array_3d_wp	file:
fre	fre_dir_mod.F90	/^  real(real_kind), allocatable :: fre(/;"	v	module:fre_dir_mod
fre_dir_init	fre_dir_mod.F90	/^  Subroutine fre_dir_init(/;"	s	module:fre_dir_mod
fre_dir_mod	fre_dir_mod.F90	/^module fre_dir_mod$/;"	m
funit	history_mod.F90	/^      integer :: funit,/;"	L	subroutine:station_output_init	file:
g	const_mod.F90	/^  real(real_kind), parameter :: g /;"	v	module:const_mod
ge	datetime_mod.F90	/^  pure elemental logical function ge(/;"	f	module:datetime_mod
generate_direction	fre_dir_mod.F90	/^  Subroutine generate_direction(/;"	s	module:fre_dir_mod
generate_frequency	fre_dir_mod.F90	/^  Subroutine generate_frequency(/;"	s	module:fre_dir_mod
get_alert	time_mod.F90	/^  function get_alert(/;"	f	module:time_mod
get_dataset	fiona_mod.F90	/^  function get_dataset(/;"	f	module:fiona_mod
get_dim_from_dataset	fiona_mod.F90	/^  function get_dim_from_dataset(/;"	f	module:fiona_mod
get_var_from_dataset	fiona_mod.F90	/^  function get_var_from_dataset(/;"	f	module:fiona_mod
gt	datetime_mod.F90	/^  pure elemental logical function gt(/;"	f	module:datetime_mod
halo_level	mod_mpi_interfaces.F90	/^      integer,allocatable,dimension(:,:) :: halo_level$/;"	L	subroutine:mpi_find_halo_cells	file:
halo_level	mod_mpi_interfaces.F90	/^      integer,allocatable,dimension(:,:) :: halo_level$/;"	L	subroutine:mpi_find_halo_edges	file:
halo_start	mod_mpi_interfaces.F90	/^      integer,allocatable,dimension(:,:) :: halo_start$/;"	L	subroutine:mpi_find_halo_cells	file:
halo_start	mod_mpi_interfaces.F90	/^      integer,allocatable,dimension(:,:) :: halo_start$/;"	L	subroutine:mpi_find_halo_edges	file:
handle_error	fiona_mod.F90	/^  subroutine handle_error(/;"	s	module:fiona_mod
hash_code	hash_table_mod.F90	/^    integer hash_code$/;"	L	function:hash_code	file:
hash_code	hash_table_mod.F90	/^  function hash_code(/;"	f	module:hash_table_mod
hash_table	hash_table_mod.F90	/^    type(hash_table_/;"	L	function:hash_table	file:
hash_table	hash_table_mod.F90	/^  function hash_table(/;"	f	module:hash_table_mod
hash_table_expand	hash_table_mod.F90	/^  subroutine hash_table_expand(/;"	s	module:hash_table_mod
hash_table_finalize	hash_table_mod.F90	/^  subroutine hash_table_finalize(/;"	s	module:hash_table_mod
hash_table_hashed	hash_table_mod.F90	/^  function hash_table_hashed(/;"	f	module:hash_table_mod
hash_table_index_number	hash_table_mod.F90	/^  function hash_table_index_number(/;"	f	module:hash_table_mod
hash_table_insert	hash_table_mod.F90	/^  subroutine hash_table_insert(/;"	s	module:hash_table_mod
hash_table_item_type	hash_table_mod.F90	/^  type hash_table_item_type$/;"	t	module:hash_table_mod
hash_table_iterator	hash_table_mod.F90	/^    type(hash_table_iterator_/;"	L	function:hash_table_iterator	file:
hash_table_iterator	hash_table_mod.F90	/^  function hash_table_iterator(/;"	f	module:hash_table_mod
hash_table_iterator_ended	hash_table_mod.F90	/^  function hash_table_iterator_ended(/;"	f	module:hash_table_mod
hash_table_iterator_next	hash_table_mod.F90	/^  subroutine hash_table_iterator_next(/;"	s	module:hash_table_mod
hash_table_iterator_type	hash_table_mod.F90	/^  type hash_table_iterator_type$/;"	t	module:hash_table_mod
hash_table_mod	hash_table_mod.F90	/^module hash_table_mod$/;"	m
hash_table_type	hash_table_mod.F90	/^  type hash_table_type$/;"	t	module:hash_table_mod
hash_table_value	hash_table_mod.F90	/^  function hash_table_value(/;"	f	module:hash_table_mod
history_create_new_file	history_mod.F90	/^  subroutine history_create_new_file(/;"	s	module:history_mod
history_final	history_mod.F90	/^  subroutine history_final(/;"	s	module:history_mod
history_init	history_mod.F90	/^  subroutine history_init(/;"	s	module:history_mod
history_mod	history_mod.F90	/^module history_mod$/;"	m
history_write	history_mod.F90	/^  interface history_write$/;"	i	module:history_mod
history_write_state	history_mod.F90	/^  subroutine history_write_state(/;"	s	module:history_mod
hostname	mod_mpi_interfaces.F90	/^      CHARACTER (len=MPI_MAX_PROCESSOR_NAME) :: hostname /;"	L	subroutine:mpi_init_basic_env	file:
hour	datetime_mod.F90	/^    integer :: hour /;"	k	type:datetime_type
hour	datetime_mod.F90	/^    integer, intent(in), optional :: hour$/;"	L	function:datetime_1	file:
hours	datetime_mod.F90	/^    integer, intent(in), optional :: hours$/;"	L	function:datetime_1	file:
hours	time_mod.F90	/^    real(real_kind), intent(in), optional :: hours$/;"	L	subroutine:time_add_alert	file:
hours	timedelta_mod.F90	/^    real(8) :: hours /;"	k	type:timedelta_type
hours_	time_mod.F90	/^    real(real_kind) hours_$/;"	L	subroutine:time_add_alert	file:
i	datetime_mod.F90	/^    in/;"	L	function:datetime_2	file:
i	face_mod.F90	/^  in/;"	L	function:colorize	file:
i	fiona_mod.F90	/^    in/;"	L	subroutine:apply_dataset_to_netcdf_master	file:
i	fiona_mod.F90	/^    in/;"	L	subroutine:apply_dataset_to_netcdf_slave	file:
i	fiona_mod.F90	/^    in/;"	L	subroutine:fiona_get_var_att_str	file:
i	fiona_mod.F90	/^    in/;"	L	subroutine:fiona_open_dataset	file:
i	fiona_mod.F90	/^    in/;"	L	subroutine:fiona_quick_output_2d_r8	file:
i	fiona_mod.F90	/^    in/;"	L	subroutine:fiona_start_output	file:
i	forcing_mod.F90	/^      in/;"	L	subroutine:calc_TC_pres_field	file:
i	forcing_mod.F90	/^      in/;"	L	subroutine:calc_distance_from_TC	file:
i	forcing_mod.F90	/^      in/;"	L	subroutine:calc_distance_from_TC_openacc	file:
i	forcing_mod.F90	/^    in/;"	L	subroutine:interp_wind_to_steptime	file:
i	forcing_mod.F90	/^    in/;"	L	subroutine:transfer_uv_to_spd_dir	file:
i	forcing_mod.F90	/^    in/;"	L	subroutine:transfer_uv_to_spd_dir_openacc	file:
i	forcing_mod.F90	/^    in/;"	L	subroutine:update_atm_forcing	file:
i	forcing_mod.F90	/^    in/;"	L	subroutine:update_atm_forcing_openacc	file:
i	forcing_mod.F90	/^    in/;"	L	subroutine:update_forcing_NWP	file:
i	forcing_mod.F90	/^    in/;"	L	subroutine:update_forcing_NWP_openacc	file:
i	hash_table_mod.F90	/^    in/;"	L	function:hash_code	file:
i	history_mod.F90	/^      in/;"	L	subroutine:station_output_init	file:
i	history_mod.F90	/^     in/;"	L	subroutine:station_output_write	file:
i	linked_list_mod.F90	/^    in/;"	L	subroutine:linked_list_finalize	file:
i	mesh_mod.F90	/^    in/;"	L	subroutine:mesh_init	file:
i	mod_mpi_interfaces.F90	/^       INTEGER :: val,i /;"	L	function:mpi_findloc_ordered	file:
i	mod_mpi_interfaces.F90	/^      INTEGER :: dim/;"	L	subroutine:mpi_real_3d_block_exchange_oncell_onebyone	file:
i	mod_mpi_interfaces.F90	/^      INTEGER :: i$/;"	L	subroutine:mpi_2d_prepare_recv_counts_displs	file:
i	mod_mpi_interfaces.F90	/^      INTEGER :: i$/;"	L	subroutine:mpi_3d_prepare_recv_counts_displs	file:
i	mod_mpi_interfaces.F90	/^      INTEGER :: i$/;"	L	subroutine:mpi_int_1d_prepare_sendbuf	file:
i	mod_mpi_interfaces.F90	/^      INTEGER :: i$/;"	L	subroutine:mpi_real_1d_prepare_sendbuf	file:
i	mod_mpi_interfaces.F90	/^      INTEGER :: i,/;"	L	subroutine:mpi_get_cell_destination	file:
i	mod_mpi_interfaces.F90	/^      INTEGER :: i,/;"	L	subroutine:mpi_get_edge_destination	file:
i	mod_mpi_interfaces.F90	/^      INTEGER :: i,/;"	L	subroutine:mpi_real_2d_prepare_recvbuf	file:
i	mod_mpi_interfaces.F90	/^      INTEGER :: i,/;"	L	subroutine:mpi_real_2d_prepare_sendbuf	file:
i	mod_mpi_interfaces.F90	/^      INTEGER :: i,/;"	L	subroutine:mpi_real_3d_prepare_recvbuf	file:
i	mod_mpi_interfaces.F90	/^      INTEGER :: i,/;"	L	subroutine:mpi_real_3d_prepare_sendbuf	file:
i	mod_mpi_interfaces.F90	/^      INTEGER :: i,/;"	L	subroutine:mpi_sort_one	file:
i	mod_mpi_interfaces.F90	/^      INTEGER :: i,/;"	L	subroutine:mpi_sort_two	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_adjust_cell_indexes	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_adjust_edge_indexes	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_adjust_sta_1d_real	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_bcast_process_partition	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_find_halo_cells	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_find_halo_edges	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_get_index_edges_vertices	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_input_exchange_nonroot_1d_integer	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_input_exchange_nonroot_1d_real	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_input_exchange_nonroot_2d_integer	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_input_exchange_nonroot_2d_real	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_input_exchange_root_1d_integer	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_input_exchange_root_1d_real	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_input_exchange_root_2d_integer	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_input_exchange_root_2d_real	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_input_oncell_1d_real	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_input_oncell_2d_real	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_input_oncell_3d_real	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_oncell_input_real_adjust_2d	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_oncell_input_real_adjust_3d	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_oncell_output_integer_adjust_1d	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_oncell_output_real_adjust_1d	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_oncell_output_real_adjust_2d	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_oncell_output_real_adjust_3d	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_onedge_output_real_adjust_1d	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_output_oncell_2d_real	file:
i	mod_mpi_interfaces.F90	/^      in/;"	L	subroutine:mpi_output_oncell_3d_real	file:
i	mod_mpi_interfaces.F90	/^     in/;"	L	subroutine:mpi_init_arrays	file:
i	mod_mpi_test.F90	/^      INTEGER ::  i$/;"	L	subroutine:mpi_1d_data_adjust	file:
i	mod_mpi_test.F90	/^      INTEGER ::  i,/;"	L	subroutine:mpi_2d_data_adjust_int	file:
i	mod_mpi_test.F90	/^      INTEGER ::  i,/;"	L	subroutine:mpi_2d_data_adjust_real	file:
i	mod_mpi_test.F90	/^      INTEGER ::  i,/;"	L	subroutine:mpi_3d_data_adjust	file:
i	mod_mpi_test.F90	/^      INTEGER :: i$/;"	L	subroutine:mpi_gather_output_integer	file:
i	mod_mpi_test.F90	/^      in/;"	L	subroutine:mpi_data_1d_output_real	file:
i	mod_mpi_test.F90	/^      in/;"	L	subroutine:mpi_data_2d_output_int	file:
i	mod_mpi_test.F90	/^      in/;"	L	subroutine:mpi_data_2d_output_real	file:
i	mod_mpi_test.F90	/^      in/;"	L	subroutine:mpi_data_3d_output_real	file:
i	mod_mpi_test.F90	/^      in/;"	L	subroutine:mpi_write_file_1d_dp	file:
i	mod_mpi_test.F90	/^      in/;"	L	subroutine:mpi_write_file_1d_integer	file:
i	mod_mpi_test.F90	/^      in/;"	L	subroutine:mpi_write_file_2d_dp	file:
i	mod_mpi_test.F90	/^      in/;"	L	subroutine:mpi_write_file_2d_i2	file:
i	mod_mpi_test.F90	/^      in/;"	L	subroutine:mpi_write_file_3d_dp	file:
i	read_forcing_mod.F90	/^        in/;"	L	subroutine:read_met_forcing_var	file:
i	state_mod.F90	/^    in/;"	L	subroutine:state_init	file:
i	string_actions_mod.F90	/^    in/;"	L	function:count_string_1	file:
i	string_actions_mod.F90	/^    in/;"	L	function:replace_string_1	file:
i	string_numerics_mod.F90	/^    in/;"	L	function:r8_array_to_str	file:
i	time_mod.F90	/^    in/;"	L	subroutine:time_swap_indices	file:
i	wave_propag_mod.F90	/^      in/;"	L	subroutine:calc_depth_gradient	file:
i	wave_propag_mod.F90	/^      in/;"	L	subroutine:prepare_propag	file:
i	wave_propag_mod.F90	/^    in/;"	L	subroutine:calc_tend_theta	file:
i1	mod_mpi_test_variables.F90	/^   integer, public, parameter  :: i1 /;"	v	module:mod_mpi_test_variables
i1	string_actions_mod.F90	/^    integer i1,/;"	L	function:split_string_1	file:
i1_to_str	string_numerics_mod.F90	/^  pure function i1_to_str(/;"	f	module:string_numerics_mod
i2	mod_mpi_test_variables.F90	/^   integer, public, parameter  :: i2 /;"	v	module:mod_mpi_test_variables
i2	string_actions_mod.F90	/^    integer i1, i2$/;"	L	function:split_string_1	file:
i2_to_str	string_numerics_mod.F90	/^  pure function i2_to_str(/;"	f	module:string_numerics_mod
i4	mod_mpi_test_variables.F90	/^   integer, public, parameter  :: i4 /;"	v	module:mod_mpi_test_variables
i4_array_to_str	string_numerics_mod.F90	/^  pure function i4_array_to_str(/;"	f	module:string_numerics_mod
i4_missing_value	fiona_mod.F90	/^    integer(4), pointer :: i4_missing_value /;"	k	type:var_type
i4_to_str	string_numerics_mod.F90	/^  pure function i4_to_str(/;"	f	module:string_numerics_mod
i8	mod_mpi_test_variables.F90	/^   integer, public, parameter  :: i8 /;"	v	module:mod_mpi_test_variables
i8_missing_value	fiona_mod.F90	/^    integer(8), pointer :: i8_missing_value /;"	k	type:var_type
i8_to_str	string_numerics_mod.F90	/^  pure function i8_to_str(/;"	f	module:string_numerics_mod
iCell	forcing_mod.F90	/^      integer iCell$/;"	L	subroutine:calc_TC_wind_field	file:
iCell	forcing_mod.F90	/^      integer iCell$/;"	L	subroutine:calc_TC_wind_field_openacc	file:
iCell	history_mod.F90	/^     integer :: i, iCell,/;"	L	subroutine:station_output_write	file:
iCell	history_mod.F90	/^     integer:: iCell,/;"	L	subroutine:calc_output	file:
iCell	initial_mod.F90	/^    integer :: iCell,/;"	L	subroutine:set_initial_condition	file:
iCell	initial_mod.F90	/^  INTEGER :: iCell,/;"	L	subroutine:cold_start_wam	file:
iCell	mask_mod.F90	/^    integer iCell,/;"	L	subroutine:mask_edge	file:
iCell	mask_mod.F90	/^    integer:: iCell,/;"	L	subroutine:mask_init	file:
iCell	mesh_mod.F90	/^    integer iCell,/;"	L	subroutine:mesh_init	file:
iCell	time_scheme_mod.F90	/^    integer iCell,/;"	L	subroutine:time_integrate_advection	file:
iCell	wave_propag_mod.F90	/^      integer         :: iCell,/;"	L	subroutine:calc_depth_gradient	file:
iCell	wave_propag_mod.F90	/^      integer         :: iCell,/;"	L	subroutine:prepare_coef_geog	file:
iCell	wave_propag_mod.F90	/^      integer         :: iCell,/;"	L	subroutine:prepare_coef_theta	file:
iCell	wave_propag_mod.F90	/^      integer        :: iCell,/;"	L	subroutine:prepare_propag	file:
iCell	wave_propag_mod.F90	/^    integer         :: iCell,/;"	L	subroutine:calc_tend_geog	file:
iCell	wave_propag_mod.F90	/^    integer         :: iCell,/;"	L	subroutine:calc_tend_theta	file:
iCell	wave_propag_mod.F90	/^    integer :: iCell,/;"	L	subroutine:update_state	file:
iCellGlobal	history_mod.F90	/^      integer :: i, iCellGlobal$/;"	L	subroutine:station_output_init	file:
iE	wave_propag_mod.F90	/^    integer         :: iCell, k, m, j, iE,/;"	L	subroutine:calc_tend_geog	file:
iEdge	mask_mod.F90	/^    integer iCell, iEdge$/;"	L	subroutine:mask_edge	file:
iEdge	wave_propag_mod.F90	/^      integer        :: iCell, iEdge,/;"	L	subroutine:prepare_propag	file:
iEdge	wave_propag_mod.F90	/^     integer iEdge$/;"	L	subroutine:scalar_c2e_interp_operator	file:
iVertex	mesh_mod.F90	/^    integer iCell, iVertex,/;"	L	subroutine:mesh_init	file:
id	fiona_mod.F90	/^    integer :: id /;"	k	type:dataset_type
id	fiona_mod.F90	/^    integer i, ierr, id$/;"	L	subroutine:apply_dataset_to_netcdf_slave	file:
id	fiona_mod.F90	/^    integer id$/;"	k	type:dim_type
id	fiona_mod.F90	/^    integer id$/;"	k	type:var_type
ierr	fiona_mod.F90	/^    integer i, ierr$/;"	L	subroutine:apply_dataset_to_netcdf_master	file:
ierr	fiona_mod.F90	/^    integer i, ierr$/;"	L	subroutine:fiona_start_output	file:
ierr	fiona_mod.F90	/^    integer i, ierr,/;"	L	subroutine:apply_dataset_to_netcdf_slave	file:
ierr	fiona_mod.F90	/^    integer ierr$/;"	L	subroutine:fiona_create_dataset	file:
ierr	fiona_mod.F90	/^    integer ierr$/;"	L	subroutine:fiona_end_output	file:
ierr	fiona_mod.F90	/^    integer ierr$/;"	L	subroutine:fiona_get_att_i4	file:
ierr	fiona_mod.F90	/^    integer ierr$/;"	L	subroutine:fiona_get_att_i8	file:
ierr	fiona_mod.F90	/^    integer ierr$/;"	L	subroutine:fiona_get_att_r4	file:
ierr	fiona_mod.F90	/^    integer ierr$/;"	L	subroutine:fiona_get_att_r8	file:
ierr	fiona_mod.F90	/^    integer ierr$/;"	L	subroutine:fiona_get_att_str	file:
ierr	fiona_mod.F90	/^    integer ierr$/;"	L	subroutine:fiona_get_var_att_str	file:
ierr	fiona_mod.F90	/^    integer ierr$/;"	L	subroutine:fiona_start_input	file:
ierr	fiona_mod.F90	/^    integer ierr,/;"	L	function:fiona_has_var	file:
ierr	fiona_mod.F90	/^    integer ierr,/;"	L	subroutine:fiona_get_dim	file:
ierr	fiona_mod.F90	/^    integer ierr,/;"	L	subroutine:fiona_open_dataset	file:
ierr	fiona_mod.F90	/^    integer, intent(in) :: ierr$/;"	L	subroutine:handle_error	file:
ierr	mod_mpi_interfaces.F90	/^      INTEGER :: InNodeComm,InNodeRank,dev_rank,ierr /;"	L	subroutine:mpi_init_basic_env	file:
increase_size	array_mod.F90	/^  integer, parameter :: increase_size /;"	v	module:array_mod
increment	mod_mpi_interfaces.F90	/^      INTEGER :: i, j, increment /;"	L	subroutine:mpi_sort_one	file:
increment	mod_mpi_interfaces.F90	/^      INTEGER :: i, j, increment /;"	L	subroutine:mpi_sort_two	file:
index	string_actions_mod.F90	/^    integer, intent(in) :: index$/;"	L	function:split_string_2	file:
indexToCellID	mesh_mod.F90	/^  integer, allocatable :: indexToCellID(/;"	v	module:mesh_mod
indexToEdgeID	mesh_mod.F90	/^  integer, allocatable :: indexToEdgeID(/;"	v	module:mesh_mod
indexToVertexID	mesh_mod.F90	/^  integer, allocatable :: indexToVertexID(/;"	v	module:mesh_mod
index_degree	mod_mpi_interfaces.F90	/^      INTEGER, INTENT(IN) :: index_degree$/;"	L	subroutine:mpi_real_3d_prepare_recvbuf_onebyone	file:
index_edges_vertices	mod_mpi_interfaces.F90	/^      integer, allocatable,dimension(:) :: index_edges_vertices$/;"	L	subroutine:mpi_get_index_edges_vertices	file:
inflowA	const_mod.F90	/^  real(real_kind), parameter :: inflowA /;"	v	module:const_mod
init	datetime_mod.F90	/^  subroutine init(/;"	s	module:datetime_mod
initial_mod	initial_mod.F90	/^module initial_mod$/;"	m
initial_size	array_mod.F90	/^  integer, parameter :: initial_size /;"	v	module:array_mod
input	mod_mpi_interfaces.F90	/^      integer,intent(IN),dimension(:) :: input$/;"	L	subroutine:mpi_output_oncell_1d_integer	file:
input	mod_mpi_interfaces.F90	/^      real(kind=real_kind),intent(IN),dimension(:) :: input$/;"	L	subroutine:mpi_output_oncell_1d_real	file:
input	mod_mpi_interfaces.F90	/^      real(kind=real_kind),intent(IN),dimension(:) :: input$/;"	L	subroutine:mpi_output_onedge_1d_real	file:
input	mod_mpi_interfaces.F90	/^      real(kind=real_kind),intent(IN),dimension(:,:) :: input$/;"	L	subroutine:mpi_output_oncell_2d_real	file:
input	mod_mpi_interfaces.F90	/^      real(kind=real_kind),intent(IN),dimension(:,:,:) :: input$/;"	L	subroutine:mpi_output_oncell_3d_real	file:
input_buf	mod_mpi_interfaces.F90	/^      integer, intent(in), dimension(:) :: input_buf$/;"	L	subroutine:mpi_input_exchange_nonroot_1d_integer	file:
input_buf	mod_mpi_interfaces.F90	/^      integer, intent(in), dimension(:) :: input_buf$/;"	L	subroutine:mpi_input_exchange_root_1d_integer	file:
input_buf	mod_mpi_interfaces.F90	/^      integer, intent(in), dimension(:,:) :: input_buf$/;"	L	subroutine:mpi_input_exchange_nonroot_2d_integer	file:
input_buf	mod_mpi_interfaces.F90	/^      integer, intent(in), dimension(:,:) :: input_buf$/;"	L	subroutine:mpi_input_exchange_root_2d_integer	file:
input_buf	mod_mpi_interfaces.F90	/^      real(kind = real_kind), intent(in), dimension(:) :: input_buf$/;"	L	subroutine:mpi_input_exchange_nonroot_1d_real	file:
input_buf	mod_mpi_interfaces.F90	/^      real(kind = real_kind), intent(in), dimension(:) :: input_buf$/;"	L	subroutine:mpi_input_exchange_root_1d_real	file:
input_buf	mod_mpi_interfaces.F90	/^      real(kind = real_kind), intent(in), dimension(:) :: input_buf$/;"	L	subroutine:mpi_input_oncell_1d_real	file:
input_buf	mod_mpi_interfaces.F90	/^      real(kind = real_kind), intent(in), dimension(:,:) :: input_buf$/;"	L	subroutine:mpi_input_exchange_nonroot_2d_real	file:
input_buf	mod_mpi_interfaces.F90	/^      real(kind = real_kind), intent(in), dimension(:,:) :: input_buf$/;"	L	subroutine:mpi_input_exchange_root_2d_real	file:
input_buf	mod_mpi_interfaces.F90	/^      real(kind = real_kind), intent(in), dimension(:,:) :: input_buf$/;"	L	subroutine:mpi_input_oncell_2d_real	file:
input_buf	mod_mpi_interfaces.F90	/^      real(kind = real_kind), intent(in), dimension(:,:,:) :: input_buf$/;"	L	subroutine:mpi_input_oncell_3d_real	file:
int_double	const_mod.F90	/^  integer, parameter :: int_double /;"	v	module:const_mod
internal_memory	array_mod.F90	/^    logical :: internal_memory /;"	k	type:array_item_type
internal_memory	linked_list_mod.F90	/^    logical :: internal_memory /;"	k	type:linked_list_item_type
interp_wind_to_steptime	forcing_mod.F90	/^  subroutine interp_wind_to_steptime(/;"	s	module:forcing_mod
interval	mod_mpi_test_variables.F90	/^   integer :: interval=/;"	v	module:mod_mpi_test_variables
is_exist	fiona_mod.F90	/^    logical is_exist$/;"	L	subroutine:fiona_create_dataset	file:
is_leap_year	datetime_mod.F90	/^  pure logical function is_leap_year(/;"	f	module:datetime_mod
is_redirected	log_mod.F90	/^    logical is_redirected$/;"	L	subroutine:log_error	file:
is_redirected	log_mod.F90	/^    logical is_redirected$/;"	L	subroutine:log_notice	file:
is_redirected	log_mod.F90	/^    logical is_redirected$/;"	L	subroutine:log_print	file:
is_redirected	log_mod.F90	/^    logical is_redirected$/;"	L	subroutine:log_print_diag	file:
is_redirected	log_mod.F90	/^    logical is_redirected$/;"	L	subroutine:log_warning	file:
isatty	log_mod.F90	/^    logical isatty$/;"	L	subroutine:log_error	file:
isatty	log_mod.F90	/^    logical isatty$/;"	L	subroutine:log_notice	file:
isatty	log_mod.F90	/^    logical isatty$/;"	L	subroutine:log_print	file:
isatty	log_mod.F90	/^    logical isatty$/;"	L	subroutine:log_print_diag	file:
isatty	log_mod.F90	/^    logical isatty$/;"	L	subroutine:log_warning	file:
isoformat	datetime_mod.F90	/^  function isoformat(/;"	f	module:datetime_mod
item	linked_list_mod.F90	/^    type(linked_list_item_/;"	k	type:linked_list_iterator_type
item1	linked_list_mod.F90	/^    type(linked_list_item_type), pointer :: item1,/;"	L	subroutine:linked_list_finalize	file:
item2	linked_list_mod.F90	/^    type(linked_list_item_type), pointer :: item1, item2$/;"	L	subroutine:linked_list_finalize	file:
items	array_mod.F90	/^    type(array_item_type), allocatable :: items(/;"	k	type:array_type
items	hash_table_mod.F90	/^    type(hash_table_item_type), allocatable :: items(/;"	k	type:hash_table_type
iter	fiona_mod.F90	/^    type(hash_table_itera/;"	L	subroutine:apply_dataset_to_netcdf_master	file:
iter	fiona_mod.F90	/^    type(hash_table_itera/;"	L	subroutine:apply_dataset_to_netcdf_slave	file:
iter	fiona_mod.F90	/^    type(hash_table_itera/;"	L	subroutine:fiona_start_output	file:
iter	hash_table_mod.F90	/^    type(hash_table_itera/;"	L	subroutine:create_hash_table_iterator	file:
iter	log_mod.F90	/^    type(hash_table_itera/;"	L	subroutine:log_print_diag	file:
iter	time_mod.F90	/^    type(hash_table_itera/;"	L	subroutine:time_advance	file:
j	datetime_mod.F90	/^    integer i, j,/;"	L	function:datetime_2	file:
j	mask_mod.F90	/^    integer:: iCell, eoc, j,/;"	L	subroutine:mask_init	file:
j	mod_mpi_interfaces.F90	/^      INTEGER :: i, j,/;"	L	subroutine:mpi_real_2d_prepare_sendbuf	file:
j	mod_mpi_interfaces.F90	/^      INTEGER :: i, j,/;"	L	subroutine:mpi_real_3d_prepare_recvbuf	file:
j	mod_mpi_interfaces.F90	/^      INTEGER :: i, j,/;"	L	subroutine:mpi_real_3d_prepare_sendbuf	file:
j	mod_mpi_interfaces.F90	/^      INTEGER :: i, j,/;"	L	subroutine:mpi_sort_one	file:
j	mod_mpi_interfaces.F90	/^      INTEGER :: i, j,/;"	L	subroutine:mpi_sort_two	file:
j	mod_mpi_interfaces.F90	/^      INTEGER :: j,/;"	L	subroutine:mpi_real_3d_prepare_recvbuf_onebyone	file:
j	mod_mpi_interfaces.F90	/^      integer :: i,j$/;"	L	subroutine:mpi_input_exchange_nonroot_2d_integer	file:
j	mod_mpi_interfaces.F90	/^      integer :: i,j$/;"	L	subroutine:mpi_input_exchange_nonroot_2d_real	file:
j	mod_mpi_interfaces.F90	/^      integer :: i,j,/;"	L	subroutine:mpi_adjust_cell_indexes	file:
j	mod_mpi_interfaces.F90	/^      integer :: i,j,/;"	L	subroutine:mpi_adjust_edge_indexes	file:
j	mod_mpi_interfaces.F90	/^      integer :: i,j,/;"	L	subroutine:mpi_find_halo_cells	file:
j	mod_mpi_interfaces.F90	/^      integer :: i,j,/;"	L	subroutine:mpi_find_halo_edges	file:
j	mod_mpi_interfaces.F90	/^      integer :: i,j,/;"	L	subroutine:mpi_get_index_edges_vertices	file:
j	mod_mpi_interfaces.F90	/^      integer :: i,j,/;"	L	subroutine:mpi_input_exchange_root_2d_integer	file:
j	mod_mpi_interfaces.F90	/^      integer :: i,j,/;"	L	subroutine:mpi_input_exchange_root_2d_real	file:
j	mod_mpi_interfaces.F90	/^      integer :: i,j,/;"	L	subroutine:mpi_input_oncell_2d_real	file:
j	mod_mpi_interfaces.F90	/^      integer :: i,j,/;"	L	subroutine:mpi_input_oncell_3d_real	file:
j	mod_mpi_interfaces.F90	/^      integer :: i,j,/;"	L	subroutine:mpi_oncell_input_real_adjust_2d	file:
j	mod_mpi_interfaces.F90	/^      integer :: i,j,/;"	L	subroutine:mpi_oncell_input_real_adjust_3d	file:
j	mod_mpi_interfaces.F90	/^      integer :: i,j,/;"	L	subroutine:mpi_oncell_output_real_adjust_2d	file:
j	mod_mpi_interfaces.F90	/^      integer :: i,j,/;"	L	subroutine:mpi_oncell_output_real_adjust_3d	file:
j	mod_mpi_test.F90	/^      INTEGER ::  i,pos_1d,pos_2d,k,j$/;"	L	subroutine:mpi_2d_data_adjust_int	file:
j	mod_mpi_test.F90	/^      INTEGER ::  i,pos_1d,pos_2d,k,j$/;"	L	subroutine:mpi_2d_data_adjust_real	file:
j	mod_mpi_test.F90	/^      INTEGER ::  i,pos_1d,pos_2d,k,j,/;"	L	subroutine:mpi_3d_data_adjust	file:
j	mod_mpi_test.F90	/^      integer :: i, j$/;"	L	subroutine:mpi_write_file_2d_dp	file:
j	mod_mpi_test.F90	/^      integer :: i, j$/;"	L	subroutine:mpi_write_file_2d_i2	file:
j	mod_mpi_test.F90	/^      integer :: i, j,/;"	L	subroutine:mpi_data_2d_output_int	file:
j	mod_mpi_test.F90	/^      integer :: i, j,/;"	L	subroutine:mpi_data_2d_output_real	file:
j	mod_mpi_test.F90	/^      integer :: i, j,/;"	L	subroutine:mpi_data_3d_output_real	file:
j	mod_mpi_test.F90	/^      integer :: i, j,/;"	L	subroutine:mpi_write_file_3d_dp	file:
j	string_numerics_mod.F90	/^    integer w, i, j$/;"	L	function:r8_array_to_str	file:
j	time_mod.F90	/^    integer, intent(inout) :: j$/;"	L	subroutine:time_swap_indices	file:
j	wave_propag_mod.F90	/^      integer         :: iCell, i, j,/;"	L	subroutine:calc_depth_gradient	file:
j	wave_propag_mod.F90	/^      integer         :: iCell, j,/;"	L	subroutine:prepare_coef_geog	file:
j	wave_propag_mod.F90	/^      integer nCOC, coc, j,/;"	L	subroutine:prepare_propag	file:
j	wave_propag_mod.F90	/^    integer         :: iCell, k, m, j,/;"	L	subroutine:calc_tend_geog	file:
k	fre_dir_mod.F90	/^      integer k$/;"	L	subroutine:generate_direction	file:
k	history_mod.F90	/^     integer :: i, iCell, k,/;"	L	subroutine:station_output_write	file:
k	history_mod.F90	/^     integer:: iCell, k,/;"	L	subroutine:calc_output	file:
k	initial_mod.F90	/^  INTEGER :: iCell, k,/;"	L	subroutine:cold_start_wam	file:
k	mod_mpi_interfaces.F90	/^      INTEGER :: i, j, k$/;"	L	subroutine:mpi_real_2d_prepare_sendbuf	file:
k	mod_mpi_interfaces.F90	/^      INTEGER :: i, j, k,/;"	L	subroutine:mpi_real_3d_prepare_sendbuf	file:
k	mod_mpi_interfaces.F90	/^      INTEGER :: i, j,k,/;"	L	subroutine:mpi_real_3d_prepare_recvbuf	file:
k	mod_mpi_interfaces.F90	/^      INTEGER :: i, k,/;"	L	subroutine:mpi_get_cell_destination	file:
k	mod_mpi_interfaces.F90	/^      INTEGER :: i, k,/;"	L	subroutine:mpi_get_edge_destination	file:
k	mod_mpi_interfaces.F90	/^      INTEGER :: i, k,/;"	L	subroutine:mpi_real_2d_prepare_recvbuf	file:
k	mod_mpi_interfaces.F90	/^      INTEGER :: j,k,/;"	L	subroutine:mpi_real_3d_prepare_recvbuf_onebyone	file:
k	mod_mpi_interfaces.F90	/^      integer :: i,j,k,/;"	L	subroutine:mpi_find_halo_cells	file:
k	mod_mpi_interfaces.F90	/^      integer :: i,j,k,/;"	L	subroutine:mpi_find_halo_edges	file:
k	mod_mpi_interfaces.F90	/^      integer :: i,j,k,/;"	L	subroutine:mpi_oncell_input_real_adjust_2d	file:
k	mod_mpi_interfaces.F90	/^      integer :: i,j,k,/;"	L	subroutine:mpi_oncell_input_real_adjust_3d	file:
k	mod_mpi_interfaces.F90	/^      integer :: i,j,k,/;"	L	subroutine:mpi_oncell_output_real_adjust_2d	file:
k	mod_mpi_interfaces.F90	/^      integer :: i,j,k,/;"	L	subroutine:mpi_oncell_output_real_adjust_3d	file:
k	mod_mpi_test.F90	/^      INTEGER ::  i,pos_1d,pos_2d,k,/;"	L	subroutine:mpi_2d_data_adjust_int	file:
k	mod_mpi_test.F90	/^      INTEGER ::  i,pos_1d,pos_2d,k,/;"	L	subroutine:mpi_2d_data_adjust_real	file:
k	mod_mpi_test.F90	/^      INTEGER ::  i,pos_1d,pos_2d,k,/;"	L	subroutine:mpi_3d_data_adjust	file:
k	mod_mpi_test.F90	/^      integer :: i, j, k$/;"	L	subroutine:mpi_write_file_3d_dp	file:
k	time_scheme_mod.F90	/^    integer iCell, k,/;"	L	subroutine:time_integrate_advection	file:
k	wave_propag_mod.F90	/^      integer         :: iCell, k,/;"	L	subroutine:prepare_coef_theta	file:
k	wave_propag_mod.F90	/^      integer        :: iCell, iEdge, k,/;"	L	subroutine:prepare_propag	file:
k	wave_propag_mod.F90	/^    integer         :: iCell, k,/;"	L	subroutine:calc_tend_geog	file:
k	wave_propag_mod.F90	/^    integer         :: iCell, k,/;"	L	subroutine:calc_tend_theta	file:
k	wave_propag_mod.F90	/^    integer :: iCell, k,/;"	L	subroutine:update_state	file:
kd	wave_propag_mod.F90	/^      real(real_kind) :: kd,/;"	L	subroutine:prepare_propag	file:
kd2	wave_propag_mod.F90	/^      real(real_kind) :: kd, kd2,/;"	L	subroutine:prepare_propag	file:
key	hash_table_mod.F90	/^    character(*), intent(in) :: key$/;"	L	function:hash_code	file:
key	hash_table_mod.F90	/^    character(:), allocatable :: key$/;"	k	type:hash_table_iterator_type
key	linked_list_mod.F90	/^    character(:), allocatable :: key$/;"	k	type:linked_list_item_type
key_index	hash_table_mod.F90	/^    integer key_index$/;"	k	type:hash_table_iterator_type
keys	hash_table_mod.F90	/^    character(30), allocatable :: keys(/;"	k	type:hash_table_type
km	wave_propag_mod.F90	/^      integer         :: iCell, k, m, kp, km$/;"	L	subroutine:prepare_coef_theta	file:
km	wave_propag_mod.F90	/^    integer         :: iCell, k, m, kp, km,/;"	L	subroutine:calc_tend_theta	file:
kp	wave_propag_mod.F90	/^      integer         :: iCell, k, m, kp,/;"	L	subroutine:prepare_coef_theta	file:
kp	wave_propag_mod.F90	/^    integer         :: iCell, k, m, kp,/;"	L	subroutine:calc_tend_theta	file:
kwave	wave_propag_mod.F90	/^  real(real_kind), allocatable :: kwave(/;"	v	module:wave_propag_mod
l	mod_mpi_interfaces.F90	/^      integer :: i,j,k,l,/;"	L	subroutine:mpi_find_halo_cells	file:
l_to_str	string_numerics_mod.F90	/^  pure function l_to_str(/;"	f	module:string_numerics_mod
last_file_path	fiona_mod.F90	/^    character(256) last_file_path$/;"	k	type:dataset_type
last_item	linked_list_mod.F90	/^    type(linked_list_item_type), pointer :: last_item /;"	k	type:linked_list_type
last_time	time_mod.F90	/^    type(datetime_type) last_time$/;"	k	type:alert_type
latCell	mesh_mod.F90	/^  real(real_kind), allocatable :: latCell(/;"	v	module:mesh_mod
latEdge	mesh_mod.F90	/^  real(real_kind), allocatable :: latEdge(/;"	v	module:mesh_mod
latSta	history_mod.F90	/^      real(real_kind), allocatable :: latSta(/;"	L	subroutine:station_output_init	file:
latTC	forcing_mod.F90	/^      real(real_kind), intent(in) :: latTC /;"	L	subroutine:calc_TC_wind_field	file:
latTC	forcing_mod.F90	/^      real(real_kind), intent(in) :: latTC /;"	L	subroutine:calc_TC_wind_field_openacc	file:
latTC	forcing_mod.F90	/^      real(real_kind), intent(in) :: latTC$/;"	L	subroutine:calc_distance_from_TC	file:
latTC	forcing_mod.F90	/^      real(real_kind), intent(in) :: latTC$/;"	L	subroutine:calc_distance_from_TC_openacc	file:
latTC	forcing_mod.F90	/^    real(real_kind), allocatable :: latTC /;"	k	type:TC_forcing_type
latTC	mod_mpi_interfaces.F90	/^     real(kind=real_kind), intent(INOUT), dimension(:) :: latTC$/;"	L	subroutine:mpi_bcast_key_parameters	file:
latTC	read_forcing_mod.F90	/^        real(real_kind), intent(out) :: lonTC(:), latTC(/;"	L	subroutine:read_tc_key_parameters	file:
latTC_id	read_forcing_mod.F90	/^                lonTC_id    ,&$/;"	L	subroutine:read_tc_key_parameters	file:
latVertex	mesh_mod.F90	/^  real(real_kind), allocatable :: latVertex(/;"	v	module:mesh_mod
lc	mod_mpi_test_variables.F90	/^   integer, public, parameter  :: lc /;"	v	module:mod_mpi_test_variables
le	datetime_mod.F90	/^  pure elem/;"	f	module:datetime_mod
len_field	string_actions_mod.F90	/^    integer num_field, len_field,/;"	L	function:split_string_1	file:
len_pat	string_actions_mod.F90	/^    integer i, len_pat$/;"	L	function:count_string_1	file:
len_sep	string_actions_mod.F90	/^    integer num_field, len_field, len_sep$/;"	L	function:split_string_1	file:
line	fiona_mod.F90	/^    integer, intent(in), optional :: line$/;"	L	subroutine:handle_error	file:
line	log_mod.F90	/^    integer, intent(in), optional :: line$/;"	L	subroutine:log_error	file:
line	log_mod.F90	/^    integer, intent(in), optional :: line$/;"	L	subroutine:log_notice	file:
line	log_mod.F90	/^    integer, intent(in), optional :: line$/;"	L	subroutine:log_warning	file:
linked_list_append1	linked_list_mod.F90	/^  subroutine linked_list_append1(/;"	s	module:linked_list_mod
linked_list_append2	linked_list_mod.F90	/^  subroutine linked_list_append2(/;"	s	module:linked_list_mod
linked_list_append_item	linked_list_mod.F90	/^  subroutine linked_list_append_item(/;"	s	module:linked_list_mod
linked_list_append_ptr1	linked_list_mod.F90	/^  subroutine linked_list_append_ptr1(/;"	s	module:linked_list_mod
linked_list_append_ptr2	linked_list_mod.F90	/^  subroutine linked_list_append_ptr2(/;"	s	module:linked_list_mod
linked_list_clear	linked_list_mod.F90	/^  subroutine linked_list_clear(/;"	s	module:linked_list_mod
linked_list_cycle	linked_list_mod.F90	/^  subroutine linked_list_cycle(/;"	s	module:linked_list_mod
linked_list_cycle_ptr	linked_list_mod.F90	/^  subroutine linked_list_cycle_ptr(/;"	s	module:linked_list_mod
linked_list_cyclic	linked_list_mod.F90	/^  logical function linked_list_cyclic(/;"	f	module:linked_list_mod
linked_list_delete_and_next	linked_list_mod.F90	/^  subroutine linked_list_delete_and_next(/;"	s	module:linked_list_mod
linked_list_delete_at	linked_list_mod.F90	/^  subroutine linked_list_delete_at(/;"	s	module:linked_list_mod
linked_list_delete_ptr	linked_list_mod.F90	/^  subroutine linked_list_delete_ptr(/;"	s	module:linked_list_mod
linked_list_finalize	linked_list_mod.F90	/^  subroutine linked_list_finalize(/;"	s	module:linked_list_mod
linked_list_first_value	linked_list_mod.F90	/^  function linked_list_first_value(/;"	f	module:linked_list_mod
linked_list_insert1	linked_list_mod.F90	/^  subroutine linked_list_insert1(/;"	s	module:linked_list_mod
linked_list_insert2	linked_list_mod.F90	/^  subroutine linked_list_insert2(/;"	s	module:linked_list_mod
linked_list_insert_item_after	linked_list_mod.F90	/^  subroutine linked_list_insert_item_after(/;"	s	module:linked_list_mod
linked_list_insert_ptr1	linked_list_mod.F90	/^  subroutine linked_list_insert_ptr1(/;"	s	module:linked_list_mod
linked_list_insert_ptr2	linked_list_mod.F90	/^  subroutine linked_list_insert_ptr2(/;"	s	module:linked_list_mod
linked_list_insert_ptr_after	linked_list_mod.F90	/^  subroutine linked_list_insert_ptr_after(/;"	s	module:linked_list_mod
linked_list_insert_ptr_at	linked_list_mod.F90	/^  subroutine linked_list_insert_ptr_at(/;"	s	module:linked_list_mod
linked_list_item	linked_list_mod.F90	/^  function linked_list_item(/;"	f	module:linked_list_mod
linked_list_item_at	linked_list_mod.F90	/^  function linked_list_item_at(/;"	f	module:linked_list_mod
linked_list_item_finalize	linked_list_mod.F90	/^  recursive subroutine linked_list_item_finalize(/;"	s	module:linked_list_mod
linked_list_item_type	linked_list_mod.F90	/^  type linked_list_item_type$/;"	t	module:linked_list_mod
linked_list_iterator	linked_list_mod.F90	/^    type(linked_list_iterator_/;"	L	function:linked_list_iterator	file:
linked_list_iterator	linked_list_mod.F90	/^  function linked_list_iterator(/;"	f	module:linked_list_mod
linked_list_iterator_ended	linked_list_mod.F90	/^  logical function linked_list_iterator_ended(/;"	f	module:linked_list_mod
linked_list_iterator_next	linked_list_mod.F90	/^  subroutine linked_list_iterator_next(/;"	s	module:linked_list_mod
linked_list_iterator_type	linked_list_mod.F90	/^  type linked_list_iterator_type$/;"	t	module:linked_list_mod
linked_list_last_value	linked_list_mod.F90	/^  function linked_list_last_value(/;"	f	module:linked_list_mod
linked_list_mod	linked_list_mod.F90	/^module linked_list_mod$/;"	m
linked_list_remove_item	linked_list_mod.F90	/^  subroutine linked_list_remove_item(/;"	s	module:linked_list_mod
linked_list_replace_ptr	linked_list_mod.F90	/^  subroutine linked_list_replace_ptr(/;"	s	module:linked_list_mod
linked_list_type	linked_list_mod.F90	/^  type linked_list_type$/;"	t	module:linked_list_mod
linked_list_value	linked_list_mod.F90	/^  function linked_list_value(/;"	f	module:linked_list_mod
linked_list_value_at	linked_list_mod.F90	/^  function linked_list_value_at(/;"	f	module:linked_list_mod
list	linked_list_mod.F90	/^    type(linked_list_/;"	L	function:linked_list_iterator	file:
list	linked_list_mod.F90	/^    type(linked_list_/;"	k	type:linked_list_item_type
list	linked_list_mod.F90	/^    type(linked_list_/;"	k	type:linked_list_iterator_type
localVerticalUnitVectors	mesh_mod.F90	/^  real(real_kind), allocatable :: localVerticalUnitVectors(/;"	v	module:mesh_mod
log_add_diag	log_mod.F90	/^  subroutine log_add_diag(/;"	s	module:log_mod
log_error	log_mod.F90	/^  subroutine log_error(/;"	s	module:log_mod
log_init	log_mod.F90	/^  subroutine log_init(/;"	s	module:log_mod
log_mod	log_mod.F90	/^module log_mod$/;"	m
log_notice	log_mod.F90	/^  subroutine log_notice(/;"	s	module:log_mod
log_print	log_mod.F90	/^  subroutine log_print(/;"	s	module:log_mod
log_print_diag	log_mod.F90	/^  subroutine log_print_diag(/;"	s	module:log_mod
log_warning	log_mod.F90	/^  subroutine log_warning(/;"	s	module:log_mod
lonCell	mesh_mod.F90	/^  real(real_kind), allocatable :: lonCell(/;"	v	module:mesh_mod
lonEdge	mesh_mod.F90	/^  real(real_kind), allocatable :: lonEdge(/;"	v	module:mesh_mod
lonSta	history_mod.F90	/^      real(real_kind), allocatable :: lonSta(/;"	L	subroutine:station_output_init	file:
lonTC	forcing_mod.F90	/^      real(real_kind), intent(in) :: lonTC /;"	L	subroutine:calc_TC_wind_field	file:
lonTC	forcing_mod.F90	/^      real(real_kind), intent(in) :: lonTC /;"	L	subroutine:calc_TC_wind_field_openacc	file:
lonTC	forcing_mod.F90	/^      real(real_kind), intent(in) :: lonTC$/;"	L	subroutine:calc_distance_from_TC	file:
lonTC	forcing_mod.F90	/^      real(real_kind), intent(in) :: lonTC$/;"	L	subroutine:calc_distance_from_TC_openacc	file:
lonTC	forcing_mod.F90	/^    real(real_kind), allocatable :: lonTC /;"	k	type:TC_forcing_type
lonTC	mod_mpi_interfaces.F90	/^     real(kind=real_kind), intent(INOUT), dimension(:) :: lonTC$/;"	L	subroutine:mpi_bcast_key_parameters	file:
lonTC	read_forcing_mod.F90	/^        real(real_kind), intent(out) :: lonTC(/;"	L	subroutine:read_tc_key_parameters	file:
lonTC_id	read_forcing_mod.F90	/^        integer time_dimid  ,&$/;"	L	subroutine:read_tc_key_parameters	file:
lonVertex	mesh_mod.F90	/^  real(real_kind), allocatable :: lonVertex(/;"	v	module:mesh_mod
long_name	fiona_mod.F90	/^    character(*), intent(in) :: long_name$/;"	L	subroutine:fiona_add_var	file:
long_name	fiona_mod.F90	/^    character(*), intent(in), optional :: long_name$/;"	L	subroutine:fiona_add_dim	file:
long_name	fiona_mod.F90	/^    character(*), intent(in), optional :: long_name$/;"	L	subroutine:fiona_quick_output_1d_r8	file:
long_name	fiona_mod.F90	/^    character(*), intent(in), optional :: long_name$/;"	L	subroutine:fiona_quick_output_2d_r8	file:
long_name	fiona_mod.F90	/^    character(256) long_name$/;"	k	type:dim_type
long_name	fiona_mod.F90	/^    character(256) long_name$/;"	k	type:var_type
long_name_	fiona_mod.F90	/^    character(:), allocatable :: long_name_$/;"	L	subroutine:fiona_quick_output_1d_r8	file:
long_name_	fiona_mod.F90	/^    character(:), allocatable :: long_name_$/;"	L	subroutine:fiona_quick_output_2d_r8	file:
lt	datetime_mod.F90	/^  pure elemental logical function lt(/;"	f	module:datetime_mod
m	fre_dir_mod.F90	/^      integer m$/;"	L	subroutine:generate_frequency	file:
m	history_mod.F90	/^     integer :: i, iCell, k, m$/;"	L	subroutine:station_output_write	file:
m	history_mod.F90	/^     integer:: iCell, k, m$/;"	L	subroutine:calc_output	file:
m	initial_mod.F90	/^  INTEGER :: iCell, k, m$/;"	L	subroutine:cold_start_wam	file:
m	mod_mpi_interfaces.F90	/^      INTEGER :: i, j, k,m$/;"	L	subroutine:mpi_real_3d_prepare_sendbuf	file:
m	mod_mpi_interfaces.F90	/^      integer :: i,j,k,l,m,/;"	L	subroutine:mpi_find_halo_cells	file:
m	mod_mpi_interfaces.F90	/^      integer :: i,j,k,m,/;"	L	subroutine:mpi_oncell_input_real_adjust_3d	file:
m	mod_mpi_interfaces.F90	/^      integer :: i,j,k,m,/;"	L	subroutine:mpi_oncell_output_real_adjust_3d	file:
m	mod_mpi_test.F90	/^      INTEGER ::  i,pos_1d,pos_2d,k,j,m$/;"	L	subroutine:mpi_3d_data_adjust	file:
m	time_scheme_mod.F90	/^    integer iCell, k, m$/;"	L	subroutine:time_integrate_advection	file:
m	wave_propag_mod.F90	/^      integer         :: iCell, k, m,/;"	L	subroutine:prepare_coef_theta	file:
m	wave_propag_mod.F90	/^      integer        :: iCell, iEdge, k, m$/;"	L	subroutine:prepare_propag	file:
m	wave_propag_mod.F90	/^    integer         :: iCell, k, m,/;"	L	subroutine:calc_tend_geog	file:
m	wave_propag_mod.F90	/^    integer         :: iCell, k, m,/;"	L	subroutine:calc_tend_theta	file:
m	wave_propag_mod.F90	/^    integer :: iCell, k, m$/;"	L	subroutine:update_state	file:
maskBdy	mask_mod.F90	/^  integer, allocatable :: maskBdy(/;"	v	module:mask_mod
maskCell	mask_mod.F90	/^  integer, allocatable :: maskCell(/;"	v	module:mask_mod
maskEdge	mask_mod.F90	/^  integer, allocatable :: maskEdge(/;"	v	module:mask_mod
mask_edge	mask_mod.F90	/^  subroutine mask_edge(/;"	s	module:mask_mod
mask_final	mask_mod.F90	/^  subroutine mask_final(/;"	s	module:mask_mod
mask_init	mask_mod.F90	/^  subroutine mask_init(/;"	s	module:mask_mod
mask_mod	mask_mod.F90	/^module mask_mod$/;"	m
maxEdges	mesh_mod.F90	/^  integer maxEdges$/;"	v	module:mesh_mod
maxEdges	mod_mpi_interfaces.F90	/^      integer :: maxEdges$/;"	L	subroutine:mpi_find_halo_cells	file:
maxEdges	mod_mpi_interfaces.F90	/^      integer :: maxEdges,/;"	L	subroutine:mpi_find_halo_edges	file:
maxEdges	mod_mpi_interfaces.F90	/^      integer, intent(INOUT) :: maxEdges$/;"	L	subroutine:mpi_pack_bcast	file:
maxEdges	mod_mpi_interfaces.F90	/^      integer, intent(in) :: maxEdges$/;"	L	subroutine:mpi_bcast_process_partition	file:
maxEdges2	mesh_mod.F90	/^  integer maxEdges2$/;"	v	module:mesh_mod
maxEdges2	mod_mpi_interfaces.F90	/^      integer, intent(INOUT) :: maxEdges2$/;"	L	subroutine:mpi_pack_bcast	file:
max_Hs	wave_mod.F90	/^    real(real_kind) :: max_Hs$/;"	L	subroutine:wave_mod_run	file:
max_file_path_len	const_mod.F90	/^  integer, parameter :: max_file_path_len /;"	v	module:const_mod
max_load_factor	hash_table_mod.F90	/^    real :: max_load_factor /;"	k	type:hash_table_type
max_load_factor	hash_table_mod.F90	/^    real, intent(in), optional :: max_load_factor$/;"	L	function:hash_table	file:
max_load_factor	hash_table_mod.F90	/^    real, intent(in), optional :: max_load_factor$/;"	L	subroutine:create_hash_table	file:
max_name_len	const_mod.F90	/^  integer, parameter :: max_name_len /;"	v	module:const_mod
max_wind	wave_mod.F90	/^    real(real_kind) :: max_wind$/;"	L	subroutine:wave_mod_run	file:
mesh_final	mesh_mod.F90	/^  subroutine mesh_final(/;"	s	module:mesh_mod
mesh_init	mesh_mod.F90	/^  subroutine mesh_init(/;"	s	module:mesh_mod
mesh_mod	mesh_mod.F90	/^module mesh_mod$/;"	m
message	log_mod.F90	/^    character(*), intent(in) :: message$/;"	L	subroutine:log_error	file:
message	log_mod.F90	/^    character(*), intent(in) :: message$/;"	L	subroutine:log_notice	file:
message	log_mod.F90	/^    character(*), intent(in) :: message$/;"	L	subroutine:log_print	file:
message	log_mod.F90	/^    character(*), intent(in) :: message$/;"	L	subroutine:log_warning	file:
millisecond	datetime_mod.F90	/^    integer, intent(in), optional :: millisecond$/;"	L	function:datetime_1	file:
millisecond	datetime_mod.F90	/^    real(8) :: millisecond /;"	k	type:datetime_type
milliseconds	timedelta_mod.F90	/^    real(8) :: milliseconds /;"	k	type:timedelta_type
minute	datetime_mod.F90	/^    integer :: minute /;"	k	type:datetime_type
minute	datetime_mod.F90	/^    integer, intent(in), optional :: minute$/;"	L	function:datetime_1	file:
minutes	datetime_mod.F90	/^    integer, intent(in), optional :: minutes$/;"	L	function:datetime_1	file:
minutes	time_mod.F90	/^    real(real_kind), intent(in), optional :: minutes$/;"	L	subroutine:time_add_alert	file:
minutes	timedelta_mod.F90	/^    real(8) :: minutes /;"	k	type:timedelta_type
minutes_	time_mod.F90	/^    real(real_kind) minutes_$/;"	L	subroutine:time_add_alert	file:
missing_value	const_mod.F90	/^  real(real_kind), parameter :: missing_value /;"	v	module:const_mod
mod_mpi_interfaces	mod_mpi_interfaces.F90	/^module mod_mpi_interfaces$/;"	m
mod_mpi_io_netcdf	mod_mpi_io_netcdf.F90	/^module mod_mpi_io_netcdf$/;"	m
mod_mpi_reallocate	mod_mpi_reallocate.F90	/^module mod_mpi_reallocate$/;"	m
mod_mpi_test	mod_mpi_test.F90	/^MODULE mod_mpi_test$/;"	m
mod_mpi_test_variables	mod_mpi_test_variables.F90	/^MODULE mod_mpi_test_variables /;"	m
mod_mpi_variables	mod_mpi_variables.F90	/^module mod_mpi_variables$/;"	m
mod_openacc_interfaces	mod_openacc_interfaces.F90	/^MODULE mod_openacc_interfaces /;"	m
mod_openacc_variable	mod_openacc_variable.F90	/^MODULE mod_openacc_variable$/;"	m
mode	fiona_mod.F90	/^    character(*), intent(in), optional :: mode$/;"	L	function:get_dataset	file:
mode	fiona_mod.F90	/^    character(10) mode$/;"	k	type:dataset_type
mode	mod_mpi_interfaces.F90	/^      character(len = 6),intent(in) :: mode$/;"	L	subroutine:mpi_get_index_edges_vertices	file:
mode	mod_mpi_interfaces.F90	/^      character(len = 6),intent(in) :: mode$/;"	L	subroutine:mpi_input_exchange_nonroot_1d_integer	file:
mode	mod_mpi_interfaces.F90	/^      character(len = 6),intent(in) :: mode$/;"	L	subroutine:mpi_input_exchange_nonroot_1d_real	file:
mode	mod_mpi_interfaces.F90	/^      character(len = 6),intent(in) :: mode$/;"	L	subroutine:mpi_input_exchange_nonroot_2d_integer	file:
mode	mod_mpi_interfaces.F90	/^      character(len = 6),intent(in) :: mode$/;"	L	subroutine:mpi_input_exchange_nonroot_2d_real	file:
mode	mod_mpi_interfaces.F90	/^      character(len = 6),intent(in) :: mode$/;"	L	subroutine:mpi_input_exchange_root_1d_integer	file:
mode	mod_mpi_interfaces.F90	/^      character(len = 6),intent(in) :: mode$/;"	L	subroutine:mpi_input_exchange_root_1d_real	file:
mode	mod_mpi_interfaces.F90	/^      character(len = 6),intent(in) :: mode$/;"	L	subroutine:mpi_input_exchange_root_2d_integer	file:
mode	mod_mpi_interfaces.F90	/^      character(len = 6),intent(in) :: mode$/;"	L	subroutine:mpi_input_exchange_root_2d_real	file:
mode_	fiona_mod.F90	/^    character(30) mode_$/;"	L	function:get_dataset	file:
month	datetime_mod.F90	/^    integer :: month /;"	k	type:datetime_type
month	datetime_mod.F90	/^    integer, intent(in) :: month$/;"	L	function:days_of_month	file:
month	datetime_mod.F90	/^    integer, intent(in), optional :: month$/;"	L	function:datetime_1	file:
months	time_mod.F90	/^    real(real_kind), intent(in), optional :: months$/;"	L	subroutine:time_add_alert	file:
months	timedelta_mod.F90	/^    integer :: months /;"	k	type:timedelta_type
months_	time_mod.F90	/^    real(real_kind) months_$/;"	L	subroutine:time_add_alert	file:
mpi_1d_data_adjust	mod_mpi_test.F90	/^   SUBROUTINE mpi_1d_data_adjust(/;"	s	module:mod_mpi_test
mpi_2d_data_adjust_int	mod_mpi_test.F90	/^   SUBROUTINE mpi_2d_data_adjust_int(/;"	s	module:mod_mpi_test
mpi_2d_data_adjust_real	mod_mpi_test.F90	/^   SUBROUTINE mpi_2d_data_adjust_real(/;"	s	module:mod_mpi_test
mpi_2d_prepare_recv_counts_displs	mod_mpi_interfaces.F90	/^   SUBROUTINE mpi_2d_prepare_recv_counts_displs(/;"	s	module:mod_mpi_interfaces
mpi_3d_data_adjust	mod_mpi_test.F90	/^   SUBROUTINE mpi_3d_data_adjust(/;"	s	module:mod_mpi_test
mpi_3d_prepare_recv_counts_displs	mod_mpi_interfaces.F90	/^   SUBROUTINE mpi_3d_prepare_recv_counts_displs(/;"	s	module:mod_mpi_interfaces
mpi_adjust_buf_nSta_sum	history_mod.F90	/^      real(real_kind), allocatable :: mpi_adjust_buf_nSta_sum(/;"	L	subroutine:station_output_init	file:
mpi_adjust_buf_nSta_sum	history_mod.F90	/^     real(real_kind), allocatable :: mpi_adjust_buf_nSta_sum(/;"	L	subroutine:station_output_write	file:
mpi_adjust_cell_indexes	mod_mpi_interfaces.F90	/^    subroutine mpi_adjust_cell_indexes(/;"	s	module:mod_mpi_interfaces
mpi_adjust_edge_indexes	mod_mpi_interfaces.F90	/^    subroutine mpi_adjust_edge_indexes(/;"	s	module:mod_mpi_interfaces
mpi_adjust_sta	mod_mpi_interfaces.F90	/^  interface mpi_adjust_sta$/;"	i	module:mod_mpi_interfaces
mpi_adjust_sta_1d_real	mod_mpi_interfaces.F90	/^    subroutine mpi_adjust_sta_1d_real(/;"	s	module:mod_mpi_interfaces
mpi_array_size	mod_mpi_variables.F90	/^  integer :: mpi_array_size(/;"	v	module:mod_mpi_variables
mpi_bcast_2d	mod_mpi_interfaces.F90	/^    subroutine mpi_bcast_2d(/;"	s	module:mod_mpi_interfaces
mpi_bcast_key_parameters	mod_mpi_interfaces.F90	/^   subroutine mpi_bcast_key_parameters(/;"	s	module:mod_mpi_interfaces
mpi_bcast_process_partition	mod_mpi_interfaces.F90	/^    subroutine mpi_bcast_process_partition(/;"	s	module:mod_mpi_interfaces
mpi_buf	mod_mpi_interfaces.F90	/^      character, allocatable, dimension(:) :: mpi_buf$/;"	L	subroutine:mpi_namelist_pack_recv	file:
mpi_buf	mod_mpi_interfaces.F90	/^      character, allocatable, dimension(:) :: mpi_buf$/;"	L	subroutine:mpi_namelist_pack_send	file:
mpi_buf	mod_mpi_interfaces.F90	/^      character, allocatable, dimension(:) :: mpi_buf$/;"	L	subroutine:mpi_pack_bcast	file:
mpi_buf	mod_mpi_interfaces.F90	/^     real(kind=real_kind), allocatable, dimension(:) :: mpi_buf$/;"	L	subroutine:mpi_bcast_key_parameters	file:
mpi_buf_nSta_sum	history_mod.F90	/^      real(real_kind), allocatable :: mpi_buf_nSta_sum(/;"	L	subroutine:station_output_init	file:
mpi_buf_nSta_sum	history_mod.F90	/^     real(real_kind), allocatable :: mpi_buf_nSta_sum(/;"	L	subroutine:station_output_write	file:
mpi_buf_output	mod_mpi_interfaces.F90	/^      integer,allocatable,dimension(:) :: mpi_buf_output$/;"	L	subroutine:mpi_output_oncell_1d_integer	file:
mpi_buf_output	mod_mpi_interfaces.F90	/^      real(kind=real_kind),allocatable,dimension(:) :: mpi_buf_output$/;"	L	subroutine:mpi_output_oncell_1d_real	file:
mpi_buf_output	mod_mpi_interfaces.F90	/^      real(kind=real_kind),allocatable,dimension(:) :: mpi_buf_output$/;"	L	subroutine:mpi_output_onedge_1d_real	file:
mpi_buf_output	mod_mpi_interfaces.F90	/^      real(kind=real_kind),allocatable,dimension(:,:) :: mpi_buf_output$/;"	L	subroutine:mpi_output_oncell_2d_real	file:
mpi_buf_output	mod_mpi_interfaces.F90	/^      real(kind=real_kind),allocatable,dimension(:,:,:) :: mpi_buf_output$/;"	L	subroutine:mpi_output_oncell_3d_real	file:
mpi_buf_recv	mod_mpi_interfaces.F90	/^      integer,allocatable,dimension(:) :: mpi_buf_recv$/;"	L	subroutine:mpi_output_oncell_1d_integer	file:
mpi_buf_recv	mod_mpi_interfaces.F90	/^      real(kind=real_kind),allocatable,dimension(:) :: mpi_buf_recv$/;"	L	subroutine:mpi_output_oncell_1d_real	file:
mpi_buf_recv	mod_mpi_interfaces.F90	/^      real(kind=real_kind),allocatable,dimension(:) :: mpi_buf_recv$/;"	L	subroutine:mpi_output_oncell_2d_real	file:
mpi_buf_recv	mod_mpi_interfaces.F90	/^      real(kind=real_kind),allocatable,dimension(:) :: mpi_buf_recv$/;"	L	subroutine:mpi_output_oncell_3d_real	file:
mpi_buf_recv	mod_mpi_interfaces.F90	/^      real(kind=real_kind),allocatable,dimension(:) :: mpi_buf_recv$/;"	L	subroutine:mpi_output_onedge_1d_real	file:
mpi_buf_size	mod_mpi_interfaces.F90	/^      integer :: mpi_buf_size /;"	L	subroutine:mpi_namelist_pack_recv	file:
mpi_buf_size	mod_mpi_interfaces.F90	/^      integer, parameter :: mpi_buf_size /;"	L	subroutine:mpi_pack_bcast	file:
mpi_buf_size	mod_mpi_interfaces.F90	/^      integer,parameter :: mpi_buf_size /;"	L	subroutine:mpi_namelist_pack_send	file:
mpi_buf_size	mod_mpi_interfaces.F90	/^     integer :: dimen,mpi_buf_size,/;"	L	subroutine:mpi_bcast_key_parameters	file:
mpi_cell_indexes	mod_mpi_variables.F90	/^  integer, allocatable, dimension(:) :: mpi_cell_indexes /;"	v	module:mod_mpi_variables
mpi_cell_indexes_all	mod_mpi_variables.F90	/^  integer, allocatable, dimension(:) :: mpi_cell_indexes_all /;"	v	module:mod_mpi_variables
mpi_cell_indexes_all_ordered	mod_mpi_variables.F90	/^  integer, allocatable, dimension(:) :: mpi_cell_indexes_all_ordered /;"	v	module:mod_mpi_variables
mpi_cell_indexes_all_ordered_counts	mod_mpi_variables.F90	/^  integer, allocatable, dimension(:) :: mpi_cell_indexes_all_ordered_counts /;"	v	module:mod_mpi_variables
mpi_cell_indexes_all_ordered_displs	mod_mpi_variables.F90	/^  integer, allocatable, dimension(:) :: mpi_cell_indexes_all_ordered_displs /;"	v	module:mod_mpi_variables
mpi_cell_indexes_tmp	mod_mpi_interfaces.F90	/^      integer,allocatable,dimension(:) :: mpi_cell_indexes_tmp$/;"	L	subroutine:mpi_bcast_process_partition	file:
mpi_cell_recv_indexes_1d_all	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_cell_recv_indexes_1d_all$/;"	L	subroutine:mpi_get_cell_destination	file:
mpi_cell_recv_indexes_1d_counts	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_cell_recv_indexes_1d_counts /;"	v	module:mod_mpi_variables
mpi_cell_recv_indexes_1d_counts_all	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_cell_recv_indexes_1d_counts_all$/;"	L	subroutine:mpi_get_cell_destination	file:
mpi_cell_recv_indexes_1d_counts_sum_all	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_cell_recv_indexes_1d_counts_sum_all$/;"	L	subroutine:mpi_get_cell_destination	file:
mpi_cell_recv_indexes_1d_counts_sum_all_sum	mod_mpi_interfaces.F90	/^      INTEGER :: mpi_cell_recv_indexes_1d_counts_sum_all_sum$/;"	L	subroutine:mpi_get_cell_destination	file:
mpi_cell_recv_indexes_1d_counts_sum_displs_all	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_cell_recv_indexes_1d_counts_sum_displs_all$/;"	L	subroutine:mpi_get_cell_destination	file:
mpi_cell_recv_indexes_1d_displs	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_cell_recv_indexes_1d_displs /;"	v	module:mod_mpi_variables
mpi_cell_recv_total_indexes	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_cell_recv_total_indexes /;"	v	module:mod_mpi_variables
mpi_cell_recv_total_indexes_counts	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_cell_recv_total_indexes_counts$/;"	v	module:mod_mpi_variables
mpi_cell_send_indexes_1d	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_cell_send_indexes_1d /;"	v	module:mod_mpi_variables
mpi_cell_send_indexes_1d_all	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_cell_send_indexes_1d_all$/;"	L	subroutine:mpi_get_cell_destination	file:
mpi_cell_send_indexes_1d_all_current_p	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_cell_send_indexes_1d_all_current_p$/;"	L	subroutine:mpi_get_cell_destination	file:
mpi_cell_send_indexes_1d_counts	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_cell_send_indexes_1d_counts /;"	v	module:mod_mpi_variables
mpi_cell_send_indexes_1d_counts_all	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_cell_send_indexes_1d_counts_all$/;"	L	subroutine:mpi_get_cell_destination	file:
mpi_cell_send_indexes_1d_counts_sum	mod_mpi_variables.F90	/^  INTEGER, PUBLIC :: mpi_cell_send_indexes_1d_counts_sum /;"	v	module:mod_mpi_variables
mpi_cell_send_indexes_1d_counts_sum_all	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_cell_send_indexes_1d_counts_sum_all$/;"	L	subroutine:mpi_get_cell_destination	file:
mpi_cell_send_indexes_1d_counts_sum_displs_all	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_cell_send_indexes_1d_counts_sum_displs_all$/;"	L	subroutine:mpi_get_cell_destination	file:
mpi_cell_send_indexes_1d_displs	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_cell_send_indexes_1d_displs /;"	v	module:mod_mpi_variables
mpi_cellsOnCell	mod_mpi_test_variables.F90	/^   integer,allocatable,dimension(:,:) :: mpi_cellsOnCell$/;"	v	module:mod_mpi_test_variables
mpi_cellsOnCell_all	mod_mpi_variables.F90	/^  integer, allocatable, dimension(:,:) :: mpi_cellsOnCell_all /;"	v	module:mod_mpi_variables
mpi_clock_communicate_end	mod_mpi_test_variables.F90	/^   INTEGER(KIND = 8), PUBLIC :: mpi_clock_communicate_end /;"	v	module:mod_mpi_test_variables
mpi_clock_communicate_start	mod_mpi_test_variables.F90	/^   INTEGER(KIND = 8), PUBLIC :: mpi_clock_communicate_start /;"	v	module:mod_mpi_test_variables
mpi_clock_compute_end	mod_mpi_test_variables.F90	/^   INTEGER(KIND = 8), PUBLIC :: mpi_clock_compute_end /;"	v	module:mod_mpi_test_variables
mpi_clock_compute_start	mod_mpi_test_variables.F90	/^   INTEGER(KIND = 8), PUBLIC :: mpi_clock_compute_start /;"	v	module:mod_mpi_test_variables
mpi_clock_count_max	mod_mpi_test_variables.F90	/^   INTEGER(KIND = 8), PUBLIC :: mpi_clock_count_max /;"	v	module:mod_mpi_test_variables
mpi_clock_end	mod_mpi_test_variables.F90	/^   INTEGER(KIND = 8), PUBLIC :: mpi_clock_end /;"	v	module:mod_mpi_test_variables
mpi_clock_init_end	mod_mpi_test_variables.F90	/^   INTEGER(KIND = 8), PUBLIC :: mpi_clock_init_end /;"	v	module:mod_mpi_test_variables
mpi_clock_init_start	mod_mpi_test_variables.F90	/^   INTEGER(KIND = 8), PUBLIC :: mpi_clock_init_start /;"	v	module:mod_mpi_test_variables
mpi_clock_io	mod_mpi_test_variables.F90	/^   INTEGER(KIND = 8), PUBLIC :: mpi_clock_io /;"	v	module:mod_mpi_test_variables
mpi_clock_io_end	mod_mpi_test_variables.F90	/^   INTEGER(KIND = 8), PUBLIC :: mpi_clock_io_end /;"	v	module:mod_mpi_test_variables
mpi_clock_io_start	mod_mpi_test_variables.F90	/^   INTEGER(KIND = 8), PUBLIC :: mpi_clock_io_start /;"	v	module:mod_mpi_test_variables
mpi_clock_neigh_commu	mod_mpi_test_variables.F90	/^   INTEGER(KIND = 8), PUBLIC :: mpi_clock_neigh_commu /;"	v	module:mod_mpi_test_variables
mpi_clock_neigh_commu_all	mod_mpi_test_variables.F90	/^   INTEGER(KIND = 8), public,allocatable,dimension(:) :: mpi_clock_neigh_commu_all /;"	v	module:mod_mpi_test_variables
mpi_clock_neigh_commu_end	mod_mpi_test_variables.F90	/^   INTEGER(KIND = 8), PUBLIC :: mpi_clock_neigh_commu_end /;"	v	module:mod_mpi_test_variables
mpi_clock_neigh_commu_start	mod_mpi_test_variables.F90	/^   INTEGER(KIND = 8), PUBLIC :: mpi_clock_neigh_commu_start /;"	v	module:mod_mpi_test_variables
mpi_clock_prep_recv	mod_mpi_test_variables.F90	/^   INTEGER(KIND = 8), PUBLIC :: mpi_clock_prep_recv /;"	v	module:mod_mpi_test_variables
mpi_clock_prep_recv_end	mod_mpi_test_variables.F90	/^   INTEGER(KIND = 8), PUBLIC :: mpi_clock_prep_recv_end /;"	v	module:mod_mpi_test_variables
mpi_clock_prep_recv_start	mod_mpi_test_variables.F90	/^   INTEGER(KIND = 8), PUBLIC :: mpi_clock_prep_recv_start /;"	v	module:mod_mpi_test_variables
mpi_clock_rate	mod_mpi_test_variables.F90	/^   INTEGER(KIND = 8), PUBLIC :: mpi_clock_rate /;"	v	module:mod_mpi_test_variables
mpi_clock_start	mod_mpi_test_variables.F90	/^   INTEGER(KIND = 8), PUBLIC :: mpi_clock_start /;"	v	module:mod_mpi_test_variables
mpi_comm	fiona_mod.F90	/^    integer :: mpi_comm /;"	k	type:dataset_type
mpi_comm	fiona_mod.F90	/^    integer, intent(in), optional :: mpi_comm$/;"	L	subroutine:fiona_create_dataset	file:
mpi_comm	fiona_mod.F90	/^    integer, intent(in), optional :: mpi_comm$/;"	L	subroutine:fiona_open_dataset	file:
mpi_data_1d_output_real	mod_mpi_test.F90	/^   SUBROUTINE mpi_data_1d_output_real(/;"	s	module:mod_mpi_test
mpi_data_2d_output_int	mod_mpi_test.F90	/^   SUBROUTINE mpi_data_2d_output_int(/;"	s	module:mod_mpi_test
mpi_data_2d_output_real	mod_mpi_test.F90	/^   SUBROUTINE mpi_data_2d_output_real(/;"	s	module:mod_mpi_test
mpi_data_3d_output_real	mod_mpi_test.F90	/^   SUBROUTINE mpi_data_3d_output_real(/;"	s	module:mod_mpi_test
mpi_data_exchange_oncell	mod_mpi_interfaces.F90	/^   INTERFACE mpi_data_exchange_oncell$/;"	i	module:mod_mpi_interfaces
mpi_data_exchange_onedge	mod_mpi_interfaces.F90	/^   INTERFACE mpi_data_exchange_onedge$/;"	i	module:mod_mpi_interfaces
mpi_edge_dests	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_edge_dests /;"	v	module:mod_mpi_variables
mpi_edge_dests_all	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_edge_dests_all$/;"	v	module:mod_mpi_variables
mpi_edge_dests_all_current_p	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_edge_dests_all_current_p$/;"	L	subroutine:mpi_get_edge_destination	file:
mpi_edge_indegree	mod_mpi_variables.F90	/^  INTEGER, PUBLIC :: mpi_edge_indegree /;"	v	module:mod_mpi_variables
mpi_edge_indegree_all	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_edge_indegree_all /;"	v	module:mod_mpi_variables
mpi_edge_indegree_counts_sum	mod_mpi_interfaces.F90	/^      INTEGER :: mpi_edge_indegree_counts_sum$/;"	L	subroutine:mpi_get_edge_destination	file:
mpi_edge_indegree_displs_all	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_edge_indegree_displs_all$/;"	L	subroutine:mpi_get_edge_destination	file:
mpi_edge_indexes	mod_mpi_variables.F90	/^  integer, allocatable, dimension(:) :: mpi_edge_indexes /;"	v	module:mod_mpi_variables
mpi_edge_indexes_all_ordered	mod_mpi_variables.F90	/^  integer, allocatable, dimension(:) :: mpi_edge_indexes_all_ordered /;"	v	module:mod_mpi_variables
mpi_edge_indexes_all_ordered_counts	mod_mpi_variables.F90	/^  integer, allocatable, dimension(:) :: mpi_edge_indexes_all_ordered_counts /;"	v	module:mod_mpi_variables
mpi_edge_indexes_all_ordered_displs	mod_mpi_variables.F90	/^  integer, allocatable, dimension(:) :: mpi_edge_indexes_all_ordered_displs /;"	v	module:mod_mpi_variables
mpi_edge_outdegree	mod_mpi_variables.F90	/^  INTEGER, PUBLIC :: mpi_edge_outdegree /;"	v	module:mod_mpi_variables
mpi_edge_outdegree_all	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_edge_outdegree_all$/;"	L	subroutine:mpi_get_edge_destination	file:
mpi_edge_outdegree_all	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_edge_outdegree_all$/;"	v	module:mod_mpi_variables
mpi_edge_outdegree_counts_sum	mod_mpi_interfaces.F90	/^      INTEGER :: mpi_edge_outdegree_counts_sum$/;"	L	subroutine:mpi_get_edge_destination	file:
mpi_edge_outdegree_displs_all	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_edge_outdegree_displs_all$/;"	L	subroutine:mpi_get_edge_destination	file:
mpi_edge_recv_indexes_1d_all	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_edge_recv_indexes_1d_all$/;"	L	subroutine:mpi_get_edge_destination	file:
mpi_edge_recv_indexes_1d_counts	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_edge_recv_indexes_1d_counts /;"	v	module:mod_mpi_variables
mpi_edge_recv_indexes_1d_counts_all	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_edge_recv_indexes_1d_counts_all$/;"	L	subroutine:mpi_get_edge_destination	file:
mpi_edge_recv_indexes_1d_counts_sum_all	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_edge_recv_indexes_1d_counts_sum_all$/;"	L	subroutine:mpi_get_edge_destination	file:
mpi_edge_recv_indexes_1d_counts_sum_all_sum	mod_mpi_interfaces.F90	/^      INTEGER :: mpi_edge_recv_indexes_1d_counts_sum_all_sum$/;"	L	subroutine:mpi_get_edge_destination	file:
mpi_edge_recv_indexes_1d_counts_sum_displs_all	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_edge_recv_indexes_1d_counts_sum_displs_all$/;"	L	subroutine:mpi_get_edge_destination	file:
mpi_edge_recv_indexes_1d_displs	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_edge_recv_indexes_1d_displs /;"	v	module:mod_mpi_variables
mpi_edge_send_indexes_1d	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_edge_send_indexes_1d /;"	v	module:mod_mpi_variables
mpi_edge_send_indexes_1d_all	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_edge_send_indexes_1d_all$/;"	L	subroutine:mpi_get_edge_destination	file:
mpi_edge_send_indexes_1d_all_current_p	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_edge_send_indexes_1d_all_current_p$/;"	L	subroutine:mpi_get_edge_destination	file:
mpi_edge_send_indexes_1d_counts	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_edge_send_indexes_1d_counts /;"	v	module:mod_mpi_variables
mpi_edge_send_indexes_1d_counts_all	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_edge_send_indexes_1d_counts_all$/;"	L	subroutine:mpi_get_edge_destination	file:
mpi_edge_send_indexes_1d_counts_sum	mod_mpi_variables.F90	/^  INTEGER, PUBLIC :: mpi_edge_send_indexes_1d_counts_sum /;"	v	module:mod_mpi_variables
mpi_edge_send_indexes_1d_counts_sum_all	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_edge_send_indexes_1d_counts_sum_all$/;"	L	subroutine:mpi_get_edge_destination	file:
mpi_edge_send_indexes_1d_counts_sum_displs_all	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_edge_send_indexes_1d_counts_sum_displs_all$/;"	L	subroutine:mpi_get_edge_destination	file:
mpi_edge_send_indexes_1d_displs	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_edge_send_indexes_1d_displs /;"	v	module:mod_mpi_variables
mpi_edge_sources	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_edge_sources /;"	v	module:mod_mpi_variables
mpi_edge_sources_all	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_edge_sources_all /;"	v	module:mod_mpi_variables
mpi_edge_total_dests	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_edge_total_dests /;"	v	module:mod_mpi_variables
mpi_edge_total_indegree	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_edge_total_indegree /;"	v	module:mod_mpi_variables
mpi_edge_total_ordered_counts	mod_mpi_variables.F90	/^  integer :: mpi_edge_total_ordered_counts /;"	v	module:mod_mpi_variables
mpi_edge_total_outdegree	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_edge_total_outdegree$/;"	v	module:mod_mpi_variables
mpi_edge_total_recv_indexes_all_current_p	mod_mpi_interfaces.F90	/^      INTEGER :: mpi_edge_total_recv_indexes_all_current_p$/;"	L	subroutine:mpi_get_edge_destination	file:
mpi_edge_total_sources	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_edge_total_sources /;"	v	module:mod_mpi_variables
mpi_edgesOnCell	mod_mpi_test_variables.F90	/^   integer,allocatable,dimension(:,:) :: mpi_edgesOnCell$/;"	v	module:mod_mpi_test_variables
mpi_edgesOnCell_all	mod_mpi_variables.F90	/^  integer, allocatable, dimension(:,:) :: mpi_edgesOnCell_all /;"	v	module:mod_mpi_variables
mpi_err	mod_mpi_variables.F90	/^  integer :: mpi_err /;"	v	module:mod_mpi_variables
mpi_filename	mod_mpi_test.F90	/^      CHARACTER(lc), INTENT(IN) :: mpi_filename$/;"	L	subroutine:mpi_gather_output_integer	file:
mpi_find_halo_cells	mod_mpi_interfaces.F90	/^    subroutine mpi_find_halo_cells(/;"	s	module:mod_mpi_interfaces
mpi_find_halo_edges	mod_mpi_interfaces.F90	/^    subroutine mpi_find_halo_edges(/;"	s	module:mod_mpi_interfaces
mpi_findloc	mod_mpi_interfaces.F90	/^    INTEGER FUNCTION mpi_findloc(/;"	f	module:mod_mpi_interfaces
mpi_findloc_ordered	mod_mpi_interfaces.F90	/^    INTEGER FUNCTION mpi_findloc_ordered(/;"	f	module:mod_mpi_interfaces
mpi_gather_output_integer	mod_mpi_test.F90	/^   SUBROUTINE mpi_gather_output_integer(/;"	s	module:mod_mpi_test
mpi_get_cell_destination	mod_mpi_interfaces.F90	/^    SUBROUTINE mpi_get_cell_destination(/;"	s	module:mod_mpi_interfaces
mpi_get_edge_destination	mod_mpi_interfaces.F90	/^    subroutine mpi_get_edge_destination(/;"	s	module:mod_mpi_interfaces
mpi_get_index_edges_vertices	mod_mpi_interfaces.F90	/^    subroutine mpi_get_index_edges_vertices(/;"	s	module:mod_mpi_interfaces
mpi_graph_comm	mod_mpi_variables.F90	/^  INTEGER :: mpi_graph_comm /;"	v	module:mod_mpi_variables
mpi_graph_dests	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_graph_dests /;"	v	module:mod_mpi_variables
mpi_graph_dests_all	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_graph_dests_all$/;"	v	module:mod_mpi_variables
mpi_graph_dests_all_current_p	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_graph_dests_all_current_p$/;"	L	subroutine:mpi_get_cell_destination	file:
mpi_graph_indegree	mod_mpi_variables.F90	/^  INTEGER, PUBLIC :: mpi_graph_indegree /;"	v	module:mod_mpi_variables
mpi_graph_indegree_all	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_graph_indegree_all /;"	v	module:mod_mpi_variables
mpi_graph_indegree_counts_sum	mod_mpi_interfaces.F90	/^      INTEGER :: mpi_graph_indegree_counts_sum$/;"	L	subroutine:mpi_get_cell_destination	file:
mpi_graph_indegree_displs_all	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_graph_indegree_displs_all$/;"	L	subroutine:mpi_get_cell_destination	file:
mpi_graph_outdegree	mod_mpi_variables.F90	/^  INTEGER, PUBLIC :: mpi_graph_outdegree /;"	v	module:mod_mpi_variables
mpi_graph_outdegree_all	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_graph_outdegree_all$/;"	L	subroutine:mpi_get_cell_destination	file:
mpi_graph_outdegree_all	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_graph_outdegree_all$/;"	v	module:mod_mpi_variables
mpi_graph_outdegree_counts_sum	mod_mpi_interfaces.F90	/^      INTEGER :: mpi_graph_outdegree_counts_sum$/;"	L	subroutine:mpi_get_cell_destination	file:
mpi_graph_outdegree_displs_all	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_graph_outdegree_displs_all$/;"	L	subroutine:mpi_get_cell_destination	file:
mpi_graph_sources	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_graph_sources /;"	v	module:mod_mpi_variables
mpi_graph_sources_all	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_graph_sources_all /;"	v	module:mod_mpi_variables
mpi_graph_total_dests	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_graph_total_dests /;"	v	module:mod_mpi_variables
mpi_graph_total_indegree	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_graph_total_indegree /;"	v	module:mod_mpi_variables
mpi_graph_total_outdegree	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_graph_total_outdegree$/;"	v	module:mod_mpi_variables
mpi_graph_total_recv_indexes_all_current_p	mod_mpi_interfaces.F90	/^      INTEGER :: mpi_graph_total_recv_indexes_all_current_p$/;"	L	subroutine:mpi_get_cell_destination	file:
mpi_graph_total_sources	mod_mpi_variables.F90	/^  INTEGER, PUBLIC, ALLOCATABLE, DIMENSION(:) :: mpi_graph_total_sources /;"	v	module:mod_mpi_variables
mpi_halo_level	mod_mpi_variables.F90	/^  integer,parameter :: mpi_halo_level /;"	v	module:mod_mpi_variables
mpi_halo_level_cell	mod_mpi_variables.F90	/^  integer,allocatable,dimension(:) :: mpi_halo_level_cell$/;"	v	module:mod_mpi_variables
mpi_halo_level_edge	mod_mpi_variables.F90	/^  integer,allocatable,dimension(:) :: mpi_halo_level_edge$/;"	v	module:mod_mpi_variables
mpi_indexes_all_ordered_counts_2d	mod_mpi_interfaces.F90	/^      integer, allocatable, dimension(:) :: mpi_indexes_all_ordered_counts_2d$/;"	L	subroutine:mpi_input_exchange_nonroot_2d_integer	file:
mpi_indexes_all_ordered_counts_2d	mod_mpi_interfaces.F90	/^      integer, allocatable, dimension(:) :: mpi_indexes_all_ordered_counts_2d$/;"	L	subroutine:mpi_input_exchange_nonroot_2d_real	file:
mpi_indexes_all_ordered_counts_2d	mod_mpi_interfaces.F90	/^      integer, allocatable, dimension(:) :: mpi_indexes_all_ordered_counts_2d$/;"	L	subroutine:mpi_input_exchange_root_2d_integer	file:
mpi_indexes_all_ordered_counts_2d	mod_mpi_interfaces.F90	/^      integer, allocatable, dimension(:) :: mpi_indexes_all_ordered_counts_2d$/;"	L	subroutine:mpi_input_exchange_root_2d_real	file:
mpi_indexes_all_ordered_counts_2d	mod_mpi_interfaces.F90	/^      integer, allocatable, dimension(:) :: mpi_indexes_all_ordered_counts_2d$/;"	L	subroutine:mpi_input_oncell_2d_real	file:
mpi_indexes_all_ordered_counts_2d	mod_mpi_interfaces.F90	/^      integer,allocatable,dimension(:) :: mpi_indexes_all_ordered_counts_2d$/;"	L	subroutine:mpi_output_oncell_2d_real	file:
mpi_indexes_all_ordered_counts_3d	mod_mpi_interfaces.F90	/^      integer, allocatable, dimension(:) :: mpi_indexes_all_ordered_counts_3d$/;"	L	subroutine:mpi_input_oncell_3d_real	file:
mpi_indexes_all_ordered_counts_3d	mod_mpi_interfaces.F90	/^      integer,allocatable,dimension(:) :: mpi_indexes_all_ordered_counts_3d$/;"	L	subroutine:mpi_output_oncell_3d_real	file:
mpi_indexes_all_ordered_displs_2d	mod_mpi_interfaces.F90	/^      integer, allocatable, dimension(:) :: mpi_indexes_all_ordered_displs_2d$/;"	L	subroutine:mpi_input_exchange_nonroot_2d_integer	file:
mpi_indexes_all_ordered_displs_2d	mod_mpi_interfaces.F90	/^      integer, allocatable, dimension(:) :: mpi_indexes_all_ordered_displs_2d$/;"	L	subroutine:mpi_input_exchange_nonroot_2d_real	file:
mpi_indexes_all_ordered_displs_2d	mod_mpi_interfaces.F90	/^      integer, allocatable, dimension(:) :: mpi_indexes_all_ordered_displs_2d$/;"	L	subroutine:mpi_input_exchange_root_2d_integer	file:
mpi_indexes_all_ordered_displs_2d	mod_mpi_interfaces.F90	/^      integer, allocatable, dimension(:) :: mpi_indexes_all_ordered_displs_2d$/;"	L	subroutine:mpi_input_exchange_root_2d_real	file:
mpi_indexes_all_ordered_displs_2d	mod_mpi_interfaces.F90	/^      integer, allocatable, dimension(:) :: mpi_indexes_all_ordered_displs_2d$/;"	L	subroutine:mpi_input_oncell_2d_real	file:
mpi_indexes_all_ordered_displs_2d	mod_mpi_interfaces.F90	/^      integer,allocatable,dimension(:) :: mpi_indexes_all_ordered_displs_2d$/;"	L	subroutine:mpi_output_oncell_2d_real	file:
mpi_indexes_all_ordered_displs_3d	mod_mpi_interfaces.F90	/^      integer, allocatable, dimension(:) :: mpi_indexes_all_ordered_displs_3d$/;"	L	subroutine:mpi_input_oncell_3d_real	file:
mpi_indexes_all_ordered_displs_3d	mod_mpi_interfaces.F90	/^      integer,allocatable,dimension(:) :: mpi_indexes_all_ordered_displs_3d$/;"	L	subroutine:mpi_output_oncell_3d_real	file:
mpi_init_arrays	mod_mpi_interfaces.F90	/^   subroutine mpi_init_arrays(/;"	s	module:mod_mpi_interfaces
mpi_init_basic_env	mod_mpi_interfaces.F90	/^    subroutine mpi_init_basic_env$/;"	s	module:mod_mpi_interfaces
mpi_init_graph_index	mod_mpi_interfaces.F90	/^    subroutine mpi_init_graph_index$/;"	s	module:mod_mpi_interfaces
mpi_input	mod_mpi_test.F90	/^      INTEGER, INTENT(IN) :: mpi_input$/;"	L	subroutine:mpi_gather_output_integer	file:
mpi_input_exchange_nonroot	mod_mpi_interfaces.F90	/^  interface mpi_input_exchange_nonroot$/;"	i	module:mod_mpi_interfaces
mpi_input_exchange_nonroot_1d_integer	mod_mpi_interfaces.F90	/^    subroutine mpi_input_exchange_nonroot_1d_integer(/;"	s	module:mod_mpi_interfaces
mpi_input_exchange_nonroot_1d_real	mod_mpi_interfaces.F90	/^    subroutine mpi_input_exchange_nonroot_1d_real(/;"	s	module:mod_mpi_interfaces
mpi_input_exchange_nonroot_2d_integer	mod_mpi_interfaces.F90	/^    subroutine mpi_input_exchange_nonroot_2d_integer(/;"	s	module:mod_mpi_interfaces
mpi_input_exchange_nonroot_2d_real	mod_mpi_interfaces.F90	/^    subroutine mpi_input_exchange_nonroot_2d_real(/;"	s	module:mod_mpi_interfaces
mpi_input_exchange_root	mod_mpi_interfaces.F90	/^  interface mpi_input_exchange_root$/;"	i	module:mod_mpi_interfaces
mpi_input_exchange_root_1d_integer	mod_mpi_interfaces.F90	/^    subroutine mpi_input_exchange_root_1d_integer(/;"	s	module:mod_mpi_interfaces
mpi_input_exchange_root_1d_real	mod_mpi_interfaces.F90	/^    subroutine mpi_input_exchange_root_1d_real(/;"	s	module:mod_mpi_interfaces
mpi_input_exchange_root_2d_integer	mod_mpi_interfaces.F90	/^    subroutine mpi_input_exchange_root_2d_integer(/;"	s	module:mod_mpi_interfaces
mpi_input_exchange_root_2d_real	mod_mpi_interfaces.F90	/^    subroutine mpi_input_exchange_root_2d_real(/;"	s	module:mod_mpi_interfaces
mpi_input_oncell	mod_mpi_interfaces.F90	/^  interface mpi_input_oncell$/;"	i	module:mod_mpi_interfaces
mpi_input_oncell_1d_real	mod_mpi_interfaces.F90	/^    subroutine mpi_input_oncell_1d_real(/;"	s	module:mod_mpi_interfaces
mpi_input_oncell_2d_real	mod_mpi_interfaces.F90	/^    subroutine mpi_input_oncell_2d_real(/;"	s	module:mod_mpi_interfaces
mpi_input_oncell_3d_real	mod_mpi_interfaces.F90	/^    subroutine mpi_input_oncell_3d_real(/;"	s	module:mod_mpi_interfaces
mpi_int_1d_block_exchange_oncell	mod_mpi_interfaces.F90	/^   SUBROUTINE mpi_int_1d_block_exchange_oncell(/;"	s	module:mod_mpi_interfaces
mpi_int_1d_block_exchange_onedge	mod_mpi_interfaces.F90	/^   SUBROUTINE mpi_int_1d_block_exchange_onedge(/;"	s	module:mod_mpi_interfaces
mpi_int_1d_prepare_sendbuf	mod_mpi_interfaces.F90	/^   SUBROUTINE mpi_int_1d_prepare_sendbuf(/;"	s	module:mod_mpi_interfaces
mpi_int_array	mod_mpi_test.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_int_array$/;"	L	subroutine:mpi_gather_output_integer	file:
mpi_int_cell_sendbuf_1d	mod_mpi_variables.F90	/^  integer,allocatable,dimension(:) :: mpi_int_cell_sendbuf_1d$/;"	v	module:mod_mpi_variables
mpi_int_cell_sendbuf_2d	mod_mpi_variables.F90	/^  integer,allocatable,dimension(:,:) :: mpi_int_cell_sendbuf_2d$/;"	v	module:mod_mpi_variables
mpi_int_edge_sendbuf_1d	mod_mpi_variables.F90	/^  integer,allocatable,dimension(:) :: mpi_int_edge_sendbuf_1d$/;"	v	module:mod_mpi_variables
mpi_int_edge_sendbuf_2d	mod_mpi_variables.F90	/^  integer,allocatable,dimension(:,:) :: mpi_int_edge_sendbuf_2d$/;"	v	module:mod_mpi_variables
mpi_integer_buf_nCells	mod_mpi_variables.F90	/^  integer,allocatable,dimension(:) :: mpi_integer_buf_nCells$/;"	v	module:mod_mpi_variables
mpi_integer_buf_nCells_2d	mod_mpi_variables.F90	/^  integer,allocatable,dimension(:,:) :: mpi_integer_buf_nCells_2d$/;"	v	module:mod_mpi_variables
mpi_integer_buf_nEdges	mod_mpi_variables.F90	/^  integer,allocatable,dimension(:) :: mpi_integer_buf_nEdges$/;"	v	module:mod_mpi_variables
mpi_integer_buf_nEdges_2d_2	mod_mpi_variables.F90	/^  integer,allocatable,dimension(:,:) :: mpi_integer_buf_nEdges_2d_2$/;"	v	module:mod_mpi_variables
mpi_integer_buf_nEdges_2d_max	mod_mpi_variables.F90	/^  integer,allocatable,dimension(:,:) :: mpi_integer_buf_nEdges_2d_max$/;"	v	module:mod_mpi_variables
mpi_integer_buf_vertices	mod_mpi_variables.F90	/^  integer,allocatable,dimension(:) :: mpi_integer_buf_vertices$/;"	v	module:mod_mpi_variables
mpi_integer_buf_vertices_2d	mod_mpi_variables.F90	/^  integer,allocatable,dimension(:,:) :: mpi_integer_buf_vertices_2d$/;"	v	module:mod_mpi_variables
mpi_io_msg	mod_mpi_interfaces.F90	/^      character(LEN = MPI_MIDIUM_LEN) :: mpi_io_msg$/;"	L	subroutine:mpi_bcast_process_partition	file:
mpi_io_stat	mod_mpi_interfaces.F90	/^      integer :: mpi_io_stat,/;"	L	subroutine:mpi_bcast_process_partition	file:
mpi_nCells	mod_mpi_variables.F90	/^  integer :: mpi_nCells /;"	v	module:mod_mpi_variables
mpi_nEdges	mod_mpi_variables.F90	/^  integer :: mpi_nEdges /;"	v	module:mod_mpi_variables
mpi_nSta_all	mod_mpi_variables.F90	/^  integer, allocatable, dimension(:) :: mpi_nSta_all /;"	v	module:mod_mpi_variables
mpi_nSta_all_displs	mod_mpi_variables.F90	/^  integer, allocatable, dimension(:) :: mpi_nSta_all_displs /;"	v	module:mod_mpi_variables
mpi_nSta_index_all	mod_mpi_variables.F90	/^  integer, allocatable, dimension(:) :: mpi_nSta_index_all /;"	v	module:mod_mpi_variables
mpi_nSta_index_tmp	history_mod.F90	/^      integer, allocatable, dimension(:) :: mpi_nSta_index_tmp$/;"	L	subroutine:station_output_init	file:
mpi_nSta_sum	mod_mpi_variables.F90	/^  integer :: mpi_nSta_sum /;"	v	module:mod_mpi_variables
mpi_namelist_pack_recv	mod_mpi_interfaces.F90	/^    subroutine mpi_namelist_pack_recv$/;"	s	module:mod_mpi_interfaces
mpi_namelist_pack_send	mod_mpi_interfaces.F90	/^    subroutine mpi_namelist_pack_send$/;"	s	module:mod_mpi_interfaces
mpi_num_halocell	mod_mpi_variables.F90	/^  integer :: mpi_num_halocell$/;"	v	module:mod_mpi_variables
mpi_num_haloedge	mod_mpi_variables.F90	/^  integer :: mpi_num_haloedge$/;"	v	module:mod_mpi_variables
mpi_num_nEdges_halo	mod_mpi_variables.F90	/^  integer :: mpi_num_nEdges_halo$/;"	v	module:mod_mpi_variables
mpi_num_ncells_halo	mod_mpi_variables.F90	/^  integer :: mpi_num_ncells_halo$/;"	v	module:mod_mpi_variables
mpi_oncell_input_real_adjust_2d	mod_mpi_interfaces.F90	/^    subroutine mpi_oncell_input_real_adjust_2d(/;"	s	module:mod_mpi_interfaces
mpi_oncell_input_real_adjust_3d	mod_mpi_interfaces.F90	/^    subroutine mpi_oncell_input_real_adjust_3d(/;"	s	module:mod_mpi_interfaces
mpi_oncell_output_integer_adjust_1d	mod_mpi_interfaces.F90	/^    subroutine mpi_oncell_output_integer_adjust_1d(/;"	s	module:mod_mpi_interfaces
mpi_oncell_output_real_adjust_1d	mod_mpi_interfaces.F90	/^    subroutine mpi_oncell_output_real_adjust_1d(/;"	s	module:mod_mpi_interfaces
mpi_oncell_output_real_adjust_2d	mod_mpi_interfaces.F90	/^    subroutine mpi_oncell_output_real_adjust_2d(/;"	s	module:mod_mpi_interfaces
mpi_oncell_output_real_adjust_3d	mod_mpi_interfaces.F90	/^    subroutine mpi_oncell_output_real_adjust_3d(/;"	s	module:mod_mpi_interfaces
mpi_onedge_output_real_adjust_1d	mod_mpi_interfaces.F90	/^    subroutine mpi_onedge_output_real_adjust_1d(/;"	s	module:mod_mpi_interfaces
mpi_output_oncell	mod_mpi_interfaces.F90	/^  interface mpi_output_oncell$/;"	i	module:mod_mpi_interfaces
mpi_output_oncell_1d_integer	mod_mpi_interfaces.F90	/^    subroutine mpi_output_oncell_1d_integer(/;"	s	module:mod_mpi_interfaces
mpi_output_oncell_1d_real	mod_mpi_interfaces.F90	/^    subroutine mpi_output_oncell_1d_real(/;"	s	module:mod_mpi_interfaces
mpi_output_oncell_2d_real	mod_mpi_interfaces.F90	/^    subroutine mpi_output_oncell_2d_real(/;"	s	module:mod_mpi_interfaces
mpi_output_oncell_3d_real	mod_mpi_interfaces.F90	/^    subroutine mpi_output_oncell_3d_real(/;"	s	module:mod_mpi_interfaces
mpi_output_onedge	mod_mpi_interfaces.F90	/^  interface mpi_output_onedge$/;"	i	module:mod_mpi_interfaces
mpi_output_onedge_1d_real	mod_mpi_interfaces.F90	/^    subroutine mpi_output_onedge_1d_real(/;"	s	module:mod_mpi_interfaces
mpi_pack_bcast	mod_mpi_interfaces.F90	/^    subroutine mpi_pack_bcast /;"	s	module:mod_mpi_interfaces
mpi_pos	mod_mpi_interfaces.F90	/^     integer :: dimen,mpi_buf_size,mpi_pos$/;"	L	subroutine:mpi_bcast_key_parameters	file:
mpi_position	mod_mpi_interfaces.F90	/^      integer :: mpi_position /;"	L	subroutine:mpi_namelist_pack_recv	file:
mpi_position	mod_mpi_interfaces.F90	/^      integer :: mpi_position /;"	L	subroutine:mpi_namelist_pack_send	file:
mpi_position	mod_mpi_interfaces.F90	/^      integer :: mpi_position /;"	L	subroutine:mpi_pack_bcast	file:
mpi_procs	mod_mpi_variables.F90	/^  integer :: mpi_procs /;"	v	module:mod_mpi_variables
mpi_rank	mod_mpi_variables.F90	/^  integer :: mpi_rank /;"	v	module:mod_mpi_variables
mpi_real_1d_block_exchange_oncell	mod_mpi_interfaces.F90	/^   SUBROUTINE mpi_real_1d_block_exchange_oncell(/;"	s	module:mod_mpi_interfaces
mpi_real_1d_prepare_sendbuf	mod_mpi_interfaces.F90	/^   SUBROUTINE mpi_real_1d_prepare_sendbuf(/;"	s	module:mod_mpi_interfaces
mpi_real_2d_block_exchange_oncell	mod_mpi_interfaces.F90	/^   SUBROUTINE mpi_real_2d_block_exchange_oncell(/;"	s	module:mod_mpi_interfaces
mpi_real_2d_prepare_recvbuf	mod_mpi_interfaces.F90	/^   SUBROUTINE mpi_real_2d_prepare_recvbuf(/;"	s	module:mod_mpi_interfaces
mpi_real_2d_prepare_sendbuf	mod_mpi_interfaces.F90	/^   SUBROUTINE mpi_real_2d_prepare_sendbuf(/;"	s	module:mod_mpi_interfaces
mpi_real_3d_block_exchange_oncell	mod_mpi_interfaces.F90	/^   SUBROUTINE mpi_real_3d_block_exchange_oncell(/;"	s	module:mod_mpi_interfaces
mpi_real_3d_block_exchange_oncell_onebyone	mod_mpi_interfaces.F90	/^   SUBROUTINE mpi_real_3d_block_exchange_oncell_onebyone(/;"	s	module:mod_mpi_interfaces
mpi_real_3d_prepare_recvbuf	mod_mpi_interfaces.F90	/^   SUBROUTINE mpi_real_3d_prepare_recvbuf(/;"	s	module:mod_mpi_interfaces
mpi_real_3d_prepare_recvbuf_onebyone	mod_mpi_interfaces.F90	/^   SUBROUTINE mpi_real_3d_prepare_recvbuf_onebyone(/;"	s	module:mod_mpi_interfaces
mpi_real_3d_prepare_sendbuf	mod_mpi_interfaces.F90	/^   SUBROUTINE mpi_real_3d_prepare_sendbuf(/;"	s	module:mod_mpi_interfaces
mpi_real_buf_nCells	mod_mpi_variables.F90	/^  real(kind=real_kind),allocatable,dimension(:) :: mpi_real_buf_nCells$/;"	v	module:mod_mpi_variables
mpi_real_buf_nCells_2	mod_mpi_variables.F90	/^  real(kind=real_kind),allocatable,dimension(:) :: mpi_real_buf_nCells_2$/;"	v	module:mod_mpi_variables
mpi_real_buf_nCells_debug	mod_mpi_test_variables.F90	/^   real(kind=real_kind),allocatable,dimension(:) :: mpi_real_buf_nCells_debug$/;"	v	module:mod_mpi_test_variables
mpi_real_buf_nEdges	mod_mpi_variables.F90	/^  real(kind=real_kind),allocatable,dimension(:) :: mpi_real_buf_nEdges$/;"	v	module:mod_mpi_variables
mpi_real_buf_nEdges_2d_2	mod_mpi_variables.F90	/^  real(kind=real_kind),allocatable,dimension(:,:) :: mpi_real_buf_nEdges_2d_2$/;"	v	module:mod_mpi_variables
mpi_real_buf_vertices	mod_mpi_variables.F90	/^  real(kind = real_kind),allocatable,dimension(:) :: mpi_real_buf_vertices$/;"	v	module:mod_mpi_variables
mpi_real_buf_vertices_2d	mod_mpi_variables.F90	/^  real(kind = real_kind),allocatable,dimension(:,:) :: mpi_real_buf_vertices_2d$/;"	v	module:mod_mpi_variables
mpi_real_cell_sendbuf_1d	mod_mpi_variables.F90	/^  real(kind = real_kind),allocatable,dimension(:) :: mpi_real_cell_sendbuf_1d$/;"	v	module:mod_mpi_variables
mpi_real_cell_sendbuf_2d	mod_mpi_variables.F90	/^  real(kind = real_kind),allocatable,dimension(:,:) :: mpi_real_cell_sendbuf_2d$/;"	v	module:mod_mpi_variables
mpi_real_edge_sendbuf_1d	mod_mpi_variables.F90	/^  real(kind = real_kind),allocatable,dimension(:) :: mpi_real_edge_sendbuf_1d$/;"	v	module:mod_mpi_variables
mpi_real_edge_sendbuf_2d	mod_mpi_variables.F90	/^  real(kind = real_kind),allocatable,dimension(:,:) :: mpi_real_edge_sendbuf_2d$/;"	v	module:mod_mpi_variables
mpi_real_kind	mod_mpi_variables.F90	/^  integer :: mpi_real_kind /;"	v	module:mod_mpi_variables
mpi_real_test_2d	mod_mpi_test_variables.F90	/^   REAL(kind=real_kind), ALLOCATABLE, DIMENSION(:, :) :: mpi_real_test_2d /;"	v	module:mod_mpi_test_variables
mpi_real_test_sec_2d	mod_mpi_test_variables.F90	/^   REAL(kind=real_kind), ALLOCATABLE, DIMENSION(:, :) :: mpi_real_test_sec_2d /;"	v	module:mod_mpi_test_variables
mpi_recv_buf_tmp	mod_mpi_interfaces.F90	/^      real(kind=real_kind), ALLOCATABLE, DIMENSION(:) :: mpi_recv_buf_tmp$/;"	L	subroutine:mpi_real_2d_block_exchange_oncell	file:
mpi_recv_buf_tmp	mod_mpi_interfaces.F90	/^      real(kind=real_kind), ALLOCATABLE, DIMENSION(:) :: mpi_recv_buf_tmp$/;"	L	subroutine:mpi_real_3d_block_exchange_oncell	file:
mpi_recv_buf_tmp	mod_mpi_interfaces.F90	/^      real(kind=real_kind), ALLOCATABLE, DIMENSION(:) :: mpi_recv_buf_tmp$/;"	L	subroutine:mpi_real_3d_block_exchange_oncell_onebyone	file:
mpi_recv_buf_tmp	mod_mpi_interfaces.F90	/^      real(kind=real_kind), DIMENSION(:), INTENT(IN) :: mpi_recv_buf_tmp$/;"	L	subroutine:mpi_real_2d_prepare_recvbuf	file:
mpi_recv_buf_tmp	mod_mpi_interfaces.F90	/^      real(kind=real_kind), DIMENSION(:), INTENT(IN) :: mpi_recv_buf_tmp$/;"	L	subroutine:mpi_real_3d_prepare_recvbuf	file:
mpi_recv_buf_tmp	mod_mpi_interfaces.F90	/^      real(kind=real_kind), DIMENSION(:), INTENT(IN) :: mpi_recv_buf_tmp$/;"	L	subroutine:mpi_real_3d_prepare_recvbuf_onebyone	file:
mpi_recv_data	mod_mpi_interfaces.F90	/^      integer, DIMENSION(:), INTENT(INOUT) :: mpi_recv_data$/;"	L	subroutine:mpi_int_1d_block_exchange_oncell	file:
mpi_recv_data	mod_mpi_interfaces.F90	/^      integer, DIMENSION(:), INTENT(INOUT) :: mpi_recv_data$/;"	L	subroutine:mpi_int_1d_block_exchange_onedge	file:
mpi_recv_data	mod_mpi_interfaces.F90	/^      real(kind=real_kind), DIMENSION(:), INTENT(INOUT) :: mpi_recv_data$/;"	L	subroutine:mpi_real_1d_block_exchange_oncell	file:
mpi_recv_data	mod_mpi_interfaces.F90	/^      real(kind=real_kind), DIMENSION(:, :), INTENT(INOUT) :: mpi_recv_data$/;"	L	subroutine:mpi_real_2d_block_exchange_oncell	file:
mpi_recv_data	mod_mpi_interfaces.F90	/^      real(kind=real_kind), DIMENSION(:, :), INTENT(INOUT) :: mpi_recv_data$/;"	L	subroutine:mpi_real_2d_prepare_recvbuf	file:
mpi_recv_data	mod_mpi_interfaces.F90	/^      real(kind=real_kind), DIMENSION(:, :,:), INTENT(INOUT) :: mpi_recv_data$/;"	L	subroutine:mpi_real_3d_block_exchange_oncell	file:
mpi_recv_data	mod_mpi_interfaces.F90	/^      real(kind=real_kind), DIMENSION(:, :,:), INTENT(INOUT) :: mpi_recv_data$/;"	L	subroutine:mpi_real_3d_block_exchange_oncell_onebyone	file:
mpi_recv_data	mod_mpi_interfaces.F90	/^      real(kind=real_kind), DIMENSION(:, :,:), INTENT(INOUT) :: mpi_recv_data$/;"	L	subroutine:mpi_real_3d_prepare_recvbuf	file:
mpi_recv_data	mod_mpi_interfaces.F90	/^      real(kind=real_kind), DIMENSION(:, :,:), INTENT(INOUT) :: mpi_recv_data$/;"	L	subroutine:mpi_real_3d_prepare_recvbuf_onebyone	file:
mpi_recv_indexes_counts_tmp	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_recv_indexes_counts_tmp$/;"	L	subroutine:mpi_real_2d_block_exchange_oncell	file:
mpi_recv_indexes_counts_tmp	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_recv_indexes_counts_tmp$/;"	L	subroutine:mpi_real_3d_block_exchange_oncell	file:
mpi_recv_indexes_counts_tmp	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_recv_indexes_counts_tmp$/;"	L	subroutine:mpi_real_3d_block_exchange_oncell_onebyone	file:
mpi_recv_indexes_counts_tmp	mod_mpi_interfaces.F90	/^      INTEGER, DIMENSION(:), INTENT(INOUT) ::mpi_recv_indexes_counts_tmp$/;"	L	subroutine:mpi_2d_prepare_recv_counts_displs	file:
mpi_recv_indexes_counts_tmp	mod_mpi_interfaces.F90	/^      INTEGER, DIMENSION(:), INTENT(INOUT) ::mpi_recv_indexes_counts_tmp$/;"	L	subroutine:mpi_3d_prepare_recv_counts_displs	file:
mpi_recv_indexes_displs_tmp	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_recv_indexes_displs_tmp$/;"	L	subroutine:mpi_real_2d_block_exchange_oncell	file:
mpi_recv_indexes_displs_tmp	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_recv_indexes_displs_tmp$/;"	L	subroutine:mpi_real_3d_block_exchange_oncell	file:
mpi_recv_indexes_displs_tmp	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_recv_indexes_displs_tmp$/;"	L	subroutine:mpi_real_3d_block_exchange_oncell_onebyone	file:
mpi_recv_indexes_displs_tmp	mod_mpi_interfaces.F90	/^      INTEGER, DIMENSION(:), INTENT(INOUT) ::mpi_recv_indexes_displs_tmp$/;"	L	subroutine:mpi_2d_prepare_recv_counts_displs	file:
mpi_recv_indexes_displs_tmp	mod_mpi_interfaces.F90	/^      INTEGER, DIMENSION(:), INTENT(INOUT) ::mpi_recv_indexes_displs_tmp$/;"	L	subroutine:mpi_3d_prepare_recv_counts_displs	file:
mpi_req	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE,DIMENSION(:) ::  mpi_req$/;"	L	subroutine:mpi_real_3d_block_exchange_oncell_onebyone	file:
mpi_send_buf	mod_mpi_interfaces.F90	/^      integer, DIMENSION(:), INTENT(INOUT) :: mpi_send_buf$/;"	L	subroutine:mpi_int_1d_prepare_sendbuf	file:
mpi_send_buf	mod_mpi_interfaces.F90	/^      real(kind=real_kind), DIMENSION(:), INTENT(INOUT) :: mpi_send_buf$/;"	L	subroutine:mpi_real_1d_prepare_sendbuf	file:
mpi_send_buf	mod_mpi_interfaces.F90	/^      real(kind=real_kind), DIMENSION(:), INTENT(INOUT) :: mpi_send_buf$/;"	L	subroutine:mpi_real_2d_prepare_sendbuf	file:
mpi_send_buf	mod_mpi_interfaces.F90	/^      real(kind=real_kind), DIMENSION(:), INTENT(INOUT) :: mpi_send_buf$/;"	L	subroutine:mpi_real_3d_prepare_sendbuf	file:
mpi_send_buf_tmp	mod_mpi_interfaces.F90	/^      real(kind=real_kind), ALLOCATABLE, DIMENSION(:) :: mpi_send_buf_tmp$/;"	L	subroutine:mpi_real_2d_block_exchange_oncell	file:
mpi_send_buf_tmp	mod_mpi_interfaces.F90	/^      real(kind=real_kind), ALLOCATABLE, DIMENSION(:) :: mpi_send_buf_tmp$/;"	L	subroutine:mpi_real_3d_block_exchange_oncell	file:
mpi_send_buf_tmp	mod_mpi_interfaces.F90	/^      real(kind=real_kind), ALLOCATABLE, DIMENSION(:) :: mpi_send_buf_tmp$/;"	L	subroutine:mpi_real_3d_block_exchange_oncell_onebyone	file:
mpi_send_indexes_1d_counts_tmp	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_send_indexes_1d_counts_tmp$/;"	L	subroutine:mpi_real_2d_block_exchange_oncell	file:
mpi_send_indexes_1d_counts_tmp	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_send_indexes_1d_counts_tmp$/;"	L	subroutine:mpi_real_3d_block_exchange_oncell	file:
mpi_send_indexes_1d_counts_tmp	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_send_indexes_1d_counts_tmp$/;"	L	subroutine:mpi_real_3d_block_exchange_oncell_onebyone	file:
mpi_send_indexes_1d_counts_tmp	mod_mpi_interfaces.F90	/^      INTEGER, DIMENSION(:), INTENT(INOUT) :: mpi_send_indexes_1d_counts_tmp$/;"	L	subroutine:mpi_real_2d_prepare_sendbuf	file:
mpi_send_indexes_1d_counts_tmp	mod_mpi_interfaces.F90	/^      INTEGER, DIMENSION(:), INTENT(INOUT) :: mpi_send_indexes_1d_counts_tmp$/;"	L	subroutine:mpi_real_3d_prepare_sendbuf	file:
mpi_send_indexes_1d_displs_tmp	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_send_indexes_1d_displs_tmp$/;"	L	subroutine:mpi_real_2d_block_exchange_oncell	file:
mpi_send_indexes_1d_displs_tmp	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_send_indexes_1d_displs_tmp$/;"	L	subroutine:mpi_real_3d_block_exchange_oncell	file:
mpi_send_indexes_1d_displs_tmp	mod_mpi_interfaces.F90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: mpi_send_indexes_1d_displs_tmp$/;"	L	subroutine:mpi_real_3d_block_exchange_oncell_onebyone	file:
mpi_send_indexes_1d_displs_tmp	mod_mpi_interfaces.F90	/^      INTEGER, DIMENSION(:), INTENT(INOUT) :: mpi_send_indexes_1d_displs_tmp$/;"	L	subroutine:mpi_real_2d_prepare_sendbuf	file:
mpi_send_indexes_1d_displs_tmp	mod_mpi_interfaces.F90	/^      INTEGER, DIMENSION(:), INTENT(INOUT) :: mpi_send_indexes_1d_displs_tmp$/;"	L	subroutine:mpi_real_3d_prepare_sendbuf	file:
mpi_send_recv_namelist	mod_mpi_interfaces.F90	/^    subroutine mpi_send_recv_namelist$/;"	s	module:mod_mpi_interfaces
mpi_size	mod_mpi_interfaces.F90	/^      integer :: mpi_size(/;"	L	subroutine:mpi_namelist_pack_recv	file:
mpi_size	mod_mpi_interfaces.F90	/^      integer :: mpi_size(/;"	L	subroutine:mpi_namelist_pack_send	file:
mpi_sort	mod_mpi_interfaces.F90	/^  interface mpi_sort$/;"	i	module:mod_mpi_interfaces
mpi_sort_one	mod_mpi_interfaces.F90	/^    SUBROUTINE mpi_sort_one(/;"	s	module:mod_mpi_interfaces
mpi_sort_two	mod_mpi_interfaces.F90	/^    SUBROUTINE mpi_sort_two(/;"	s	module:mod_mpi_interfaces
mpi_source_buf	mod_mpi_interfaces.F90	/^      integer, DIMENSION(:), INTENT(IN) :: mpi_source_buf$/;"	L	subroutine:mpi_int_1d_prepare_sendbuf	file:
mpi_source_buf	mod_mpi_interfaces.F90	/^      real(kind=real_kind), DIMENSION(:), INTENT(IN) :: mpi_source_buf$/;"	L	subroutine:mpi_real_1d_prepare_sendbuf	file:
mpi_source_buf	mod_mpi_interfaces.F90	/^      real(kind=real_kind), DIMENSION(:, :), INTENT(IN) :: mpi_source_buf$/;"	L	subroutine:mpi_real_2d_prepare_sendbuf	file:
mpi_source_buf	mod_mpi_interfaces.F90	/^      real(kind=real_kind), DIMENSION(:, :,:), INTENT(IN) :: mpi_source_buf$/;"	L	subroutine:mpi_real_3d_prepare_sendbuf	file:
mpi_status	mod_mpi_interfaces.F90	/^      INTEGER :: mpi_status(/;"	L	subroutine:mpi_real_3d_block_exchange_oncell_onebyone	file:
mpi_test_compute_time_end	mod_mpi_test.F90	/^   SUBROUTINE mpi_test_compute_time_end /;"	s	module:mod_mpi_test
mpi_test_compute_time_start	mod_mpi_test.F90	/^   SUBROUTINE mpi_test_compute_time_start /;"	s	module:mod_mpi_test
mpi_test_debug_end	mod_mpi_test.F90	/^   SUBROUTINE mpi_test_debug_end$/;"	s	module:mod_mpi_test
mpi_test_debug_init	mod_mpi_test.F90	/^   SUBROUTINE mpi_test_debug_init$/;"	s	module:mod_mpi_test
mpi_test_filename	mod_mpi_test_variables.F90	/^   CHARACTER(LEN = lc), PUBLIC :: mpi_test_filename /;"	v	module:mod_mpi_test_variables
mpi_test_init_time_end	mod_mpi_test.F90	/^   SUBROUTINE mpi_test_init_time_end /;"	s	module:mod_mpi_test
mpi_test_io_time_end	mod_mpi_test.F90	/^   SUBROUTINE mpi_test_io_time_end /;"	s	module:mod_mpi_test
mpi_test_io_time_start	mod_mpi_test.F90	/^   SUBROUTINE mpi_test_io_time_start /;"	s	module:mod_mpi_test
mpi_test_output	mod_mpi_test.F90	/^   INTERFACE mpi_test_output$/;"	i	module:mod_mpi_test
mpi_test_time_end	mod_mpi_test.F90	/^   SUBROUTINE mpi_test_time_end /;"	s	module:mod_mpi_test
mpi_test_time_start	mod_mpi_test.F90	/^   SUBROUTINE mpi_test_time_start /;"	s	module:mod_mpi_test
mpi_time	mod_mpi_test_variables.F90	/^   CHARACTER(LEN = 10), PUBLIC :: mpi_time /;"	v	module:mod_mpi_test_variables
mpi_total_nCells	mod_mpi_variables.F90	/^  integer :: mpi_total_nCells /;"	v	module:mod_mpi_variables
mpi_total_nEdges	mod_mpi_variables.F90	/^  integer :: mpi_total_nEdges /;"	v	module:mod_mpi_variables
mpi_total_nVertices	mod_mpi_variables.F90	/^  integer :: mpi_total_nVertices /;"	v	module:mod_mpi_variables
mpi_vertex_indexes	mod_mpi_variables.F90	/^  integer, allocatable, dimension(:) :: mpi_vertex_indexes /;"	v	module:mod_mpi_variables
mpi_vertex_indexes_all_ordered	mod_mpi_variables.F90	/^  integer, allocatable, dimension(:) :: mpi_vertex_indexes_all_ordered /;"	v	module:mod_mpi_variables
mpi_vertex_indexes_all_ordered_counts	mod_mpi_variables.F90	/^  integer, allocatable, dimension(:) :: mpi_vertex_indexes_all_ordered_counts /;"	v	module:mod_mpi_variables
mpi_vertex_indexes_all_ordered_displs	mod_mpi_variables.F90	/^  integer, allocatable, dimension(:) :: mpi_vertex_indexes_all_ordered_displs /;"	v	module:mod_mpi_variables
mpi_vertex_total_ordered_counts	mod_mpi_variables.F90	/^  integer :: mpi_vertex_total_ordered_counts /;"	v	module:mod_mpi_variables
mpi_write_file_1d_dp	mod_mpi_test.F90	/^   SUBROUTINE mpi_write_file_1d_dp(/;"	s	module:mod_mpi_test
mpi_write_file_1d_integer	mod_mpi_test.F90	/^   SUBROUTINE mpi_write_file_1d_integer(/;"	s	module:mod_mpi_test
mpi_write_file_2d_dp	mod_mpi_test.F90	/^   SUBROUTINE mpi_write_file_2d_dp(/;"	s	module:mod_mpi_test
mpi_write_file_2d_i2	mod_mpi_test.F90	/^   SUBROUTINE mpi_write_file_2d_i2(/;"	s	module:mod_mpi_test
mpi_write_file_3d_dp	mod_mpi_test.F90	/^   SUBROUTINE mpi_write_file_3d_dp(/;"	s	module:mod_mpi_test
msg	fiona_mod.F90	/^    character(*), intent(in) :: msg$/;"	L	subroutine:handle_error	file:
myIter	mod_mpi_test_variables.F90	/^   INTEGER :: myIter=/;"	v	module:mod_mpi_test_variables
n	mod_mpi_reallocate.F90	/^      int/;"	L	subroutine:reallocate_d1D	file:
n	mod_mpi_reallocate.F90	/^      int/;"	L	subroutine:reallocate_d2D	file:
n	mod_mpi_reallocate.F90	/^      int/;"	L	subroutine:reallocate_d3D	file:
n	mod_mpi_reallocate.F90	/^      int/;"	L	subroutine:reallocate_i1D	file:
n	mod_mpi_reallocate.F90	/^      int/;"	L	subroutine:reallocate_i2D	file:
n	mod_mpi_reallocate.F90	/^      int/;"	L	subroutine:reallocate_i3D	file:
n	mod_mpi_reallocate.F90	/^      int/;"	L	subroutine:reallocate_id1D	file:
n	mod_mpi_reallocate.F90	/^      int/;"	L	subroutine:reallocate_id2D	file:
n	mod_mpi_reallocate.F90	/^      int/;"	L	subroutine:reallocate_id3D	file:
n0	mod_mpi_reallocate.F90	/^      integer :: n0(/;"	L	subroutine:reallocate_d2D	file:
n0	mod_mpi_reallocate.F90	/^      integer :: n0(/;"	L	subroutine:reallocate_d3D	file:
n0	mod_mpi_reallocate.F90	/^      integer :: n0(/;"	L	subroutine:reallocate_i2D	file:
n0	mod_mpi_reallocate.F90	/^      integer :: n0(/;"	L	subroutine:reallocate_i3D	file:
n0	mod_mpi_reallocate.F90	/^      integer :: n0(/;"	L	subroutine:reallocate_id2D	file:
n0	mod_mpi_reallocate.F90	/^      integer :: n0(/;"	L	subroutine:reallocate_id3D	file:
n0	mod_mpi_reallocate.F90	/^      integer :: n0,/;"	L	subroutine:reallocate_d1D	file:
n0	mod_mpi_reallocate.F90	/^      integer :: n0,/;"	L	subroutine:reallocate_i1D	file:
n0	mod_mpi_reallocate.F90	/^      integer :: n0,/;"	L	subroutine:reallocate_id1D	file:
n1	face_mod.F90	/^  integer                      :: n1 /;"	L	function:upper	file:
n1	fiona_mod.F90	/^    integer ierr, tmp_id, unlimited_dimid, n1,/;"	L	subroutine:fiona_open_dataset	file:
n2	face_mod.F90	/^  integer                      :: n2 /;"	L	function:upper	file:
n2	fiona_mod.F90	/^    integer ierr, tmp_id, unlimited_dimid, n1, n2,/;"	L	subroutine:fiona_open_dataset	file:
n3	fiona_mod.F90	/^    integer ierr, tmp_id, unlimited_dimid, n1, n2, n3,/;"	L	subroutine:fiona_open_dataset	file:
nCOC	wave_propag_mod.F90	/^      integer         :: iCell, i, j, nCOC,/;"	L	subroutine:calc_depth_gradient	file:
nCOC	wave_propag_mod.F90	/^      integer nCOC,/;"	L	subroutine:prepare_propag	file:
nCells	mesh_mod.F90	/^  integer nCells$/;"	v	module:mesh_mod
nCells	mod_mpi_interfaces.F90	/^      integer :: maxEdges,nCells$/;"	L	subroutine:mpi_find_halo_edges	file:
nCells	mod_mpi_interfaces.F90	/^      integer :: nCells$/;"	L	subroutine:mpi_find_halo_cells	file:
nCells	mod_mpi_interfaces.F90	/^      integer, intent(inout) :: nCells$/;"	L	subroutine:mpi_bcast_process_partition	file:
nCells	mod_mpi_interfaces.F90	/^      integer,intent(in) :: nCells$/;"	L	subroutine:mpi_get_cell_destination	file:
nCells	mod_mpi_interfaces.F90	/^     integer, intent(IN) :: nCells$/;"	L	subroutine:mpi_init_arrays	file:
nCells	read_forcing_mod.F90	/^        integer, intent(in) :: nCells$/;"	L	subroutine:read_met_forcing_var	file:
nCellsOnVertex	mesh_mod.F90	/^  integer, allocatable :: nCellsOnVertex(/;"	v	module:mesh_mod
nEOC	wave_propag_mod.F90	/^      integer         :: iCell, j, nEOC,/;"	L	subroutine:prepare_coef_geog	file:
nEOC	wave_propag_mod.F90	/^    integer         :: iCell, k, m, j, iE, nEOC,/;"	L	subroutine:calc_tend_geog	file:
nEdges	mesh_mod.F90	/^  integer nEdges$/;"	v	module:mesh_mod
nEdges	mod_mpi_interfaces.F90	/^      integer, intent(IN) :: nEdges$/;"	L	subroutine:mpi_find_halo_edges	file:
nEdges	mod_mpi_interfaces.F90	/^      integer, intent(IN) :: nEdges$/;"	L	subroutine:mpi_get_edge_destination	file:
nEdges	mod_mpi_interfaces.F90	/^     integer, intent(IN) :: nEdges$/;"	L	subroutine:mpi_init_arrays	file:
nEdgesOnCell	mesh_mod.F90	/^  integer, allocatable :: nEdgesOnCell(/;"	v	module:mesh_mod
nEdgesOnEdge	mesh_mod.F90	/^  integer, allocatable :: nEdgesOnEdge(/;"	v	module:mesh_mod
nSignEdge	mesh_mod.F90	/^  integer, allocatable :: nSignEdge(/;"	v	module:mesh_mod
nSta	history_mod.F90	/^  integer :: nSta$/;"	v	module:history_mod
nTmp	mod_mpi_reallocate.F90	/^      integer :: n0(2), nTmp(/;"	L	subroutine:reallocate_d2D	file:
nTmp	mod_mpi_reallocate.F90	/^      integer :: n0(2), nTmp(/;"	L	subroutine:reallocate_i2D	file:
nTmp	mod_mpi_reallocate.F90	/^      integer :: n0(2), nTmp(/;"	L	subroutine:reallocate_id2D	file:
nTmp	mod_mpi_reallocate.F90	/^      integer :: n0(3), nTmp(/;"	L	subroutine:reallocate_d3D	file:
nTmp	mod_mpi_reallocate.F90	/^      integer :: n0(3), nTmp(/;"	L	subroutine:reallocate_i3D	file:
nTmp	mod_mpi_reallocate.F90	/^      integer :: n0(3), nTmp(/;"	L	subroutine:reallocate_id3D	file:
nTmp	mod_mpi_reallocate.F90	/^      integer :: n0, nTmp$/;"	L	subroutine:reallocate_d1D	file:
nTmp	mod_mpi_reallocate.F90	/^      integer :: n0, nTmp$/;"	L	subroutine:reallocate_i1D	file:
nTmp	mod_mpi_reallocate.F90	/^      integer :: n0, nTmp$/;"	L	subroutine:reallocate_id1D	file:
nVertices	mesh_mod.F90	/^  integer nVertices$/;"	v	module:mesh_mod
name	fiona_mod.F90	/^    character(*), intent(in) :: name$/;"	L	subroutine:fiona_add_att	file:
name	fiona_mod.F90	/^    character(*), intent(in) :: name$/;"	L	subroutine:fiona_add_dim	file:
name	fiona_mod.F90	/^    character(*), intent(in) :: name$/;"	L	subroutine:fiona_add_var	file:
name	fiona_mod.F90	/^    character(*), intent(in) :: name$/;"	L	subroutine:fiona_get_dim	file:
name	fiona_mod.F90	/^    character(*), intent(in) :: name$/;"	L	subroutine:fiona_output_0d	file:
name	fiona_mod.F90	/^    character(*), intent(in) :: name$/;"	L	subroutine:fiona_output_1d	file:
name	fiona_mod.F90	/^    character(*), intent(in) :: name$/;"	L	subroutine:fiona_output_2d	file:
name	fiona_mod.F90	/^    character(*), intent(in) :: name$/;"	L	subroutine:fiona_output_3d	file:
name	fiona_mod.F90	/^    character(*), intent(in) :: name$/;"	L	subroutine:fiona_output_4d	file:
name	fiona_mod.F90	/^    character(*), intent(in) :: name$/;"	L	subroutine:fiona_output_5d	file:
name	fiona_mod.F90	/^    character(30) name$/;"	L	subroutine:fiona_get_var_att_str	file:
name	fiona_mod.F90	/^    character(30) name$/;"	k	type:dataset_type
name	fiona_mod.F90	/^    character(30) name$/;"	k	type:dim_type
name	fiona_mod.F90	/^    character(30) name$/;"	k	type:var_type
name	log_mod.F90	/^    character(*), intent(in) :: name$/;"	L	subroutine:log_add_diag	file:
name	time_mod.F90	/^    character(*), intent(in) :: name$/;"	L	function:get_alert	file:
name	time_mod.F90	/^    character(*), intent(in) :: name$/;"	L	function:time_is_alerted	file:
name	time_mod.F90	/^    character(*), intent(in) :: name$/;"	L	subroutine:time_add_alert	file:
namelength	mod_mpi_interfaces.F90	/^      INTEGER :: namelength /;"	L	subroutine:mpi_init_basic_env	file:
namelist_file_path	wave_mod.F90	/^    character(*), intent(in) :: namelist_file_path$/;"	L	subroutine:wave_mod_init	file:
nc_attr	mod_mpi_test_variables.F90	/^   type, public :: nc_attr /;"	t	module:mod_mpi_test_variables
nc_attr1	mod_mpi_io_netcdf.F90	/^      type(nc_attr) :: nc_attr1$/;"	L	subroutine:netcdf_write_array_0d_dp	file:
ncid	mod_mpi_io_netcdf.F90	/^      integer :: ncid,/;"	L	subroutine:netcdf_read_array_1d_wp	file:
ncid	mod_mpi_io_netcdf.F90	/^      integer :: ncid,/;"	L	subroutine:netcdf_read_array_2d_wp	file:
ncid	mod_mpi_io_netcdf.F90	/^      integer :: ncid,/;"	L	subroutine:netcdf_read_array_3d_wp	file:
ncid	mod_mpi_io_netcdf.F90	/^      integer :: ncid,/;"	L	subroutine:netcdf_read_dimension	file:
ncid	mod_mpi_io_netcdf.F90	/^      integer :: ncid,/;"	L	subroutine:netcdf_write_array_0d_dp	file:
ncid	mod_mpi_io_netcdf.F90	/^      integer :: ncid,/;"	L	subroutine:netcdf_write_array_1d_wp	file:
ncid	mod_mpi_io_netcdf.F90	/^      integer :: ncid,/;"	L	subroutine:netcdf_write_array_2d_int	file:
ncid	mod_mpi_io_netcdf.F90	/^      integer :: ncid,/;"	L	subroutine:netcdf_write_array_2d_wp	file:
ncid	mod_mpi_io_netcdf.F90	/^      integer :: ncid,/;"	L	subroutine:netcdf_write_array_3d_wp	file:
ncid	read_forcing_mod.F90	/^        integer ncid,/;"	L	subroutine:read_met_forcing_var	file:
ncid	read_forcing_mod.F90	/^        integer ncid,/;"	L	subroutine:read_tc_key_parameters	file:
negate	timedelta_mod.F90	/^  pure elemental type(timedelta_type) function negate(/;"	f	module:timedelta_mod
neq	datetime_mod.F90	/^  pure elemental logical function neq(/;"	f	module:datetime_mod
netcdf_check	mod_mpi_io_netcdf.F90	/^   subroutine netcdf_check(/;"	s	module:mod_mpi_io_netcdf
netcdf_read	mod_mpi_io_netcdf.F90	/^   interface netcdf_read$/;"	i	module:mod_mpi_io_netcdf
netcdf_read_array_1d_wp	mod_mpi_io_netcdf.F90	/^   subroutine netcdf_read_array_1d_wp(/;"	s	module:mod_mpi_io_netcdf
netcdf_read_array_2d_wp	mod_mpi_io_netcdf.F90	/^   subroutine netcdf_read_array_2d_wp(/;"	s	module:mod_mpi_io_netcdf
netcdf_read_array_3d_wp	mod_mpi_io_netcdf.F90	/^   subroutine netcdf_read_array_3d_wp(/;"	s	module:mod_mpi_io_netcdf
netcdf_read_dimension	mod_mpi_io_netcdf.F90	/^   subroutine netcdf_read_dimension(/;"	s	module:mod_mpi_io_netcdf
netcdf_write	mod_mpi_io_netcdf.F90	/^   interface netcdf_write$/;"	i	module:mod_mpi_io_netcdf
netcdf_write_array_0d_dp	mod_mpi_io_netcdf.F90	/^   subroutine netcdf_write_array_0d_dp(/;"	s	module:mod_mpi_io_netcdf
netcdf_write_array_1d_wp	mod_mpi_io_netcdf.F90	/^   subroutine netcdf_write_array_1d_wp(/;"	s	module:mod_mpi_io_netcdf
netcdf_write_array_2d_int	mod_mpi_io_netcdf.F90	/^   subroutine netcdf_write_array_2d_int(/;"	s	module:mod_mpi_io_netcdf
netcdf_write_array_2d_wp	mod_mpi_io_netcdf.F90	/^   subroutine netcdf_write_array_2d_wp(/;"	s	module:mod_mpi_io_netcdf
netcdf_write_array_3d_wp	mod_mpi_io_netcdf.F90	/^   subroutine netcdf_write_array_3d_wp(/;"	s	module:mod_mpi_io_netcdf
new_file	fiona_mod.F90	/^    logical, intent(in), optional :: new_file$/;"	L	subroutine:apply_dataset_to_netcdf_master	file:
new_file	fiona_mod.F90	/^    logical, intent(in), optional :: new_file$/;"	L	subroutine:apply_dataset_to_netcdf_slave	file:
new_file	fiona_mod.F90	/^    logical, intent(in), optional :: new_file$/;"	L	subroutine:fiona_quick_output_1d_r8	file:
new_file	fiona_mod.F90	/^    logical, intent(in), optional :: new_file$/;"	L	subroutine:fiona_quick_output_2d_r8	file:
new_file	fiona_mod.F90	/^    logical, intent(in), optional :: new_file$/;"	L	subroutine:fiona_start_output	file:
new_file_	fiona_mod.F90	/^    logical new_file_$/;"	L	subroutine:fiona_quick_output_1d_r8	file:
new_file_	fiona_mod.F90	/^    logical new_file_$/;"	L	subroutine:fiona_quick_output_2d_r8	file:
new_time_idx	time_mod.F90	/^  integer new_time_idx$/;"	v	module:time_mod
new_value	mod_mpi_interfaces.F90	/^      integer :: i,j,new_value$/;"	L	subroutine:mpi_adjust_cell_indexes	file:
new_value	mod_mpi_interfaces.F90	/^      integer :: i,j,new_value$/;"	L	subroutine:mpi_adjust_edge_indexes	file:
new_value	mod_mpi_interfaces.F90	/^     integer :: i,new_value$/;"	L	subroutine:mpi_init_arrays	file:
next	linked_list_mod.F90	/^    type(linked_list_item_type), pointer :: next /;"	k	type:linked_list_item_type
next_item	linked_list_mod.F90	/^    type(linked_list_item_type), pointer :: next_item /;"	k	type:linked_list_iterator_type
next_key	hash_table_mod.F90	/^    character(:), allocatable :: next_key$/;"	k	type:hash_table_iterator_type
ngpus	mod_openacc_variable.F90	/^  integer :: ngpus /;"	v	module:mod_openacc_variable
num_att	fiona_mod.F90	/^    integer num_att,/;"	L	subroutine:fiona_get_var_att_str	file:
num_field	string_actions_mod.F90	/^    integer num_field,/;"	L	function:split_string_1	file:
num_proc	fiona_mod.F90	/^    integer :: num_proc /;"	k	type:dataset_type
num_spec	datetime_mod.F90	/^    integer i, j, num_spec$/;"	L	function:datetime_2	file:
old_time_idx	time_mod.F90	/^  integer old_time_idx$/;"	v	module:time_mod
omega	const_mod.F90	/^  real(real_kind), parameter :: omega /;"	v	module:const_mod
one	time_scheme_mod.F90	/^    integer, parameter :: one /;"	L	subroutine:time_integrate_advection	file:
openacc_finalize	mod_openacc_interfaces.F90	/^SUBROUTINE openacc_finalize$/;"	s	module:mod_openacc_interfaces
openacc_init	mod_openacc_interfaces.F90	/^SUBROUTINE openacc_init$/;"	s	module:mod_openacc_interfaces
output_buf	mod_mpi_interfaces.F90	/^      integer, intent(inout), dimension(:) :: output_buf$/;"	L	subroutine:mpi_input_exchange_nonroot_1d_integer	file:
output_buf	mod_mpi_interfaces.F90	/^      integer, intent(inout), dimension(:) :: output_buf$/;"	L	subroutine:mpi_input_exchange_root_1d_integer	file:
output_buf	mod_mpi_interfaces.F90	/^      integer, intent(inout), dimension(:,:) :: output_buf$/;"	L	subroutine:mpi_input_exchange_nonroot_2d_integer	file:
output_buf	mod_mpi_interfaces.F90	/^      integer, intent(inout), dimension(:,:) :: output_buf$/;"	L	subroutine:mpi_input_exchange_root_2d_integer	file:
output_buf	mod_mpi_interfaces.F90	/^      real(kind = real_kind), intent(inout), dimension(:) :: output_buf$/;"	L	subroutine:mpi_input_exchange_nonroot_1d_real	file:
output_buf	mod_mpi_interfaces.F90	/^      real(kind = real_kind), intent(inout), dimension(:) :: output_buf$/;"	L	subroutine:mpi_input_exchange_root_1d_real	file:
output_buf	mod_mpi_interfaces.F90	/^      real(kind = real_kind), intent(inout), dimension(:) :: output_buf$/;"	L	subroutine:mpi_input_oncell_1d_real	file:
output_buf	mod_mpi_interfaces.F90	/^      real(kind = real_kind), intent(inout), dimension(:,:) :: output_buf$/;"	L	subroutine:mpi_input_exchange_nonroot_2d_real	file:
output_buf	mod_mpi_interfaces.F90	/^      real(kind = real_kind), intent(inout), dimension(:,:) :: output_buf$/;"	L	subroutine:mpi_input_exchange_root_2d_real	file:
output_buf	mod_mpi_interfaces.F90	/^      real(kind = real_kind), intent(inout), dimension(:,:) :: output_buf$/;"	L	subroutine:mpi_input_oncell_2d_real	file:
output_buf	mod_mpi_interfaces.F90	/^      real(kind = real_kind), intent(inout), dimension(:,:,:) :: output_buf$/;"	L	subroutine:mpi_input_oncell_3d_real	file:
output_size	mod_mpi_interfaces.F90	/^      integer, intent(in) :: output_size$/;"	L	subroutine:mpi_input_exchange_nonroot_1d_integer	file:
output_size	mod_mpi_interfaces.F90	/^      integer, intent(in) :: output_size$/;"	L	subroutine:mpi_input_exchange_nonroot_1d_real	file:
output_size	mod_mpi_interfaces.F90	/^      integer, intent(in) :: output_size$/;"	L	subroutine:mpi_input_exchange_root_1d_integer	file:
output_size	mod_mpi_interfaces.F90	/^      integer, intent(in) :: output_size$/;"	L	subroutine:mpi_input_exchange_root_1d_real	file:
pad_string	string_actions_mod.F90	/^  pure function pad_string(/;"	f	module:string_actions_mod
pad_zeros	string_numerics_mod.F90	/^    integer, intent(in), optional :: pad_zeros$/;"	L	function:i4_to_str	file:
parallel	fiona_mod.F90	/^    logical, intent(in), optional :: parallel$/;"	L	subroutine:fiona_open_dataset	file:
params_mod	params_mod.F90	/^module params_mod$/;"	m
pattern	string_actions_mod.F90	/^    character(*), intent(in) :: pattern$/;"	L	function:count_string_1	file:
pattern	string_actions_mod.F90	/^    character(*), intent(in) :: pattern$/;"	L	function:delete_string_1	file:
pattern	string_actions_mod.F90	/^    character(*), intent(in) :: pattern$/;"	L	function:replace_string_1	file:
pattern	string_actions_mod.F90	/^    character(*), intent(in) :: pattern$/;"	L	function:replace_string_2	file:
period	time_mod.F90	/^    type(timedelta_type) period$/;"	k	type:alert_type
pi	const_mod.F90	/^  real(real_kind), parameter :: pi /;"	v	module:const_mod
pi05	const_mod.F90	/^  real(real_kind), parameter :: pi05 /;"	v	module:const_mod
pi2	const_mod.F90	/^  real(real_kind), parameter :: pi2 /;"	v	module:const_mod
pos	mod_mpi_interfaces.F90	/^      integer :: i,j,pos$/;"	L	subroutine:mpi_get_index_edges_vertices	file:
pos_1d	mod_mpi_test.F90	/^      INTEGER ::  i,pos_1d,/;"	L	subroutine:mpi_2d_data_adjust_int	file:
pos_1d	mod_mpi_test.F90	/^      INTEGER ::  i,pos_1d,/;"	L	subroutine:mpi_2d_data_adjust_real	file:
pos_1d	mod_mpi_test.F90	/^      INTEGER ::  i,pos_1d,/;"	L	subroutine:mpi_3d_data_adjust	file:
pos_2d	mod_mpi_test.F90	/^      INTEGER ::  i,pos_1d,pos_2d,/;"	L	subroutine:mpi_2d_data_adjust_int	file:
pos_2d	mod_mpi_test.F90	/^      INTEGER ::  i,pos_1d,pos_2d,/;"	L	subroutine:mpi_2d_data_adjust_real	file:
pos_2d	mod_mpi_test.F90	/^      INTEGER ::  i,pos_1d,pos_2d,/;"	L	subroutine:mpi_3d_data_adjust	file:
prefix	log_mod.F90	/^    character(*), intent(in) :: prefix$/;"	L	subroutine:log_print_diag	file:
prepare_coef_geog	wave_propag_mod.F90	/^  subroutine prepare_coef_geog(/;"	s	module:wave_propag_mod
prepare_coef_theta	wave_propag_mod.F90	/^  subroutine prepare_coef_theta(/;"	s	module:wave_propag_mod
prepare_propag	wave_propag_mod.F90	/^  subroutine prepare_propag(/;"	s	module:wave_propag_mod
pres	forcing_mod.F90	/^      real(real_kind), intent(out):: pres(/;"	L	subroutine:calc_TC_pres_field	file:
presTC	forcing_mod.F90	/^      real(real_kind), intent(in) :: presTC /;"	L	subroutine:calc_TC_pres_field	file:
presTC	forcing_mod.F90	/^      real(real_kind), intent(in) :: presTC /;"	L	subroutine:calc_TC_wind_field	file:
presTC	forcing_mod.F90	/^      real(real_kind), intent(in) :: presTC /;"	L	subroutine:calc_TC_wind_field_openacc	file:
presTC	forcing_mod.F90	/^    real(real_kind), allocatable :: presTC /;"	k	type:TC_forcing_type
presTC	mod_mpi_interfaces.F90	/^     real(kind=real_kind), intent(INOUT), dimension(:) :: presTC$/;"	L	subroutine:mpi_bcast_key_parameters	file:
presTC	read_forcing_mod.F90	/^        real(real_kind), intent(out) :: presTC(/;"	L	subroutine:read_tc_key_parameters	file:
presTC_id	read_forcing_mod.F90	/^                rmwTC_id    ,&$/;"	L	subroutine:read_tc_key_parameters	file:
prev	linked_list_mod.F90	/^    type(linked_list_item_type), pointer :: prev /;"	k	type:linked_list_item_type
proc_ID	mod_mpi_interfaces.F90	/^      integer :: i,j,k,edge_ID,proc_ID,/;"	L	subroutine:mpi_find_halo_edges	file:
proc_ID	mod_mpi_interfaces.F90	/^      integer :: i,j,k,l,m,cell_ID,proc_ID$/;"	L	subroutine:mpi_find_halo_cells	file:
proc_id	fiona_mod.F90	/^    integer :: proc_id /;"	k	type:dataset_type
propag_init	wave_propag_mod.F90	/^  subroutine propag_init(/;"	s	module:wave_propag_mod
ptr	fiona_mod.F90	/^    type(dim_type), pointer :: ptr /;"	k	type:var_dim_type
r4_missing_value	fiona_mod.F90	/^    real(4), pointer :: r4_missing_value /;"	k	type:var_type
r4_to_str	string_numerics_mod.F90	/^  pure function r4_to_str(/;"	f	module:string_numerics_mod
r8_array_to_str	string_numerics_mod.F90	/^  pure function r8_array_to_str(/;"	f	module:string_numerics_mod
r8_missing_value	fiona_mod.F90	/^    real(8), pointer :: r8_missing_value /;"	k	type:var_type
r8_to_str	string_numerics_mod.F90	/^  pure function r8_to_str(/;"	f	module:string_numerics_mod
rad	const_mod.F90	/^  real(real_kind), parameter :: rad /;"	v	module:const_mod
radius	const_mod.F90	/^  real(real_kind), parameter :: radius /;"	v	module:const_mod
ratioFre	fre_dir_mod.F90	/^  real(real_kind)  :: ratioFre /;"	v	module:fre_dir_mod
read_forcing_mod	read_forcing_mod.F90	/^module  read_forcing_mod$/;"	m
read_met_forcing_var	read_forcing_mod.F90	/^    subroutine read_met_forcing_var(/;"	s	module:read_forcing_mod
read_tc_key_parameters	read_forcing_mod.F90	/^    subroutine read_tc_key_parameters(/;"	s	module:read_forcing_mod
real_kind	const_mod.F90	/^  integer, parameter :: real_kind /;"	v	module:const_mod
real_kind_4	const_mod.F90	/^  integer, parameter :: real_kind_4 /;"	v	module:const_mod
real_kind_8	const_mod.F90	/^  integer, parameter :: real_kind_8 /;"	v	module:const_mod
real_type	mod_mpi_test.F90	/^      character(2) :: real_type$/;"	L	subroutine:mpi_data_1d_output_real	file:
real_type	mod_mpi_test.F90	/^      character(2) :: real_type$/;"	L	subroutine:mpi_data_2d_output_int	file:
real_type	mod_mpi_test.F90	/^      character(2) :: real_type$/;"	L	subroutine:mpi_data_2d_output_real	file:
real_type	mod_mpi_test.F90	/^      character(2) :: real_type$/;"	L	subroutine:mpi_data_3d_output_real	file:
reallocate	mod_mpi_reallocate.F90	/^   interface reallocate$/;"	i	module:mod_mpi_reallocate
reallocate_d1D	mod_mpi_reallocate.F90	/^   subroutine reallocate_d1D(/;"	s	module:mod_mpi_reallocate
reallocate_d2D	mod_mpi_reallocate.F90	/^   subroutine reallocate_d2D(/;"	s	module:mod_mpi_reallocate
reallocate_d3D	mod_mpi_reallocate.F90	/^   subroutine reallocate_d3D(/;"	s	module:mod_mpi_reallocate
reallocate_i1D	mod_mpi_reallocate.F90	/^   subroutine reallocate_i1D(/;"	s	module:mod_mpi_reallocate
reallocate_i2D	mod_mpi_reallocate.F90	/^   subroutine reallocate_i2D(/;"	s	module:mod_mpi_reallocate
reallocate_i3D	mod_mpi_reallocate.F90	/^   subroutine reallocate_i3D(/;"	s	module:mod_mpi_reallocate
reallocate_id1D	mod_mpi_reallocate.F90	/^   subroutine reallocate_id1D(/;"	s	module:mod_mpi_reallocate
reallocate_id2D	mod_mpi_reallocate.F90	/^   subroutine reallocate_id2D(/;"	s	module:mod_mpi_reallocate
reallocate_id3D	mod_mpi_reallocate.F90	/^   subroutine reallocate_id3D(/;"	s	module:mod_mpi_reallocate
recv_buf	mod_mpi_test.F90	/^      integer, allocatable,dimension(:) :: recv_buf$/;"	L	subroutine:mpi_data_2d_output_int	file:
recv_buf	mod_mpi_test.F90	/^      real(real_kind), allocatable,dimension(:) :: recv_buf$/;"	L	subroutine:mpi_data_2d_output_real	file:
recv_buf	mod_mpi_test.F90	/^      real(real_kind), allocatable,dimension(:) :: recv_buf$/;"	L	subroutine:mpi_data_3d_output_real	file:
recv_buf	mod_mpi_test.F90	/^      real(real_kind),allocatable,dimension(:) :: recv_buf$/;"	L	subroutine:mpi_data_1d_output_real	file:
reduce_val	wave_mod.F90	/^    real(real_kind) :: reduce_val$/;"	L	subroutine:wave_mod_run	file:
replace	string_actions_mod.F90	/^    character(*), intent(in) :: replace$/;"	L	function:replace_string_1	file:
replace	string_actions_mod.F90	/^    character(*), intent(in) :: replace$/;"	L	function:replace_string_2	file:
replace_string	string_actions_mod.F90	/^  interface replace_string$/;"	i	module:string_actions_mod
replace_string_1	string_actions_mod.F90	/^  pure function replace_string_1(/;"	f	module:string_actions_mod
replace_string_2	string_actions_mod.F90	/^  pure function replace_string_2(/;"	f	module:string_actions_mod
res	fiona_mod.F90	/^    type(dataset_type), pointer :: res$/;"	L	function:get_dataset	file:
res	string_actions_mod.F90	/^    character(:), allocatable :: res$/;"	L	function:basename_1	file:
res	string_actions_mod.F90	/^    character(:), allocatable :: res$/;"	L	function:delete_string_1	file:
res	string_actions_mod.F90	/^    character(:), allocatable :: res$/;"	L	function:dirname_1	file:
res	string_actions_mod.F90	/^    character(:), allocatable :: res$/;"	L	function:replace_string_1	file:
res	string_actions_mod.F90	/^    character(:), allocatable :: res$/;"	L	function:replace_string_2	file:
res	string_actions_mod.F90	/^    character(:), allocatable :: res$/;"	L	function:split_string_2	file:
res	string_actions_mod.F90	/^    character(width) res$/;"	L	function:pad_string	file:
res	string_actions_mod.F90	/^    type(string_type), allocatable :: res(/;"	L	function:split_string_1	file:
res	string_mod.F90	/^    character(:), allocatable :: res$/;"	L	function:string_cat_lhs	file:
res	string_mod.F90	/^    character(:), allocatable :: res$/;"	L	function:string_cat_rhs	file:
res	string_numerics_mod.F90	/^    character(:), allocatable :: res$/;"	L	function:i1_to_str	file:
res	string_numerics_mod.F90	/^    character(:), allocatable :: res$/;"	L	function:i2_to_str	file:
res	string_numerics_mod.F90	/^    character(:), allocatable :: res$/;"	L	function:i4_array_to_str	file:
res	string_numerics_mod.F90	/^    character(:), allocatable :: res$/;"	L	function:i4_to_str	file:
res	string_numerics_mod.F90	/^    character(:), allocatable :: res$/;"	L	function:i8_to_str	file:
res	string_numerics_mod.F90	/^    character(:), allocatable :: res$/;"	L	function:l_to_str	file:
res	string_numerics_mod.F90	/^    character(:), allocatable :: res$/;"	L	function:r4_to_str	file:
res	string_numerics_mod.F90	/^    character(:), allocatable :: res$/;"	L	function:r8_array_to_str	file:
res	string_numerics_mod.F90	/^    character(:), allocatable :: res$/;"	L	function:r8_to_str	file:
res	time_mod.F90	/^    logical res$/;"	L	function:time_is_alerted	file:
res	time_mod.F90	/^    type(alert_type), pointer :: res$/;"	L	function:get_alert	file:
restart_input	restart_mod.F90	/^  subroutine restart_input(/;"	s	module:restart_mod
restart_mod	restart_mod.F90	/^module restart_mod$/;"	m
restart_output	restart_mod.F90	/^  subroutine restart_output(/;"	s	module:restart_mod
rho_air	const_mod.F90	/^  real(real_kind), parameter :: rho_air /;"	v	module:const_mod
rho_sea	const_mod.F90	/^  real(real_kind), parameter :: rho_sea /;"	v	module:const_mod
ring	time_mod.F90	/^    logical :: ring /;"	k	type:alert_type
rk	const_mod.F90	/^  integer, parameter :: rk /;"	v	module:const_mod
rmwTC	forcing_mod.F90	/^      real(real_kind), intent(in) :: rmwTC /;"	L	subroutine:calc_TC_pres_field	file:
rmwTC	forcing_mod.F90	/^      real(real_kind), intent(in) :: rmwTC /;"	L	subroutine:calc_TC_wind_field	file:
rmwTC	forcing_mod.F90	/^      real(real_kind), intent(in) :: rmwTC /;"	L	subroutine:calc_TC_wind_field_openacc	file:
rmwTC	forcing_mod.F90	/^    real(real_kind), allocatable :: rmwTC /;"	k	type:TC_forcing_type
rmwTC	mod_mpi_interfaces.F90	/^     real(kind=real_kind), intent(INOUT), dimension(:) :: rmwTC$/;"	L	subroutine:mpi_bcast_key_parameters	file:
rmwTC	read_forcing_mod.F90	/^        real(real_kind), intent(out) :: rmwTC(/;"	L	subroutine:read_tc_key_parameters	file:
rmwTC2	forcing_mod.F90	/^      real(real_kind) :: rmwTC2$/;"	L	subroutine:calc_TC_pres_field	file:
rmwTC2	forcing_mod.F90	/^      real(real_kind) :: rmwTC2$/;"	L	subroutine:calc_TC_wind_field	file:
rmwTC2	forcing_mod.F90	/^      real(real_kind) :: rmwTC2$/;"	L	subroutine:calc_TC_wind_field_openacc	file:
rmwTC8	forcing_mod.F90	/^      real(real_kind) :: rmwTC8 /;"	L	subroutine:calc_TC_pres_field	file:
rmwTC8	forcing_mod.F90	/^      real(real_kind) :: rmwTC8 /;"	L	subroutine:calc_TC_wind_field	file:
rmwTC8	forcing_mod.F90	/^      real(real_kind) :: rmwTC8 /;"	L	subroutine:calc_TC_wind_field_openacc	file:
rmwTC_id	read_forcing_mod.F90	/^                latTC_id    ,&$/;"	L	subroutine:read_tc_key_parameters	file:
run_days	params_mod.F90	/^  integer run_days$/;"	v	module:params_mod
run_duration_time	time_mod.F90	/^  type(timedelta_type) run_duration_time$/;"	v	module:time_mod
run_hours	params_mod.F90	/^  integer run_hours$/;"	v	module:params_mod
run_minutes	params_mod.F90	/^  integer run_minutes$/;"	v	module:params_mod
run_seconds	params_mod.F90	/^  integer run_seconds$/;"	v	module:params_mod
run_time_main	wave_main.F90	/^  real(8) :: run_time_main,/;"	v	program:wave_main
s	face_mod.F90	/^  integer(int32)               :: s /;"	L	function:style_index	file:
s	face_mod.F90	/^  integer(int32) :: s /;"	L	subroutine:styles_samples	file:
s	string_numerics_mod.F90	/^    character(256) s$/;"	L	function:r8_array_to_str	file:
scalar_c2e_interp_operator	wave_propag_mod.F90	/^  subroutine scalar_c2e_interp_operator(/;"	s	module:wave_propag_mod
second	datetime_mod.F90	/^    integer :: second /;"	k	type:datetime_type
second	datetime_mod.F90	/^    integer, intent(in), optional :: second$/;"	L	function:datetime_1	file:
seconds	history_mod.F90	/^    real(real_kind) seconds,/;"	L	subroutine:history_init	file:
seconds	time_mod.F90	/^    real(real_kind), intent(in), optional :: seconds$/;"	L	subroutine:time_add_alert	file:
seconds	timedelta_mod.F90	/^    real(8) :: seconds /;"	k	type:timedelta_type
seconds2	history_mod.F90	/^    real(real_kind) seconds, seconds2$/;"	L	subroutine:history_init	file:
seconds_	time_mod.F90	/^    real(real_kind) seconds_$/;"	L	subroutine:time_add_alert	file:
send_buf	mod_mpi_interfaces.F90	/^      integer, allocatable, dimension(:) :: send_buf$/;"	L	subroutine:mpi_input_exchange_nonroot_1d_integer	file:
send_buf	mod_mpi_interfaces.F90	/^      integer, allocatable, dimension(:) :: send_buf$/;"	L	subroutine:mpi_input_exchange_nonroot_2d_integer	file:
send_buf	mod_mpi_interfaces.F90	/^      integer, allocatable, dimension(:) :: send_buf$/;"	L	subroutine:mpi_input_exchange_root_1d_integer	file:
send_buf	mod_mpi_interfaces.F90	/^      integer, allocatable, dimension(:) :: send_buf$/;"	L	subroutine:mpi_input_exchange_root_2d_integer	file:
send_buf	mod_mpi_interfaces.F90	/^      real(kind = real_kind), allocatable, dimension(:) :: send_buf$/;"	L	subroutine:mpi_input_exchange_nonroot_1d_real	file:
send_buf	mod_mpi_interfaces.F90	/^      real(kind = real_kind), allocatable, dimension(:) :: send_buf$/;"	L	subroutine:mpi_input_exchange_nonroot_2d_real	file:
send_buf	mod_mpi_interfaces.F90	/^      real(kind = real_kind), allocatable, dimension(:) :: send_buf$/;"	L	subroutine:mpi_input_exchange_root_1d_real	file:
send_buf	mod_mpi_interfaces.F90	/^      real(kind = real_kind), allocatable, dimension(:) :: send_buf$/;"	L	subroutine:mpi_input_exchange_root_2d_real	file:
send_buf	mod_mpi_interfaces.F90	/^      real(kind = real_kind), allocatable, dimension(:) :: send_buf$/;"	L	subroutine:mpi_input_oncell_1d_real	file:
send_buf	mod_mpi_interfaces.F90	/^      real(kind = real_kind), allocatable, dimension(:) :: send_buf$/;"	L	subroutine:mpi_input_oncell_2d_real	file:
send_buf	mod_mpi_interfaces.F90	/^      real(kind = real_kind), allocatable, dimension(:) :: send_buf$/;"	L	subroutine:mpi_input_oncell_3d_real	file:
send_buf	mod_mpi_test.F90	/^      integer :: send_buf(/;"	L	subroutine:mpi_data_2d_output_int	file:
send_buf	mod_mpi_test.F90	/^      real(real_kind) :: send_buf(/;"	L	subroutine:mpi_data_2d_output_real	file:
send_buf	mod_mpi_test.F90	/^      real(real_kind) :: send_buf(/;"	L	subroutine:mpi_data_3d_output_real	file:
send_count	mod_mpi_test.F90	/^      integer :: i, j, send_count$/;"	L	subroutine:mpi_data_2d_output_int	file:
send_count	mod_mpi_test.F90	/^      integer :: i, j, send_count$/;"	L	subroutine:mpi_data_2d_output_real	file:
send_count	mod_mpi_test.F90	/^      integer :: i, j, send_count$/;"	L	subroutine:mpi_data_3d_output_real	file:
send_var	mod_mpi_test.F90	/^      integer, intent(in), dimension(:, :) :: send_var$/;"	L	subroutine:mpi_data_2d_output_int	file:
send_var	mod_mpi_test.F90	/^      real(real_kind), intent(in), dimension(:) :: send_var$/;"	L	subroutine:mpi_data_1d_output_real	file:
send_var	mod_mpi_test.F90	/^      real(real_kind), intent(in), dimension(:, :) :: send_var$/;"	L	subroutine:mpi_data_2d_output_real	file:
send_var	mod_mpi_test.F90	/^      real(real_kind), intent(in), dimension(:, :,:) :: send_var$/;"	L	subroutine:mpi_data_3d_output_real	file:
set_datetime	datetime_mod.F90	/^  interface set_datetime$/;"	i	module:datetime_mod
set_initial_condition	initial_mod.F90	/^subroutine set_initial_condition(/;"	s	module:initial_mod
shallow_run	wam_source_module.F90	/^LOGICAL :: shallow_run=/;"	v	module:WAM_SOURCE_MODULE
sigma	fre_dir_mod.F90	/^  real(real_kind), allocatable :: sigma(/;"	v	module:fre_dir_mod
sinTheta	fre_dir_mod.F90	/^  real(real_kind), allocatable :: sinTheta(/;"	v	module:fre_dir_mod
size	array_mod.F90	/^    integer :: size /;"	k	type:array_type
size	fiona_mod.F90	/^    integer size$/;"	k	type:dim_type
size	fiona_mod.F90	/^    integer, intent(in), optional :: size$/;"	L	subroutine:fiona_add_dim	file:
size	fiona_mod.F90	/^    integer, intent(out), optional :: size$/;"	L	subroutine:fiona_get_dim	file:
size	hash_table_mod.F90	/^    integer :: size /;"	k	type:hash_table_type
size	linked_list_mod.F90	/^    integer :: size /;"	k	type:linked_list_type
size_edges_vertices	mod_mpi_interfaces.F90	/^      integer, intent(inout) :: size_edges_vertices$/;"	L	subroutine:mpi_get_index_edges_vertices	file:
source_end	mod_mpi_interfaces.F90	/^      INTEGER :: i, k, dest_process,dest_position,start,dest_postion_end,source_start,source_end$/;"	L	subroutine:mpi_get_cell_destination	file:
source_end	mod_mpi_interfaces.F90	/^      INTEGER :: i, k, dest_process,dest_position,start,dest_postion_end,source_start,source_end$/;"	L	subroutine:mpi_get_edge_destination	file:
source_start	mod_mpi_interfaces.F90	/^      INTEGER :: i, k, dest_process,dest_position,start,dest_postion_end,source_start,/;"	L	subroutine:mpi_get_cell_destination	file:
source_start	mod_mpi_interfaces.F90	/^      INTEGER :: i, k, dest_process,dest_position,start,dest_postion_end,source_start,/;"	L	subroutine:mpi_get_edge_destination	file:
specs	datetime_mod.F90	/^    character(1), allocatable :: specs(/;"	L	function:datetime_2	file:
split_string	string_actions_mod.F90	/^  interface split_string$/;"	i	module:string_actions_mod
split_string_1	string_actions_mod.F90	/^  pure function split_string_1(/;"	f	module:string_actions_mod
split_string_2	string_actions_mod.F90	/^  pure function split_string_2(/;"	f	module:string_actions_mod
staCellGlobal	history_mod.F90	/^  integer, allocatable       :: staCellGlobal(/;"	v	module:history_mod
staCellLocal	history_mod.F90	/^  integer, allocatable :: staCellLocal(/;"	v	module:history_mod
staCellLocal_tmp	history_mod.F90	/^      integer, allocatable, dimension(:) :: staCellLocal_tmp$/;"	L	subroutine:station_output_init	file:
staFL	history_mod.F90	/^  real(real_kind), allocatable :: staFL(/;"	v	module:history_mod
staMWD	history_mod.F90	/^  real(real_kind), allocatable :: staMWD(/;"	v	module:history_mod
staMWP	history_mod.F90	/^  real(real_kind), allocatable :: staMWP(/;"	v	module:history_mod
staName	history_mod.F90	/^      character(max_name_len), allocatable :: staName(/;"	L	subroutine:station_output_init	file:
staSWH	history_mod.F90	/^  real(real_kind), allocatable :: staSWH(/;"	v	module:history_mod
start	mod_mpi_interfaces.F90	/^      INTEGER :: i, k, dest_process,dest_position,start,/;"	L	subroutine:mpi_get_cell_destination	file:
start	mod_mpi_interfaces.F90	/^      INTEGER :: i, k, dest_process,dest_position,start,/;"	L	subroutine:mpi_get_edge_destination	file:
start	mod_mpi_interfaces.F90	/^      INTEGER(int_double) :: start$/;"	L	subroutine:mpi_real_3d_block_exchange_oncell_onebyone	file:
start_clock_main	wave_main.F90	/^  integer(kind=8) :: start_clock_main,/;"	v	program:wave_main
start_idx	fiona_mod.F90	/^    integer, intent(out), optional :: start_idx$/;"	L	subroutine:fiona_get_dim	file:
start_input	mod_mpi_interfaces.F90	/^      integer :: i,j,k,dimen1,start_input,/;"	L	subroutine:mpi_oncell_input_real_adjust_2d	file:
start_input	mod_mpi_interfaces.F90	/^      integer :: i,j,k,m,dimen1,dimen2,start_input,/;"	L	subroutine:mpi_oncell_input_real_adjust_3d	file:
start_output	mod_mpi_interfaces.F90	/^      integer :: i,j,k,dimen1,start_input,start_output$/;"	L	subroutine:mpi_oncell_input_real_adjust_2d	file:
start_output	mod_mpi_interfaces.F90	/^      integer :: i,j,k,dimen1,start_recv,start_output$/;"	L	subroutine:mpi_oncell_output_real_adjust_2d	file:
start_output	mod_mpi_interfaces.F90	/^      integer :: i,j,k,m,dimen1,dimen2,start_input,start_output$/;"	L	subroutine:mpi_oncell_input_real_adjust_3d	file:
start_output	mod_mpi_interfaces.F90	/^      integer :: i,j,k,m,dimen1,dimen2,start_recv,start_output$/;"	L	subroutine:mpi_oncell_output_real_adjust_3d	file:
start_recv	mod_mpi_interfaces.F90	/^      integer :: i,j,k,dimen1,start_recv,/;"	L	subroutine:mpi_oncell_output_real_adjust_2d	file:
start_recv	mod_mpi_interfaces.F90	/^      integer :: i,j,k,m,dimen1,dimen2,start_recv,/;"	L	subroutine:mpi_oncell_output_real_adjust_3d	file:
start_time	fiona_mod.F90	/^    character(*), intent(in), optional :: start_time$/;"	L	subroutine:fiona_create_dataset	file:
start_time	fiona_mod.F90	/^    character(*), intent(in), optional :: start_time$/;"	L	subroutine:fiona_init	file:
start_time	params_mod.F90	/^  integer :: start_time(/;"	v	module:params_mod
start_time	time_mod.F90	/^  type(datetime_type) start_time$/;"	v	module:time_mod
start_time_format	time_mod.F90	/^  character(30) start_time_format$/;"	v	module:time_mod
start_time_str	fiona_mod.F90	/^    character(30) :: start_time_str /;"	k	type:dataset_type
start_time_str	fiona_mod.F90	/^  character(30) :: start_time_str /;"	v	module:fiona_mod
started	linked_list_mod.F90	/^    logical, private :: started /;"	k	type:linked_list_iterator_type
stat	history_mod.F90	/^      integer :: funit, stat$/;"	L	subroutine:station_output_init	file:
state_init	state_mod.F90	/^  subroutine state_init(/;"	s	module:state_mod
state_mod	state_mod.F90	/^module state_mod$/;"	m
station_output_init	history_mod.F90	/^  subroutine station_output_init(/;"	s	module:history_mod
station_output_write	history_mod.F90	/^  subroutine station_output_write(/;"	s	module:history_mod
status	fiona_mod.F90	/^    integer status(/;"	L	subroutine:fiona_start_output	file:
status	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1, dimid_d2, dimid_d3,dimid_t, status,/;"	L	subroutine:netcdf_write_array_3d_wp	file:
status	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1, dimid_d2, dimid_t, status,/;"	L	subroutine:netcdf_write_array_2d_int	file:
status	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1, dimid_d2, dimid_t, status,/;"	L	subroutine:netcdf_write_array_2d_wp	file:
status	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1, dimid_t, status,/;"	L	subroutine:netcdf_write_array_1d_wp	file:
status	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_t, status,/;"	L	subroutine:netcdf_write_array_0d_dp	file:
status	mod_mpi_io_netcdf.F90	/^      integer, intent(in) :: status$/;"	L	subroutine:netcdf_check	file:
status	read_forcing_mod.F90	/^        integer ncid, status$/;"	L	subroutine:read_met_forcing_var	file:
status	read_forcing_mod.F90	/^        integer ncid, status$/;"	L	subroutine:read_tc_key_parameters	file:
status	read_forcing_mod.F90	/^        integer,intent(in) :: status$/;"	L	subroutine:check_nc	file:
status_def	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1, dimid_d2, dimid_d3,dimid_t, status, status_var, status_def,/;"	L	subroutine:netcdf_write_array_3d_wp	file:
status_def	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1, dimid_d2, dimid_t, status, status_var, status_def,/;"	L	subroutine:netcdf_write_array_2d_int	file:
status_def	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1, dimid_d2, dimid_t, status, status_var, status_def,/;"	L	subroutine:netcdf_write_array_2d_wp	file:
status_def	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1, dimid_t, status, status_var, status_def,/;"	L	subroutine:netcdf_write_array_1d_wp	file:
status_def	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_t, status, status_var, status_def,/;"	L	subroutine:netcdf_write_array_0d_dp	file:
status_dim	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1, dimid_d2, dimid_d3,dimid_t, status, status_var, status_def, status_dim$/;"	L	subroutine:netcdf_write_array_3d_wp	file:
status_dim	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1, dimid_d2, dimid_t, status, status_var, status_def, status_dim$/;"	L	subroutine:netcdf_write_array_2d_int	file:
status_dim	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1, dimid_d2, dimid_t, status, status_var, status_def, status_dim$/;"	L	subroutine:netcdf_write_array_2d_wp	file:
status_dim	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1, dimid_t, status, status_var, status_def, status_dim$/;"	L	subroutine:netcdf_write_array_1d_wp	file:
status_dim	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_t, status, status_var, status_def, status_dim$/;"	L	subroutine:netcdf_write_array_0d_dp	file:
status_var	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1, dimid_d2, dimid_d3,dimid_t, status, status_var,/;"	L	subroutine:netcdf_write_array_3d_wp	file:
status_var	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1, dimid_d2, dimid_t, status, status_var,/;"	L	subroutine:netcdf_write_array_2d_int	file:
status_var	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1, dimid_d2, dimid_t, status, status_var,/;"	L	subroutine:netcdf_write_array_2d_wp	file:
status_var	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_d1, dimid_t, status, status_var,/;"	L	subroutine:netcdf_write_array_1d_wp	file:
status_var	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, dimid_t, status, status_var,/;"	L	subroutine:netcdf_write_array_0d_dp	file:
step	read_forcing_mod.F90	/^        integer, intent(in) :: step /;"	L	subroutine:read_met_forcing_var	file:
step2	read_forcing_mod.F90	/^        integer time_dimid, i, time_num, time_num_sum, step2$/;"	L	subroutine:read_met_forcing_var	file:
str	string_actions_mod.F90	/^    character(*), intent(in) :: str$/;"	L	function:count_string_1	file:
str	string_actions_mod.F90	/^    character(*), intent(in) :: str$/;"	L	function:delete_string_1	file:
str	string_actions_mod.F90	/^    character(*), intent(in) :: str$/;"	L	function:pad_string	file:
str	string_actions_mod.F90	/^    character(*), intent(in) :: str$/;"	L	function:replace_string_1	file:
str	string_actions_mod.F90	/^    character(*), intent(in) :: str$/;"	L	function:split_string_1	file:
str	string_actions_mod.F90	/^    character(*), intent(in) :: str$/;"	L	function:split_string_2	file:
str	string_actions_mod.F90	/^    type(stri/;"	L	function:replace_string_2	file:
str	string_mod.F90	/^    character(*), intent(in) :: str$/;"	L	function:string_cat_lhs	file:
str	string_mod.F90	/^    character(*), intent(in) :: str$/;"	L	function:string_cat_rhs	file:
str	string_mod.F90	/^    character(*), intent(in) :: str$/;"	L	subroutine:string_assign_lhs	file:
str	string_mod.F90	/^    character(:), intent(out), allocatable :: str$/;"	L	subroutine:string_assign_rhs	file:
string	face_mod.F90	/^  character(len=*), intent(in)           :: string /;"	L	function:colorize	file:
string	face_mod.F90	/^  character(len=*), intent(in) :: string /;"	L	function:upper	file:
string	string.F90	/^module string$/;"	m
string_actions_mod	string_actions_mod.F90	/^module string_actions_mod$/;"	m
string_assign_lhs	string_mod.F90	/^  pure subroutine string_assign_lhs(/;"	s	module:string_mod
string_assign_rhs	string_mod.F90	/^  pure subroutine string_assign_rhs(/;"	s	module:string_mod
string_at	string_mod.F90	/^  pure function string_at(/;"	f	module:string_mod
string_cat_lhs	string_mod.F90	/^  pure function string_cat_lhs(/;"	f	module:string_mod
string_cat_rhs	string_mod.F90	/^  pure function string_cat_rhs(/;"	f	module:string_mod
string_final	string_mod.F90	/^  subroutine string_final(/;"	s	module:string_mod
string_len	string_mod.F90	/^  pure integer function string_len(/;"	f	module:string_mod
string_mod	string_mod.F90	/^module string_mod$/;"	m
string_numerics_mod	string_numerics_mod.F90	/^module string_numerics_mod$/;"	m
string_type	string_mod.F90	/^  type string_type$/;"	t	module:string_mod
style	face_mod.F90	/^  character(len=*), intent(in) :: style /;"	L	function:style_index	file:
style	face_mod.F90	/^  character(len=*), intent(in), optional :: style /;"	L	function:colorize	file:
style_index	face_mod.F90	/^  elemental function style_index(/;"	f	module:face
style_index	face_mod.F90	/^  integer(int32)               :: style_index /;"	L	function:style_index	file:
styles_samples	face_mod.F90	/^  subroutine styles_samples(/;"	s	module:face
sub_datetime	datetime_mod.F90	/^  type(timedelta_type) recursive function sub_datetime(/;"	f	module:datetime_mod
sub_timedelta	datetime_mod.F90	/^  pure elemental type(datetime_type) function sub_timedelta(/;"	f	module:datetime_mod
table	hash_table_mod.F90	/^    type(hash_table_/;"	L	function:hash_table_iterator	file:
table	hash_table_mod.F90	/^    type(hash_table_/;"	L	subroutine:create_hash_table	file:
table	hash_table_mod.F90	/^    type(hash_table_/;"	L	subroutine:create_hash_table_iterator	file:
table	hash_table_mod.F90	/^    type(hash_table_/;"	k	type:hash_table_iterator_type
tag	fiona_mod.F90	/^    character(*), intent(in), optional :: tag$/;"	L	subroutine:fiona_start_output	file:
tanLat	mesh_mod.F90	/^  real(real_kind), allocatable :: tanLat(/;"	v	module:mesh_mod
temp	mod_mpi_interfaces.F90	/^      INTEGER :: temp /;"	L	subroutine:mpi_sort_one	file:
temp	mod_mpi_interfaces.F90	/^      INTEGER :: temp,/;"	L	subroutine:mpi_sort_two	file:
temp	wave_propag_mod.F90	/^      real(real_kind) :: kd, kd2, temp$/;"	L	subroutine:prepare_propag	file:
temp	wave_propag_mod.F90	/^    real(real_kind) :: temp,/;"	L	subroutine:calc_tend_geog	file:
temp1	wave_propag_mod.F90	/^      real(real_kind) :: temp1,/;"	L	subroutine:calc_depth_gradient	file:
temp2	wave_propag_mod.F90	/^      real(real_kind) :: temp1, temp2$/;"	L	subroutine:calc_depth_gradient	file:
temp_b	mod_mpi_interfaces.F90	/^      INTEGER :: temp, temp_b /;"	L	subroutine:mpi_sort_two	file:
temps1	history_mod.F90	/^     real(real_kind) :: temps1,/;"	L	subroutine:calc_output	file:
temps2	history_mod.F90	/^     real(real_kind) :: temps1, temps2,/;"	L	subroutine:calc_output	file:
tend	wave_propag_mod.F90	/^    real(real_kind), intent(in)  :: tend(/;"	L	subroutine:update_state	file:
tend	wave_propag_mod.F90	/^    real(real_kind), intent(out) :: tend(/;"	L	subroutine:calc_tend_geog	file:
tend	wave_propag_mod.F90	/^    real(real_kind), intent(out) :: tend(/;"	L	subroutine:calc_tend_theta	file:
tend_geog	state_mod.F90	/^  real(real_kind), allocatable :: tend_geog(/;"	v	module:state_mod
tend_theta	state_mod.F90	/^  real(real_kind), allocatable :: tend_theta(/;"	v	module:state_mod
test	mod_mpi_interfaces.F90	/^       INTEGER :: test /;"	L	function:mpi_findloc_ordered	file:
theta	forcing_mod.F90	/^      real(real_kind) :: theta /;"	L	subroutine:calc_TC_wind_field	file:
theta	forcing_mod.F90	/^      real(real_kind) :: theta /;"	L	subroutine:calc_TC_wind_field_openacc	file:
theta	fre_dir_mod.F90	/^  real(real_kind), allocatable :: theta(/;"	v	module:fre_dir_mod
this	array_mod.F90	/^    type(array_item_type), intent(inout) :: this$/;"	L	subroutine:array_item_finalize	file:
this	array_mod.F90	/^    type(array_type), intent(inout) :: this$/;"	L	subroutine:array_finalize	file:
this	fiona_mod.F90	/^    type(dataset_type), intent(inout) :: this$/;"	L	subroutine:dataset_final	file:
this	fiona_mod.F90	/^    type(var_type), intent(inout) :: this$/;"	L	subroutine:var_final	file:
this	hash_table_mod.F90	/^    type(hash_table_type), intent(inout) :: this$/;"	L	subroutine:hash_table_finalize	file:
this	linked_list_mod.F90	/^    type(linked_list_item_type), intent(inout) :: this$/;"	L	subroutine:linked_list_item_finalize	file:
this	linked_list_mod.F90	/^    type(linked_list_type), intent(inout) :: this$/;"	L	subroutine:linked_list_finalize	file:
this	mod_mpi_reallocate.F90	/^      integer(DI), allocatable, intent(inout) :: this(/;"	L	subroutine:reallocate_id1D	file:
this	mod_mpi_reallocate.F90	/^      integer(DI), allocatable, intent(inout) :: this(/;"	L	subroutine:reallocate_id2D	file:
this	mod_mpi_reallocate.F90	/^      integer(DI), allocatable, intent(inout) :: this(/;"	L	subroutine:reallocate_id3D	file:
this	mod_mpi_reallocate.F90	/^      integer, allocatable, intent(inout) :: this(/;"	L	subroutine:reallocate_i1D	file:
this	mod_mpi_reallocate.F90	/^      integer, allocatable, intent(inout) :: this(/;"	L	subroutine:reallocate_i2D	file:
this	mod_mpi_reallocate.F90	/^      integer, allocatable, intent(inout) :: this(/;"	L	subroutine:reallocate_i3D	file:
this	mod_mpi_reallocate.F90	/^      real(kind=real_kind), allocatable, intent(inout) :: this(/;"	L	subroutine:reallocate_d1D	file:
this	mod_mpi_reallocate.F90	/^      real(kind=real_kind), allocatable, intent(inout) :: this(/;"	L	subroutine:reallocate_d2D	file:
this	mod_mpi_reallocate.F90	/^      real(kind=real_kind), allocatable, intent(inout) :: this(/;"	L	subroutine:reallocate_d3D	file:
this	string_mod.F90	/^    type(string_type), intent(in) :: this$/;"	L	function:string_cat_lhs	file:
this	string_mod.F90	/^    type(string_type), intent(in) :: this$/;"	L	function:string_cat_rhs	file:
this	string_mod.F90	/^    type(string_type), intent(in) :: this$/;"	L	subroutine:string_assign_rhs	file:
this	string_mod.F90	/^    type(string_type), intent(inout) :: this$/;"	L	subroutine:string_assign_lhs	file:
this	string_mod.F90	/^    type(string_type), intent(inout) :: this$/;"	L	subroutine:string_final	file:
time	mod_mpi_io_netcdf.F90	/^      character(lc) :: time,/;"	L	subroutine:netcdf_write_array_0d_dp	file:
time	mod_mpi_io_netcdf.F90	/^      character(lc) :: time,/;"	L	subroutine:netcdf_write_array_1d_wp	file:
time	mod_mpi_io_netcdf.F90	/^      character(lc) :: time,/;"	L	subroutine:netcdf_write_array_2d_int	file:
time	mod_mpi_io_netcdf.F90	/^      character(lc) :: time,/;"	L	subroutine:netcdf_write_array_2d_wp	file:
time	mod_mpi_io_netcdf.F90	/^      character(lc) :: time,/;"	L	subroutine:netcdf_write_array_3d_wp	file:
time	time_mod.F90	/^    type(datetime_/;"	L	subroutine:time_reset_start_time	file:
time_add_alert	time_mod.F90	/^  subroutine time_add_alert(/;"	s	module:time_mod
time_advance	time_mod.F90	/^  subroutine time_advance(/;"	s	module:time_mod
time_dimid	read_forcing_mod.F90	/^        integer time_dimid /;"	L	subroutine:read_tc_key_parameters	file:
time_dimid	read_forcing_mod.F90	/^        integer time_dimid,/;"	L	subroutine:read_met_forcing_var	file:
time_elapsed_seconds	time_mod.F90	/^  real(8) function time_elapsed_seconds(/;"	f	module:time_mod
time_in_seconds	fiona_mod.F90	/^    real(8) :: time_in_seconds /;"	k	type:dataset_type
time_in_seconds	fiona_mod.F90	/^    real(8), intent(in), optional :: time_in_seconds$/;"	L	subroutine:fiona_quick_output_1d_r8	file:
time_in_seconds	fiona_mod.F90	/^    real(8), intent(in), optional :: time_in_seconds$/;"	L	subroutine:fiona_quick_output_2d_r8	file:
time_in_seconds	fiona_mod.F90	/^    real(8), intent(in), optional :: time_in_seconds$/;"	L	subroutine:fiona_start_output	file:
time_init	time_mod.F90	/^  subroutine time_init(/;"	s	module:time_mod
time_integrate_advection	time_scheme_mod.F90	/^  subroutine time_integrate_advection(/;"	s	module:time_scheme_mod
time_integrate_source	time_scheme_mod.F90	/^subroutine time_integrate_source(/;"	s	module:time_scheme_mod
time_is_alerted	time_mod.F90	/^  function time_is_alerted(/;"	f	module:time_mod
time_is_finished	time_mod.F90	/^  logical function time_is_finished(/;"	f	module:time_mod
time_mod	time_mod.F90	/^module time_mod$/;"	m
time_num	read_forcing_mod.F90	/^        integer time_dimid, i, time_num,/;"	L	subroutine:read_met_forcing_var	file:
time_num_sum	read_forcing_mod.F90	/^        integer time_dimid, i, time_num, time_num_sum,/;"	L	subroutine:read_met_forcing_var	file:
time_reset_start_time	time_mod.F90	/^  subroutine time_reset_start_time(/;"	s	module:time_mod
time_scheme_mod	time_scheme_mod.F90	/^module time_scheme_mod$/;"	m
time_size	read_forcing_mod.F90	/^        integer,         intent(in)  :: time_size$/;"	L	subroutine:read_tc_key_parameters	file:
time_size_data	read_forcing_mod.F90	/^        integer :: time_size_data$/;"	L	subroutine:read_tc_key_parameters	file:
time_step	fiona_mod.F90	/^    integer :: time_step /;"	k	type:dataset_type
time_step	forcing_mod.F90	/^    integer,         intent(in)  :: time_step$/;"	L	subroutine:update_forcing_NWP	file:
time_step	forcing_mod.F90	/^    integer,         intent(in)  :: time_step$/;"	L	subroutine:update_forcing_NWP_openacc	file:
time_step	forcing_mod.F90	/^    integer, intent(in)  :: time_step$/;"	L	subroutine:update_forcing_TC	file:
time_step	forcing_mod.F90	/^    integer, intent(in)  :: time_step$/;"	L	subroutine:update_forcing_TC_openacc	file:
time_step	time_mod.F90	/^  integer time_step$/;"	v	module:time_mod
time_step_size	time_mod.F90	/^  type(timedelta_type) time_step_size$/;"	v	module:time_mod
time_swap_indices	time_mod.F90	/^  subroutine time_swap_indices(/;"	s	module:time_mod
time_units	fiona_mod.F90	/^    character(*), intent(in), optional :: time_units$/;"	L	subroutine:fiona_create_dataset	file:
time_units	fiona_mod.F90	/^    character(*), intent(in), optional :: time_units$/;"	L	subroutine:fiona_init	file:
time_units	forcing_mod.F90	/^    character(10) time_value, time_units$/;"	L	subroutine:forcing_init	file:
time_units	history_mod.F90	/^    character(10) time_value, time_units$/;"	L	subroutine:history_init	file:
time_units_in_seconds	fiona_mod.F90	/^    real(8) time_units_in_seconds$/;"	k	type:dataset_type
time_units_in_seconds	fiona_mod.F90	/^  real(8) time_units_in_seconds$/;"	v	module:fiona_mod
time_units_str	fiona_mod.F90	/^    character(30) :: time_units_str /;"	k	type:dataset_type
time_units_str	fiona_mod.F90	/^  character(30) :: time_units_str /;"	v	module:fiona_mod
time_value	forcing_mod.F90	/^    character(10) time_value,/;"	L	subroutine:forcing_init	file:
time_value	history_mod.F90	/^    character(10) time_value,/;"	L	subroutine:history_init	file:
time_var	fiona_mod.F90	/^    type(var_type), pointer :: time_var /;"	k	type:dataset_type
timedelta	timedelta_mod.F90	/^  type(timedelta_/;"	f	module:timedelta_mod
timedelta_mod	timedelta_mod.F90	/^module timedelta_mod$/;"	m
timedelta_type	timedelta_mod.F90	/^  type timedelta_type$/;"	t	module:timedelta_mod
timestamp	datetime_mod.F90	/^  function timestamp(/;"	f	module:datetime_mod
timestamp	mod_mpi_io_netcdf.F90	/^      character(lc) :: time, date, zone, timestamp$/;"	L	subroutine:netcdf_write_array_0d_dp	file:
timestamp	mod_mpi_io_netcdf.F90	/^      character(lc) :: time, date, zone, timestamp$/;"	L	subroutine:netcdf_write_array_1d_wp	file:
timestamp	mod_mpi_io_netcdf.F90	/^      character(lc) :: time, date, zone, timestamp$/;"	L	subroutine:netcdf_write_array_2d_int	file:
timestamp	mod_mpi_io_netcdf.F90	/^      character(lc) :: time, date, zone, timestamp$/;"	L	subroutine:netcdf_write_array_2d_wp	file:
timestamp	mod_mpi_io_netcdf.F90	/^      character(lc) :: time, date, zone, timestamp$/;"	L	subroutine:netcdf_write_array_3d_wp	file:
timezone	datetime_mod.F90	/^    real(8) :: timezone /;"	k	type:datetime_type
tmp	mod_mpi_reallocate.F90	/^      integer(DI), allocatable :: tmp(/;"	L	subroutine:reallocate_id1D	file:
tmp	mod_mpi_reallocate.F90	/^      integer(DI), allocatable :: tmp(/;"	L	subroutine:reallocate_id2D	file:
tmp	mod_mpi_reallocate.F90	/^      integer(DI), allocatable :: tmp(/;"	L	subroutine:reallocate_id3D	file:
tmp	mod_mpi_reallocate.F90	/^      integer, allocatable :: tmp(/;"	L	subroutine:reallocate_i1D	file:
tmp	mod_mpi_reallocate.F90	/^      integer, allocatable :: tmp(/;"	L	subroutine:reallocate_i2D	file:
tmp	mod_mpi_reallocate.F90	/^      integer, allocatable :: tmp(/;"	L	subroutine:reallocate_i3D	file:
tmp	mod_mpi_reallocate.F90	/^      real(kind=real_kind), allocatable :: tmp(/;"	L	subroutine:reallocate_d1D	file:
tmp	mod_mpi_reallocate.F90	/^      real(kind=real_kind), allocatable :: tmp(/;"	L	subroutine:reallocate_d2D	file:
tmp	mod_mpi_reallocate.F90	/^      real(kind=real_kind), allocatable :: tmp(/;"	L	subroutine:reallocate_d3D	file:
tmp	string_actions_mod.F90	/^    type(string_type), allocatable :: tmp(/;"	L	function:split_string_2	file:
tmp	string_numerics_mod.F90	/^    character((range(x)+4) * size(x)) tmp$/;"	L	function:i4_array_to_str	file:
tmp	string_numerics_mod.F90	/^    character(:), allocatable :: tmp$/;"	L	function:r8_array_to_str	file:
tmp	string_numerics_mod.F90	/^    character(range(x)+2) tmp$/;"	L	function:i1_to_str	file:
tmp	string_numerics_mod.F90	/^    character(range(x)+2) tmp$/;"	L	function:i2_to_str	file:
tmp	string_numerics_mod.F90	/^    character(range(x)+2) tmp$/;"	L	function:i4_to_str	file:
tmp	string_numerics_mod.F90	/^    character(range(x)+2) tmp$/;"	L	function:i8_to_str	file:
tmp	string_numerics_mod.F90	/^    character(range(x)+2) tmp$/;"	L	function:r4_to_str	file:
tmp	string_numerics_mod.F90	/^    character(range(x)+2) tmp$/;"	L	function:r8_to_str	file:
tmp	time_mod.F90	/^    integer tmp$/;"	L	subroutine:time_swap_indices	file:
tmp_id	fiona_mod.F90	/^    integer ierr, tmp_id,/;"	L	subroutine:fiona_open_dataset	file:
to_int	string_numerics_mod.F90	/^  pure integer function to_int(/;"	f	module:string_numerics_mod
to_r4	string_numerics_mod.F90	/^  pure real(4) function to_r4(/;"	f	module:string_numerics_mod
to_r8	string_numerics_mod.F90	/^  pure real(8) function to_r8(/;"	f	module:string_numerics_mod
to_str	string_numerics_mod.F90	/^  interface to_str$/;"	i	module:string_numerics_mod
totalArea	mesh_mod.F90	/^  real(real_kind) totalArea$/;"	v	module:mesh_mod
total_days	timedelta_mod.F90	/^  real(8) function total_days(/;"	f	module:timedelta_mod
total_hours	timedelta_mod.F90	/^  real(8) function total_hours(/;"	f	module:timedelta_mod
total_minutes	timedelta_mod.F90	/^  real(8) function total_minutes(/;"	f	module:timedelta_mod
total_seconds	timedelta_mod.F90	/^  real(8) function total_seconds(/;"	f	module:timedelta_mod
total_size_edges_vertices	mod_mpi_interfaces.F90	/^      integer, intent(in) :: total_size_edges_vertices$/;"	L	subroutine:mpi_get_index_edges_vertices	file:
transfer_uv_to_spd_dir	forcing_mod.F90	/^subroutine transfer_uv_to_spd_dir(/;"	s	module:forcing_mod
transfer_uv_to_spd_dir_openacc	forcing_mod.F90	/^subroutine transfer_uv_to_spd_dir_openacc(/;"	s	module:forcing_mod
ts	mod_mpi_io_netcdf.F90	/^      integer, intent(in) :: ts$/;"	L	subroutine:netcdf_write_array_0d_dp	file:
ts	mod_mpi_io_netcdf.F90	/^      integer, intent(in) :: ts$/;"	L	subroutine:netcdf_write_array_1d_wp	file:
ts	mod_mpi_io_netcdf.F90	/^      integer, intent(in) :: ts$/;"	L	subroutine:netcdf_write_array_2d_int	file:
ts	mod_mpi_io_netcdf.F90	/^      integer, intent(in) :: ts$/;"	L	subroutine:netcdf_write_array_2d_wp	file:
ts	mod_mpi_io_netcdf.F90	/^      integer, intent(in) :: ts$/;"	L	subroutine:netcdf_write_array_3d_wp	file:
ts	mod_mpi_io_netcdf.F90	/^      integer, intent(in), optional :: ts$/;"	L	subroutine:netcdf_read_array_1d_wp	file:
ts	mod_mpi_io_netcdf.F90	/^      integer, intent(in), optional :: ts$/;"	L	subroutine:netcdf_read_array_2d_wp	file:
ts	mod_mpi_io_netcdf.F90	/^      integer, intent(in), optional :: ts$/;"	L	subroutine:netcdf_read_array_3d_wp	file:
u10	forcing_mod.F90	/^    real(real_kind), allocatable :: u10(/;"	k	type:atm_forcing_type
u10	forcing_mod.F90	/^    real(real_kind), allocatable :: u10(/;"	k	type:forcing_type
u10	forcing_mod.F90	/^    real(real_kind), intent(in) :: u10(/;"	L	subroutine:transfer_uv_to_spd_dir	file:
u10	forcing_mod.F90	/^    real(real_kind), intent(in) :: u10(/;"	L	subroutine:transfer_uv_to_spd_dir_openacc	file:
u10	forcing_mod.F90	/^    real(real_kind), intent(out):: u10 /;"	L	subroutine:update_forcing_TC	file:
u10	forcing_mod.F90	/^    real(real_kind), intent(out):: u10 /;"	L	subroutine:update_forcing_TC_openacc	file:
u10	read_forcing_mod.F90	/^        real(real_kind), intent(out) :: u10(/;"	L	subroutine:read_met_forcing_var	file:
u10Dir	forcing_mod.F90	/^    real(real_kind), allocatable :: u10Dir(/;"	k	type:forcing_type
u10Dir	forcing_mod.F90	/^    real(real_kind), intent(out):: u10Dir(/;"	L	subroutine:transfer_uv_to_spd_dir	file:
u10Dir	forcing_mod.F90	/^    real(real_kind), intent(out):: u10Dir(/;"	L	subroutine:transfer_uv_to_spd_dir_openacc	file:
u10Dir	initial_mod.F90	/^  real(real_kind), intent(in) :: u10Dir(/;"	L	subroutine:cold_start_wam	file:
u10Spd	forcing_mod.F90	/^    real(real_kind), allocatable :: u10Spd(/;"	k	type:forcing_type
u10Spd	forcing_mod.F90	/^    real(real_kind), intent(out):: u10Spd(/;"	L	subroutine:transfer_uv_to_spd_dir	file:
u10Spd	forcing_mod.F90	/^    real(real_kind), intent(out):: u10Spd(/;"	L	subroutine:transfer_uv_to_spd_dir_openacc	file:
u10Spd	initial_mod.F90	/^  real(real_kind), intent(in) :: u10Spd(/;"	L	subroutine:cold_start_wam	file:
u10_id	read_forcing_mod.F90	/^        integer u10_id /;"	L	subroutine:read_met_forcing_var	file:
uc	forcing_mod.F90	/^      real(real_kind), intent(out):: uc(/;"	L	subroutine:calc_TC_wind_field	file:
uc	forcing_mod.F90	/^      real(real_kind), intent(out):: uc(/;"	L	subroutine:calc_TC_wind_field_openacc	file:
uc	forcing_mod.F90	/^    real(real_kind), allocatable :: uc /;"	k	type:TC_forcing_type
units	fiona_mod.F90	/^    character(*), intent(in) :: units$/;"	L	subroutine:fiona_add_var	file:
units	fiona_mod.F90	/^    character(*), intent(in), optional :: units$/;"	L	subroutine:fiona_add_dim	file:
units	fiona_mod.F90	/^    character(*), intent(in), optional :: units$/;"	L	subroutine:fiona_quick_output_1d_r8	file:
units	fiona_mod.F90	/^    character(*), intent(in), optional :: units$/;"	L	subroutine:fiona_quick_output_2d_r8	file:
units	fiona_mod.F90	/^    character(128) units$/;"	k	type:dim_type
units	fiona_mod.F90	/^    character(128) units$/;"	k	type:var_type
units_	fiona_mod.F90	/^    character(:), allocatable :: units_$/;"	L	subroutine:fiona_quick_output_1d_r8	file:
units_	fiona_mod.F90	/^    character(:), allocatable :: units_$/;"	L	subroutine:fiona_quick_output_2d_r8	file:
unlimited_dimid	fiona_mod.F90	/^    integer ierr, tmp_id, unlimited_dimid,/;"	L	subroutine:fiona_open_dataset	file:
update_atm_forcing	forcing_mod.F90	/^  subroutine update_atm_forcing(/;"	s	module:forcing_mod
update_atm_forcing_openacc	forcing_mod.F90	/^  subroutine update_atm_forcing_openacc(/;"	s	module:forcing_mod
update_forcing_NWP	forcing_mod.F90	/^  subroutine update_forcing_NWP(/;"	s	module:forcing_mod
update_forcing_NWP_openacc	forcing_mod.F90	/^  subroutine update_forcing_NWP_openacc(/;"	s	module:forcing_mod
update_forcing_TC	forcing_mod.F90	/^  subroutine update_forcing_TC(/;"	s	module:forcing_mod
update_forcing_TC_openacc	forcing_mod.F90	/^  subroutine update_forcing_TC_openacc(/;"	s	module:forcing_mod
update_state	wave_propag_mod.F90	/^  subroutine update_state(/;"	s	module:wave_propag_mod
upper	face_mod.F90	/^  character(len=len(string))   :: upper /;"	L	function:upper	file:
upper	face_mod.F90	/^  elemental function upper(/;"	f	module:face
upwindCell	wave_propag_mod.F90	/^    integer         :: iCell, k, m, j, iE, nEOC, upwindCell,/;"	L	subroutine:calc_tend_geog	file:
utTC	forcing_mod.F90	/^      real(real_kind), intent(in) :: utTC /;"	L	subroutine:calc_TC_wind_field	file:
utTC	forcing_mod.F90	/^      real(real_kind), intent(in) :: utTC /;"	L	subroutine:calc_TC_wind_field_openacc	file:
utTC	forcing_mod.F90	/^    real(real_kind), allocatable :: utTC /;"	k	type:TC_forcing_type
utTC	mod_mpi_interfaces.F90	/^     real(kind=real_kind), intent(INOUT), dimension(:) :: utTC$/;"	L	subroutine:mpi_bcast_key_parameters	file:
utTC	read_forcing_mod.F90	/^        real(real_kind), intent(out) :: utTC(/;"	L	subroutine:read_tc_key_parameters	file:
utTC_id	read_forcing_mod.F90	/^                presTC_id   ,&$/;"	L	subroutine:read_tc_key_parameters	file:
v10	forcing_mod.F90	/^    real(real_kind), allocatable :: v10(/;"	k	type:atm_forcing_type
v10	forcing_mod.F90	/^    real(real_kind), allocatable :: v10(/;"	k	type:forcing_type
v10	forcing_mod.F90	/^    real(real_kind), intent(in) :: v10(/;"	L	subroutine:transfer_uv_to_spd_dir	file:
v10	forcing_mod.F90	/^    real(real_kind), intent(in) :: v10(/;"	L	subroutine:transfer_uv_to_spd_dir_openacc	file:
v10	forcing_mod.F90	/^    real(real_kind), intent(out):: v10 /;"	L	subroutine:update_forcing_TC	file:
v10	forcing_mod.F90	/^    real(real_kind), intent(out):: v10 /;"	L	subroutine:update_forcing_TC_openacc	file:
v10	read_forcing_mod.F90	/^        real(real_kind), intent(out) :: u10(:), v10(/;"	L	subroutine:read_met_forcing_var	file:
v10_id	read_forcing_mod.F90	/^        integer u10_id    ,&$/;"	L	subroutine:read_met_forcing_var	file:
val	mod_mpi_interfaces.F90	/^       INTEGER :: val /;"	L	function:mpi_findloc	file:
val	mod_mpi_interfaces.F90	/^       INTEGER :: val,/;"	L	function:mpi_findloc_ordered	file:
value	fiona_mod.F90	/^    character(*), intent(out) :: value$/;"	L	subroutine:fiona_get_att_str	file:
value	fiona_mod.F90	/^    character(*), intent(out) :: value$/;"	L	subroutine:fiona_get_var_att_str	file:
value	fiona_mod.F90	/^    integer  (4), intent(out) :: value$/;"	L	subroutine:fiona_get_att_i4	file:
value	fiona_mod.F90	/^    integer  (8), intent(out) :: value$/;"	L	subroutine:fiona_get_att_i8	file:
value	fiona_mod.F90	/^    real     (4), intent(out) :: value$/;"	L	subroutine:fiona_get_att_r4	file:
value	fiona_mod.F90	/^    real     (8), intent(out) :: value$/;"	L	subroutine:fiona_get_att_r8	file:
value	string_mod.F90	/^    character(:), allocatable :: value$/;"	k	type:string_type
var	fiona_mod.F90	/^    type(var_/;"	L	subroutine:apply_dataset_to_netcdf_master	file:
var	fiona_mod.F90	/^    type(var_/;"	L	subroutine:apply_dataset_to_netcdf_slave	file:
var	fiona_mod.F90	/^    type(var_/;"	L	subroutine:fiona_get_var_att_str	file:
var	fiona_mod.F90	/^    type(var_/;"	L	subroutine:fiona_start_output	file:
var	mod_mpi_io_netcdf.F90	/^      integer, intent(in) :: var(/;"	L	subroutine:netcdf_write_array_2d_int	file:
var	mod_mpi_io_netcdf.F90	/^      real(real_kind), intent(in) :: var(/;"	L	subroutine:netcdf_write_array_1d_wp	file:
var	mod_mpi_io_netcdf.F90	/^      real(real_kind), intent(in) :: var(/;"	L	subroutine:netcdf_write_array_2d_wp	file:
var	mod_mpi_io_netcdf.F90	/^      real(real_kind), intent(in) :: var(/;"	L	subroutine:netcdf_write_array_3d_wp	file:
var	mod_mpi_io_netcdf.F90	/^      real(real_kind), intent(inout) :: var(/;"	L	subroutine:netcdf_read_array_1d_wp	file:
var	mod_mpi_io_netcdf.F90	/^      real(real_kind), intent(inout) :: var(/;"	L	subroutine:netcdf_read_array_2d_wp	file:
var	mod_mpi_io_netcdf.F90	/^      real(real_kind), intent(inout) :: var(/;"	L	subroutine:netcdf_read_array_3d_wp	file:
var	mod_mpi_io_netcdf.F90	/^      real(real_kind_8), intent(in) :: var$/;"	L	subroutine:netcdf_write_array_0d_dp	file:
var	mod_mpi_test.F90	/^      integer(i2), intent(in), dimension(:, :) ::var$/;"	L	subroutine:mpi_write_file_2d_i2	file:
var	mod_mpi_test.F90	/^      integer, intent(in), dimension(:) ::var$/;"	L	subroutine:mpi_write_file_1d_integer	file:
var	mod_mpi_test.F90	/^      real(real_kind_8), intent(in), dimension(:) ::var$/;"	L	subroutine:mpi_write_file_1d_dp	file:
var	mod_mpi_test.F90	/^      real(real_kind_8), intent(in), dimension(:, :) ::var$/;"	L	subroutine:mpi_write_file_2d_dp	file:
var	mod_mpi_test.F90	/^      real(real_kind_8), intent(in), dimension(:, :,:) ::var$/;"	L	subroutine:mpi_write_file_3d_dp	file:
var_dim_type	fiona_mod.F90	/^  type var_dim_type$/;"	t	module:fiona_mod
var_dp	mod_mpi_io_netcdf.F90	/^      real(real_kind_8) :: var_dp(/;"	L	subroutine:netcdf_write_array_0d_dp	file:
var_dp	mod_mpi_io_netcdf.F90	/^      real(real_kind_8), allocatable, dimension(:) :: var_dp$/;"	L	subroutine:netcdf_read_array_1d_wp	file:
var_dp	mod_mpi_io_netcdf.F90	/^      real(real_kind_8), allocatable, dimension(:) :: var_dp$/;"	L	subroutine:netcdf_write_array_1d_wp	file:
var_dp	mod_mpi_io_netcdf.F90	/^      real(real_kind_8), allocatable, dimension(:, :) :: var_dp$/;"	L	subroutine:netcdf_read_array_2d_wp	file:
var_dp	mod_mpi_io_netcdf.F90	/^      real(real_kind_8), allocatable, dimension(:, :) :: var_dp$/;"	L	subroutine:netcdf_write_array_2d_int	file:
var_dp	mod_mpi_io_netcdf.F90	/^      real(real_kind_8), allocatable, dimension(:, :) :: var_dp$/;"	L	subroutine:netcdf_write_array_2d_wp	file:
var_dp	mod_mpi_io_netcdf.F90	/^      real(real_kind_8), allocatable, dimension(:, :, :) :: var_dp$/;"	L	subroutine:netcdf_read_array_3d_wp	file:
var_dp	mod_mpi_io_netcdf.F90	/^      real(real_kind_8), allocatable, dimension(:, :,:) :: var_dp$/;"	L	subroutine:netcdf_write_array_3d_wp	file:
var_final	fiona_mod.F90	/^  subroutine var_final(/;"	s	module:fiona_mod
var_i1	mod_mpi_io_netcdf.F90	/^      integer(i1) :: var_i1(/;"	L	subroutine:netcdf_write_array_0d_dp	file:
var_i1	mod_mpi_io_netcdf.F90	/^      integer(i1), allocatable, dimension(:) :: var_i1$/;"	L	subroutine:netcdf_read_array_1d_wp	file:
var_i1	mod_mpi_io_netcdf.F90	/^      integer(i1), allocatable, dimension(:) :: var_i1$/;"	L	subroutine:netcdf_write_array_1d_wp	file:
var_i1	mod_mpi_io_netcdf.F90	/^      integer(i1), allocatable, dimension(:, :) :: var_i1$/;"	L	subroutine:netcdf_read_array_2d_wp	file:
var_i1	mod_mpi_io_netcdf.F90	/^      integer(i1), allocatable, dimension(:, :) :: var_i1$/;"	L	subroutine:netcdf_write_array_2d_int	file:
var_i1	mod_mpi_io_netcdf.F90	/^      integer(i1), allocatable, dimension(:, :) :: var_i1$/;"	L	subroutine:netcdf_write_array_2d_wp	file:
var_i1	mod_mpi_io_netcdf.F90	/^      integer(i1), allocatable, dimension(:, :, :) :: var_i1$/;"	L	subroutine:netcdf_read_array_3d_wp	file:
var_i1	mod_mpi_io_netcdf.F90	/^      integer(i1), allocatable, dimension(:, :,:) :: var_i1$/;"	L	subroutine:netcdf_write_array_3d_wp	file:
var_i2	mod_mpi_io_netcdf.F90	/^      integer(i2) :: var_i2(/;"	L	subroutine:netcdf_write_array_0d_dp	file:
var_i2	mod_mpi_io_netcdf.F90	/^      integer(i2), allocatable, dimension(:) :: var_i2$/;"	L	subroutine:netcdf_read_array_1d_wp	file:
var_i2	mod_mpi_io_netcdf.F90	/^      integer(i2), allocatable, dimension(:) :: var_i2$/;"	L	subroutine:netcdf_write_array_1d_wp	file:
var_i2	mod_mpi_io_netcdf.F90	/^      integer(i2), allocatable, dimension(:, :) :: var_i2$/;"	L	subroutine:netcdf_read_array_2d_wp	file:
var_i2	mod_mpi_io_netcdf.F90	/^      integer(i2), allocatable, dimension(:, :) :: var_i2$/;"	L	subroutine:netcdf_write_array_2d_int	file:
var_i2	mod_mpi_io_netcdf.F90	/^      integer(i2), allocatable, dimension(:, :) :: var_i2$/;"	L	subroutine:netcdf_write_array_2d_wp	file:
var_i2	mod_mpi_io_netcdf.F90	/^      integer(i2), allocatable, dimension(:, :, :) :: var_i2$/;"	L	subroutine:netcdf_read_array_3d_wp	file:
var_i2	mod_mpi_io_netcdf.F90	/^      integer(i2), allocatable, dimension(:, :,:) :: var_i2$/;"	L	subroutine:netcdf_write_array_3d_wp	file:
var_i4	mod_mpi_io_netcdf.F90	/^      integer(i4) :: var_i4(/;"	L	subroutine:netcdf_write_array_0d_dp	file:
var_i4	mod_mpi_io_netcdf.F90	/^      integer(i4), allocatable, dimension(:) :: var_i4$/;"	L	subroutine:netcdf_read_array_1d_wp	file:
var_i4	mod_mpi_io_netcdf.F90	/^      integer(i4), allocatable, dimension(:) :: var_i4$/;"	L	subroutine:netcdf_write_array_1d_wp	file:
var_i4	mod_mpi_io_netcdf.F90	/^      integer(i4), allocatable, dimension(:, :) :: var_i4$/;"	L	subroutine:netcdf_read_array_2d_wp	file:
var_i4	mod_mpi_io_netcdf.F90	/^      integer(i4), allocatable, dimension(:, :) :: var_i4$/;"	L	subroutine:netcdf_write_array_2d_int	file:
var_i4	mod_mpi_io_netcdf.F90	/^      integer(i4), allocatable, dimension(:, :) :: var_i4$/;"	L	subroutine:netcdf_write_array_2d_wp	file:
var_i4	mod_mpi_io_netcdf.F90	/^      integer(i4), allocatable, dimension(:, :, :) :: var_i4$/;"	L	subroutine:netcdf_read_array_3d_wp	file:
var_i4	mod_mpi_io_netcdf.F90	/^      integer(i4), allocatable, dimension(:, :,:) :: var_i4$/;"	L	subroutine:netcdf_write_array_3d_wp	file:
var_longname	mod_mpi_test_variables.F90	/^      character(lc)  :: var_longname /;"	k	type:nc_attr
var_name	fiona_mod.F90	/^    character(*), intent(in ) :: var_name$/;"	L	subroutine:fiona_get_var_att_str	file:
var_name	fiona_mod.F90	/^    character(*), intent(in ) :: var_name$/;"	L	subroutine:fiona_input_3d	file:
var_name	fiona_mod.F90	/^    character(*), intent(in ) :: var_name$/;"	L	subroutine:fiona_input_4d	file:
var_name	fiona_mod.F90	/^    character(*), intent(in ) :: var_name$/;"	L	subroutine:fiona_input_5d	file:
var_name	fiona_mod.F90	/^    character(*), intent(in) :: var_name$/;"	L	function:fiona_has_var	file:
var_name	fiona_mod.F90	/^    character(*), intent(in) :: var_name$/;"	L	subroutine:fiona_input_0d	file:
var_name	fiona_mod.F90	/^    character(*), intent(in) :: var_name$/;"	L	subroutine:fiona_input_1d	file:
var_name	fiona_mod.F90	/^    character(*), intent(in) :: var_name$/;"	L	subroutine:fiona_input_2d	file:
var_name	fiona_mod.F90	/^    character(*), intent(in) :: var_name$/;"	L	subroutine:fiona_quick_output_1d_r8	file:
var_name	fiona_mod.F90	/^    character(*), intent(in) :: var_name$/;"	L	subroutine:fiona_quick_output_2d_r8	file:
var_name	mod_mpi_interfaces.F90	/^      character(*), intent(IN) :: var_name$/;"	L	subroutine:mpi_output_oncell_1d_integer	file:
var_name	mod_mpi_interfaces.F90	/^      character(*), intent(IN) :: var_name$/;"	L	subroutine:mpi_output_oncell_1d_real	file:
var_name	mod_mpi_interfaces.F90	/^      character(*), intent(IN) :: var_name$/;"	L	subroutine:mpi_output_oncell_2d_real	file:
var_name	mod_mpi_interfaces.F90	/^      character(*), intent(IN) :: var_name$/;"	L	subroutine:mpi_output_oncell_3d_real	file:
var_name	mod_mpi_interfaces.F90	/^      character(*), intent(IN) :: var_name$/;"	L	subroutine:mpi_output_onedge_1d_real	file:
var_size	mod_mpi_test.F90	/^      integer, intent(in) :: var_size$/;"	L	subroutine:mpi_write_file_1d_dp	file:
var_size	mod_mpi_test.F90	/^      integer, intent(in) :: var_size$/;"	L	subroutine:mpi_write_file_1d_integer	file:
var_size1	mod_mpi_test.F90	/^      integer, intent(in) :: var_size1,/;"	L	subroutine:mpi_write_file_2d_dp	file:
var_size1	mod_mpi_test.F90	/^      integer, intent(in) :: var_size1,/;"	L	subroutine:mpi_write_file_2d_i2	file:
var_size1	mod_mpi_test.F90	/^      integer, intent(in) :: var_size1,/;"	L	subroutine:mpi_write_file_3d_dp	file:
var_size2	mod_mpi_test.F90	/^      integer, intent(in) :: var_size1, var_size2$/;"	L	subroutine:mpi_write_file_2d_dp	file:
var_size2	mod_mpi_test.F90	/^      integer, intent(in) :: var_size1, var_size2$/;"	L	subroutine:mpi_write_file_2d_i2	file:
var_size2	mod_mpi_test.F90	/^      integer, intent(in) :: var_size1, var_size2,/;"	L	subroutine:mpi_write_file_3d_dp	file:
var_size3	mod_mpi_test.F90	/^      integer, intent(in) :: var_size1, var_size2, var_size3$/;"	L	subroutine:mpi_write_file_3d_dp	file:
var_sp	mod_mpi_io_netcdf.F90	/^      real(real_kind_4) :: var_sp(/;"	L	subroutine:netcdf_write_array_0d_dp	file:
var_sp	mod_mpi_io_netcdf.F90	/^      real(real_kind_4), allocatable, dimension(:) :: var_sp$/;"	L	subroutine:netcdf_read_array_1d_wp	file:
var_sp	mod_mpi_io_netcdf.F90	/^      real(real_kind_4), allocatable, dimension(:) :: var_sp$/;"	L	subroutine:netcdf_write_array_1d_wp	file:
var_sp	mod_mpi_io_netcdf.F90	/^      real(real_kind_4), allocatable, dimension(:, :) :: var_sp$/;"	L	subroutine:netcdf_read_array_2d_wp	file:
var_sp	mod_mpi_io_netcdf.F90	/^      real(real_kind_4), allocatable, dimension(:, :) :: var_sp$/;"	L	subroutine:netcdf_write_array_2d_int	file:
var_sp	mod_mpi_io_netcdf.F90	/^      real(real_kind_4), allocatable, dimension(:, :) :: var_sp$/;"	L	subroutine:netcdf_write_array_2d_wp	file:
var_sp	mod_mpi_io_netcdf.F90	/^      real(real_kind_4), allocatable, dimension(:, :, :) :: var_sp$/;"	L	subroutine:netcdf_read_array_3d_wp	file:
var_sp	mod_mpi_io_netcdf.F90	/^      real(real_kind_4), allocatable, dimension(:, :,:) :: var_sp$/;"	L	subroutine:netcdf_write_array_3d_wp	file:
var_type	fiona_mod.F90	/^  type var_type$/;"	t	module:fiona_mod
var_units	mod_mpi_test_variables.F90	/^      character(lc)  :: var_units /;"	k	type:nc_attr
variant_dim	fiona_mod.F90	/^    character(*), intent(in), optional :: variant_dim$/;"	L	subroutine:fiona_open_dataset	file:
variant_dim	fiona_mod.F90	/^    character(30) :: variant_dim /;"	k	type:dataset_type
varid	fiona_mod.F90	/^    integer ierr, varid$/;"	L	function:fiona_has_var	file:
varid	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid,/;"	L	subroutine:netcdf_read_array_1d_wp	file:
varid	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid,/;"	L	subroutine:netcdf_read_array_2d_wp	file:
varid	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid,/;"	L	subroutine:netcdf_read_array_3d_wp	file:
varid	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid,/;"	L	subroutine:netcdf_write_array_0d_dp	file:
varid	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid,/;"	L	subroutine:netcdf_write_array_1d_wp	file:
varid	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid,/;"	L	subroutine:netcdf_write_array_2d_int	file:
varid	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid,/;"	L	subroutine:netcdf_write_array_2d_wp	file:
varid	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid,/;"	L	subroutine:netcdf_write_array_3d_wp	file:
varname	mod_mpi_io_netcdf.F90	/^      character(*), intent(in) :: filename, varname$/;"	L	subroutine:netcdf_read_array_1d_wp	file:
varname	mod_mpi_io_netcdf.F90	/^      character(*), intent(in) :: filename, varname$/;"	L	subroutine:netcdf_read_array_2d_wp	file:
varname	mod_mpi_io_netcdf.F90	/^      character(*), intent(in) :: filename, varname$/;"	L	subroutine:netcdf_read_array_3d_wp	file:
varname	mod_mpi_io_netcdf.F90	/^      character(*), intent(in) :: filename, varname,/;"	L	subroutine:netcdf_write_array_0d_dp	file:
varname	mod_mpi_io_netcdf.F90	/^      character(*), intent(in) :: filename, varname,/;"	L	subroutine:netcdf_write_array_1d_wp	file:
varname	mod_mpi_io_netcdf.F90	/^      character(*), intent(in) :: filename, varname,/;"	L	subroutine:netcdf_write_array_2d_int	file:
varname	mod_mpi_io_netcdf.F90	/^      character(*), intent(in) :: filename, varname,/;"	L	subroutine:netcdf_write_array_2d_wp	file:
varname	mod_mpi_io_netcdf.F90	/^      character(*), intent(in) :: filename, varname,/;"	L	subroutine:netcdf_write_array_3d_wp	file:
varname	mod_mpi_io_netcdf.F90	/^      character(*), intent(in), optional :: varname$/;"	L	subroutine:netcdf_check	file:
vars	fiona_mod.F90	/^    type(hash_table_type) vars$/;"	k	type:dataset_type
vc	forcing_mod.F90	/^      real(real_kind), intent(out):: vc(/;"	L	subroutine:calc_TC_wind_field	file:
vc	forcing_mod.F90	/^      real(real_kind), intent(out):: vc(/;"	L	subroutine:calc_TC_wind_field_openacc	file:
vc	forcing_mod.F90	/^    real(real_kind), allocatable :: vc /;"	k	type:TC_forcing_type
vertexDegree	mesh_mod.F90	/^  integer vertexDegree /;"	v	module:mesh_mod
vertexDegree	mod_mpi_interfaces.F90	/^      integer, intent(INOUT) :: vertexDegree$/;"	L	subroutine:mpi_pack_bcast	file:
verticesOnCell	mesh_mod.F90	/^  integer, allocatable :: verticesOnCell(/;"	v	module:mesh_mod
verticesOnEdge	mesh_mod.F90	/^  integer, allocatable :: verticesOnEdge(/;"	v	module:mesh_mod
vtTC	forcing_mod.F90	/^      real(real_kind), intent(in) :: vtTC /;"	L	subroutine:calc_TC_wind_field	file:
vtTC	forcing_mod.F90	/^      real(real_kind), intent(in) :: vtTC /;"	L	subroutine:calc_TC_wind_field_openacc	file:
vtTC	forcing_mod.F90	/^    real(real_kind), allocatable :: vtTC /;"	k	type:TC_forcing_type
vtTC	mod_mpi_interfaces.F90	/^     real(kind=real_kind), intent(INOUT), dimension(:) :: vtTC$/;"	L	subroutine:mpi_bcast_key_parameters	file:
vtTC	read_forcing_mod.F90	/^        real(real_kind), intent(out) :: utTC(:), vtTC(/;"	L	subroutine:read_tc_key_parameters	file:
vtTC_id	read_forcing_mod.F90	/^                utTC_id     ,&$/;"	L	subroutine:read_tc_key_parameters	file:
w	string_numerics_mod.F90	/^    integer w$/;"	L	function:r4_to_str	file:
w	string_numerics_mod.F90	/^    integer w$/;"	L	function:r8_to_str	file:
w	string_numerics_mod.F90	/^    integer w,/;"	L	function:r8_array_to_str	file:
wave	restart_mod.F90	/^    type(wave_/;"	L	subroutine:restart_input	file:
wave	restart_mod.F90	/^    type(wave_/;"	L	subroutine:restart_output	file:
wave	state_mod.F90	/^    type(wave_/;"	L	subroutine:allocate_wave	file:
wave	state_mod.F90	/^  type(wave_/;"	v	module:state_mod
wave_breaking_run	wam_source_module.F90	/^LOGICAL :: shallow_run=.true., wave_breaking_run=/;"	v	module:WAM_SOURCE_MODULE
wave_main	wave_main.F90	/^program wave_main$/;"	p
wave_mod	wave_mod.F90	/^module wave_mod$/;"	m
wave_mod_init	wave_mod.F90	/^  subroutine wave_mod_init(/;"	s	module:wave_mod
wave_mod_run	wave_mod.F90	/^  subroutine wave_mod_run(/;"	s	module:wave_mod
wave_numb	wave_propag_mod.F90	/^  REAL(real_kind) FUNCTION wave_numb /;"	f	module:wave_propag_mod
wave_propag_mod	wave_propag_mod.F90	/^module wave_propag_mod$/;"	m
wave_type	state_mod.F90	/^  type wave_type$/;"	t	module:state_mod
width	string_actions_mod.F90	/^    integer, intent(in) :: width$/;"	L	function:pad_string	file:
width	string_numerics_mod.F90	/^    integer, intent(in), optional :: width$/;"	L	function:r4_to_str	file:
width	string_numerics_mod.F90	/^    integer, intent(in), optional :: width$/;"	L	function:r8_array_to_str	file:
width	string_numerics_mod.F90	/^    integer, intent(in), optional :: width$/;"	L	function:r8_to_str	file:
wind_file_path	read_forcing_mod.F90	/^        character(max_file_path_len) :: wind_file_path$/;"	L	subroutine:read_met_forcing_var	file:
wspd	forcing_mod.F90	/^    real(real_kind) :: wspd /;"	L	subroutine:transfer_uv_to_spd_dir	file:
wspd	forcing_mod.F90	/^    real(real_kind) :: wspd /;"	L	subroutine:transfer_uv_to_spd_dir_openacc	file:
x	string_numerics_mod.F90	/^    character(*), intent(in) :: x$/;"	L	function:to_int	file:
x	string_numerics_mod.F90	/^    character(*), intent(in) :: x$/;"	L	function:to_r4	file:
x	string_numerics_mod.F90	/^    character(*), intent(in) :: x$/;"	L	function:to_r8	file:
x	string_numerics_mod.F90	/^    integer(1), intent(in) :: x$/;"	L	function:i1_to_str	file:
x	string_numerics_mod.F90	/^    integer(2), intent(in) :: x$/;"	L	function:i2_to_str	file:
x	string_numerics_mod.F90	/^    integer(4), intent(in) :: x$/;"	L	function:i4_to_str	file:
x	string_numerics_mod.F90	/^    integer(4), intent(in) :: x(/;"	L	function:i4_array_to_str	file:
x	string_numerics_mod.F90	/^    integer(8), intent(in) :: x$/;"	L	function:i8_to_str	file:
x	string_numerics_mod.F90	/^    logical, intent(in) :: x$/;"	L	function:l_to_str	file:
x	string_numerics_mod.F90	/^    real(4), intent(in) :: x$/;"	L	function:r4_to_str	file:
x	string_numerics_mod.F90	/^    real(8), intent(in) :: x$/;"	L	function:r8_to_str	file:
x	string_numerics_mod.F90	/^    real(8), intent(in) :: x(/;"	L	function:r8_array_to_str	file:
xCell	mesh_mod.F90	/^  real(real_kind), allocatable :: xCell(/;"	v	module:mesh_mod
xEdge	mesh_mod.F90	/^  real(real_kind), allocatable :: xEdge(/;"	v	module:mesh_mod
xVertex	mesh_mod.F90	/^  real(real_kind), allocatable :: xVertex(/;"	v	module:mesh_mod
xtype	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, xtype$/;"	L	subroutine:netcdf_read_array_1d_wp	file:
xtype	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, xtype$/;"	L	subroutine:netcdf_read_array_2d_wp	file:
xtype	mod_mpi_io_netcdf.F90	/^      integer :: ncid, varid, xtype$/;"	L	subroutine:netcdf_read_array_3d_wp	file:
yCell	mesh_mod.F90	/^  real(real_kind), allocatable :: yCell(/;"	v	module:mesh_mod
yEdge	mesh_mod.F90	/^  real(real_kind), allocatable :: yEdge(/;"	v	module:mesh_mod
yVertex	mesh_mod.F90	/^  real(real_kind), allocatable :: yVertex(/;"	v	module:mesh_mod
year	datetime_mod.F90	/^    integer :: year /;"	k	type:datetime_type
year	datetime_mod.F90	/^    integer, intent(in) :: year$/;"	L	function:days_of_month	file:
year	datetime_mod.F90	/^    integer, intent(in) :: year$/;"	L	function:days_of_year	file:
year	datetime_mod.F90	/^    integer, intent(in) :: year$/;"	L	function:is_leap_year	file:
year	datetime_mod.F90	/^    integer, intent(in), optional :: year$/;"	L	function:datetime_1	file:
zCell	mesh_mod.F90	/^  real(real_kind), allocatable :: zCell(/;"	v	module:mesh_mod
zEdge	mesh_mod.F90	/^  real(real_kind), allocatable :: zEdge(/;"	v	module:mesh_mod
zVertex	mesh_mod.F90	/^  real(real_kind), allocatable :: zVertex(/;"	v	module:mesh_mod
zone	mod_mpi_io_netcdf.F90	/^      character(lc) :: time, date, zone,/;"	L	subroutine:netcdf_write_array_0d_dp	file:
zone	mod_mpi_io_netcdf.F90	/^      character(lc) :: time, date, zone,/;"	L	subroutine:netcdf_write_array_1d_wp	file:
zone	mod_mpi_io_netcdf.F90	/^      character(lc) :: time, date, zone,/;"	L	subroutine:netcdf_write_array_2d_int	file:
zone	mod_mpi_io_netcdf.F90	/^      character(lc) :: time, date, zone,/;"	L	subroutine:netcdf_write_array_2d_wp	file:
zone	mod_mpi_io_netcdf.F90	/^      character(lc) :: time, date, zone,/;"	L	subroutine:netcdf_write_array_3d_wp	file:
